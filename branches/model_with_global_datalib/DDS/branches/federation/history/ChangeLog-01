Tue Jun  7 16:55:09 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Fixing compilation warnings on solaris.

Fri Jun  3 19:43:05 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.inl:

          Ensure that the maximum number of blocks per packet is not
          exceeded when filling the iovec to send.

Fri Jun  3 19:30:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.inl:

          Ensure that the maximum number of samples per packet does not
          exceed the maximum number of blocks per packet.

Fri Jun  3 18:37:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:

          Changed the MAX_SEND_BLOCKS to be ACE_IOV_MAX if 
          it is defined.

Fri Jun  3 17:33:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:

          Made the Reader and Writer sleep for 5 seconds
          before release the transport. This would avoid
          the access violation on
          TransportInterface::remove_association.

Fri Jun  3 16:06:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added delay shutdown option to subscriber. 
          This is to avoid the subscriber disconnect before the 
          publisher shutdown which might still be sending  
          liveliness messages or unregister messages.

Fri Jun  3 15:12:49 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/common.cpp:

          Forgot to add this file earlier.

Fri Jun  3 14:28:57 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:

          Made shutdown not destroy the poa from the client's
          orb and made the_poa to get the root poa from the 
          orb if it's nil.
          
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:

          Made the subscriber pass the client's orb to the 
          service participant so the framwork can use it.

Fri Jun  3 13:28:49 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/README:
        
          Allowed the test to be run with "take" parameter that makes
          it take instead of read samples.
          
Fri Jun  3 12:57:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/obsolete_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/README:

          Renamed the run_test.pl to obsolete_test.pl and 
          documented the test is obsolete.
          
Fri Jun  3 13:12:02 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:

          Changed the test to wait until all data readers have connected.

Fri Jun  3 14:06:17 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

          Changed InstanceState::accessed back to the way it was.

Fri Jun  3 09:28:49 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:

          Fixed test shutdown problem.

Thu Jun  3 08:01:03 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          Fix some spelling errors in comments and some
          internally-used function names.

Thu Jun  2 23:48:09 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Resolve build errors found using gcc but not VC++ 7.1.

Thu Jun  2 22:47:53 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/DDS/DCPS/DataReaderImpl.inl:
        * orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:

          Fix the liveliness changed status and instance state implementation.
          Liveliness is tracked per DataWriter in a given DataReader

        * orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fixed the listener_for() method to only get the factories listener
          if the mask did not enable at the current level.

        * tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DDS/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DDS/DCPS/LivelinessTest/common.h:
        * tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Make the test tougher to pass and refect how liveliness should work.

Thu Jun  2 21:32:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DDS/DCPS/common/TestSupport.h:
        * tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * tests/DDS/DCPS/FooTest2/main.cpp:
        * tests/DDS/DCPS/FooTest3/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3/main.cpp:
        * tests/DDS/DCPS/FooTest3/Writer.cpp:
        * tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_1/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * tests/DDS/DCPS/FooTest3_2/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.cpp:
        * tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DDS/DCPS/FooTest5/Writer.cpp:
        * tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Replaced ACE_ASSERT with TEST_CHECK so the tests can work
          on non-debug builds.

Thu Jun  2 13:55:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:

          Changed to remove an association from the mapping even if the
          subscriber or publisher dies and is marked dead.

Thu Jun  2 12:40:07 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:

          Change logging to a file when output expects to have ERROR in
          it.

Thu Jun  2 11:52:38 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Made the sequence length to be 10 instead of 100 so the
          test can pass on Solaris.
          - The problem with longer sequence has not been
            investigated at this time.

Thu Jun  2 12:02:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Clean up comment so doesnt show up in search for //remove

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDebug.h:

          Only build transport debugging code if ACE_NDEBUG is defined.

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/subscriber.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/subscriber.cpp:

          Clean up //remove comments put in by Trevor.

Thu Jun  2 10:41:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Fixed a problem in remove_oldest_sample that does not
          remove the sample in sending list from the next_send_sample
          link list.

        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Fixed the not cleanup problem.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Removed a debug logging.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:

          Minor changes.

Thu Jun  2 09:47:10 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Only call DataReaderImpl::liveliness_lost if the instance
          is currently active.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/subscriber.cpp:

          Change test to use liveliness_lost_status instead of
          maintaining its own counter.

Thu Jun  2 08:44:02 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.h:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:

          Fix the @file comments at the top of the file to reflect
          the proper file name.

Wed Jun  1 23:16:43 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Fix problem where library tried to link with itself.

Wed Jun  1 22:02:21 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * TAO/orbsvcs/DDS/DCPSInfoRepo.mpc:
        * TAO/orbsvcs/orbsvcs/DdsDcps.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/SimpleE2E.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/TCPListener.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/UDPListener.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/UDPNoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/idl_test1_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/DcpsIntegration/dcps_integration.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_2/FooTest3_2.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5_0/FooTest5_0.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType5/DcpsFooType5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/MultiTopicTest/MultiTopicTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Serializer/Serializer.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/common/common.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/unit/UnitTest.mpc:
        * TAO/orbsvcs/tests/DDS/transport/dds_comparative/dds_transport_comparative.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple/DDS_transport_simple.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * TAO/orbsvcs/tests/DDS/transport/simple_n/DDS_transport_simple_n.mpc:
        * TAO/orbsvcs/tests/DDS/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * TAO/orbsvcs/tests/DDS/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Modify mpc files to use new dcps and dcpsexe parent projects.
          This should simplify documentation and maintenance.

Wed Jun  1 17:54:27 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

           Added temporary debug log.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:

           Added #include <string> to avoid error for inline=0 builds.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Made the test complete faster and added debugging logs.

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.cpp:

          Write output to stderr so logs would collate ACE_DEBUG/ACE_ERROR and
          printf logs better.


Wed Jun  1 13:54:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Added option to specify the directory of files used
          to coordinate the publisher and subscriber.

Wed Jun  1 12:59:25 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Corrected the mixed transport test option parameter.

Wed Jun  1 11:34:08 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Removed loggings in constructor and destructor.

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.h:
        * orbsvcs/tests/DDS/transport/dds_comparative/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.h:
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.h:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.h:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_n/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.h:

          Removed /**/ in the include lines and fixed some warnings.

Wed Jun  1 10:15:23 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Removed the goto usages and used exception instead.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:

          Removed unused variable declaration.

Wed Jun  1 09:22:49 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:

          Add some extra scopes to avoid VC6 for loop scoping problems.

Tue May 31 23:27:20 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Limit debug output to when DCPS_debug_level is not zero.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Avoid hex_dump calls when not writing the results.
          Should improve performance since it happened on every sample received.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:

          Add comment on why the ORB is "paused".

Tue May 31 21:25:53 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DdsDcps.mpc:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooType5/DcpsFooType5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:

          Modified these MPC files to support dcps_ts.pl build rules.
          This automatically generates *TypeSupport.idl,
          *TypeSupportImpl.h, and *TypeSupportImpl.cpp files.

        * TAO/orbsvcs/orbsvcs/DdsDcpsGenerateBuiltinTopicDataTypeSupport.pl:
        * TAO/orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * TAO/orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * TAO/orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:
        * TAO/orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * TAO/orbsvcs/performance-tests/DDS/generateTS.pl:
        * TAO/orbsvcs/tests/DDS/generateTS.pl:

          Removed these files.  The C++ and IDL files are no longer needed
          because they are automatically generated.  The perl scripts are
          no longer needed because the build system will do this work.

Tue May 31 17:28:55 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Regenerated files so the listener tests run.

        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/DataReaderListener.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/UDPListener.mpc:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/domain_ids:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/UDPListenerTest/subscriber.cpp:

          Added UDP listener test.

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:

          Changed some formatting.

Tue May 31 16:07:26 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Add .in() call to DataReaderListener_var usage to avoid
          implicit conversions that VC6 can't do.

Tue May 31 16:03:12 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Made the delete_datawriter/delete_datareader methods
          not erase the datawriter/datareader info by the topic
          name because there might be multiple datawriter/datareaders
          with the same topic name in the multimap.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:

          Made the data_received() method to restore the rd_ptr when there
          are multiple entries.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/README:

          Added mixed transport test and the multiple datawriters
          multiple datareaders test and updated readme.

Tue May 31 14:02:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Added entity_deleted_ state to the entities.  This is used
          to indicate that the entity is in a state of deleting.
          Currently the state is set to true while delete_contained_entites
          is removing the contained entites and then set back to false
          when finished.  Add associations was the only method changed
          to check the value.

Tue May 31 14:39:42 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Fix bug in liveliness

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Check that liveliness is lost the correct number of times,
          as well as liveliness_lost_count == no_writers_generation_count

Tue May 31 10:04:46 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:

          Made the random interval much smaller so the tests run faster.

Tue May 31 07:56:20 MST 2005  Scott Harris <harris_s@ociweb.com>

        * LivelinessTest/LivelinessTest.mpc:
        * MultiTopicTest/MultiTopicTest.mpc:

          Added "after" commands to order the build of projects.

        * LivelinessTest/run_test.pl:
        * MultiTopicTest/run_test.pl:
        * MultiTopicTest/run_test1.pl:
        * MultiTopicTest/run_test2.pl:
        * MultiTopicTest/run_test3.pl:

          Made the tests scripts timeout more quickly when the test drivers timeout.

Tue May 31 06:12:20 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Fixed the LivelinessQosPolicy valid test.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:

          Ensured that every call to the TransportInterface is protected by the
          same PublisherImpl::lock_.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          Added a SubscriberImpl::lock_ and made sure that every call to TransportInterface
          was protected by it.  Also ensured that the maps in SubscriberImpl were also
          protected by the lock.

Mon May 30 17:02:11 CDT 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:

          Make the publisher more efficient by waiting for a signal
          from each writer when it is done instead of spinning.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test_long.pl:

          Add a test that stresses the DCPS/transport framework.

Sun May 29 17:40:49 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_codegen.cpp:

          Add include when required for strlen() call by _dcps_find_size().

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:

          Add include required for ACE_OS::time() call.

Fri May 27 15:50:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Fixed accessing a null ACE Message block.

        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/DataReaderListener.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/TCPListener.mpc:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/domain_ids:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/TCPListenerTest/subscriber.cpp:

          Adding performance test that uses a listener to call the read operation.

Fri May 27 16:11:20 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/subscriber.cpp:

          Fix warnings when using gcc.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:

          Display a message when the DataWriter::write method call fails
          so we know how far it got.

Fri May 27 14:06:31 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Avoid gready read receive buffers from creating infinite ->cont() loops.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Minor improvements in logging.

Fri May 27 13:11:31 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:

          Added methods to allow perform work to release the lock
          before trying to send data_delivered notifications.  There
          was a dead lock between the PerThreadSych running the
          perform_work() and the client calling write.  The perform_work
          would acquire the TransportSendStrategy's lock and then try to
          acquire the WriteDataContainer lock.  The client would acquire
          them in the reverse order.

Fri May 27 09:52:19 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test1.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test2.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test3.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/subscriber.cpp:

          Automate results checking.

        * orbsvcs/tests/DDS/generateTS.pl:

          Add MultiTopicTypes

Thu May 26 18:25:50 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/run_test.pl:

          These are some modifications to improve these tests
          and their reliability/speed.  The changes can be
          summarized as:
            - Write out files in the subscribers to avoid sleep calls
              in the test scripts
            - Use random port #s.
            - Remove temporary files at the end of the script.
            - Shorten the default run times

Thu May 26 14:33:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Minor change on the debug message.

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Added locking for data_delivered and data_dropped.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:

          Added multiple instances, blocking and blocking timeout
          system test cases.

Thu May 26 15:48:59 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:

          Add another explicit scope to avoid VC6 variable redefinition
          errors.

Thu May 26 11:40:12 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener1.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener2.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener3.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/MultiTopicTest.mpc:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/README:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/common.h:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/domain_ids:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test1.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test2.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/run_test3.pl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTest/subscriber.cpp:

          Initial check in of system test case 11. Still
          need to automate checking of results and double
          check coordiantion in multi process test cases

Thu May 26 10:09:41 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Add missing include for linux builds.

Wed May 25 20:56:36 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:

          This is a set of changes to get things compiling with
          VC6.  They consist of the following changes:
              - Add .in() calls to _var usage to avoid implicit
                conversions that VC6 can't do.
              - Add explicit scopes around some for statements
                that cause duplicate variable definitions.
              - Add some missing includes.
              - Fix some issues with 64 bit integers.  Some diagnostic
                print statements were commented out.

Wed May 25 11:59:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Fixed a problem that does not duplicate the listener.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Correct a log message.

        * orbsvcs/tests/DDS/DCPS/FooType5/DcpsFooType5.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType5/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType5/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/FooType5/README.txt:

          Added FooType5 library to support datatypes with key
          and without key system tests.

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Updated the FooTest5 to be system test which now just test
          TCP, UDP and data type with key and without key combination
          test cases.

        * orbsvcs/tests/DDS/generateTS.pl:

          Added FooType5 directory.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:

          Made the array of message received flag are initialized
          with not received.


Wed May 25 12:42:03 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/Foo1Def.idl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/Foo2Def.idl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/Foo3Def.idl:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/README.txt:
        * orbsvcs/tests/DDS/DCPS/MultiTopicTypes/foolib_export.h:

          Library with 3 data type used by the multi topic test.

Wed May 25 11:13:58 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Cleanup handle timeout.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Automate the test.

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:

          add missing inline

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.cpp:

          Removed these files.

Tue May 24 22:39:53 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Changed actual depth (of sample queue maximum size) used to be
          LONG_MAX when it is UNLIMITED so comparison operators will work.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Added validity checking of QoS and changed the consistency
          checking to not require resource_limits.max_samples_per_instance
          to be non-UNLIMITED for history.kind=KEEP_ALL.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:

          Removed an error message in  TransportSendStrategy::send_packet()
          that is now covered by SimpleTcpSendStrategy::send_bytes().

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made send_bytes() log the errno message when returning -1.

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.h:

          Fixed a build problem under VC++;

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Fix a problem with invalid failures because the timeout
          can be just under the timeout given.

Tue May 24 15:00:52 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Updated tests to accomodate the changes from using _var
          instead of _ptr.

Tue May 24 14:16:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp:

          Removing debugging comments accidently left in.

Tue May 24 15:23:46 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/LivelinessTest.mpc:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/README:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/common.h:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/domain_ids:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/LivelinessTest/subscriber.cpp:

          Added liveliness test (system test #5).  Still a couple
          of things left to do (see README).

Mon May 23 16:29:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Reader.cpp
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Reader.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/TestException.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/TestStats.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/UDPNoKey.mpc
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.cpp
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/Writer.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/common.h
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/domain_ids
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/publisher.cpp
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/run_test-2pubs.pl
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/run_test.pl
        * orbsvcs/performance-tests/DDS/DCPS/UDPNoKeyTest/subscriber.cpp

          Added UDP performance test.

Mon May 23 15:09:51 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Opps - forgot to commit the *TypeSupportImpl.h changes.

Mon May 23 14:20:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Added option for testing udp transport.

Mon May 23 14:14:51 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:

          Changed locks from ACE_Thread_Mutext to ACE_Recursive_Thread_Mutext
          to avoid single thread deadlock on Linux/gcc.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:

          Updated bin/DCPS/CPPTemplate.pm.

Mon May 23 08:20:08 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Made all interfaces that create or get an object reference to
          return the duplicates of the object reference, the caller
          now needs assign the returned object reference to a _var type.
          The object references internally used in Dcps lib are changed
          to using _var. When any entity needs the object reference of
          others then it will duplicate the object reference. When any
          entity needs reference to other servants, it will add_ref_
          on initilization and _remove_ref in its destructor.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Updated tests to accomodate the changes from using _var
          instead of _ptr.

Mon May 23 10:15:01 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:

          Conform to another in CPPTemplate.pm

Mon May 23 10:03:34 2005  James A. Chapell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Remove compiler warnings on Linux and conform to
          changes in CPPTemplate.pm

Sun May 22 22:18:39 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:

          Added guards protecting sample containers and statuses in the
          DataWriter.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          Comment out an unused lock member.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test_rejected.pl:

          Made the test count rejected and lost samples so it will
          complete when samples are rejected or lost.
          Added a test script that should get rejected samples.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Fail when invalid paramaters are given.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.h:

          Remove these unused files from CVS.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

          Changed the dcps_ts.pl CPP template.

        * orbsvcs/orbsvcs/DdsDcpsGenerateBuiltinTopicDataTypeSupport.pl:
        * orbsvcs/performance-tests/DDS/generateTS.pl:
        * orbsvcs/tests/DDS/generateTS.pl:

          Allow passing extra options to the dcps_ts.pl script.

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Fix indenting.

Sun May 22 13:11:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.h:

          removed.

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDebug.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDebug.h:

          Changed to use the TransportDebug.h instead of Debug.h
          The two debug.h files caused conflicts on Windows.

Sat May 21 15:51:26 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DCPS/FooTest2/obsolete_test.pl:
        * DCPS/FooTest2/run_test.pl:

          obsolete test - renamed it to avoid all_tests.pl running it.

        * DCPS/FooTest3/run_test.pl:
        * DCPS/FooTest3/special_build_test.pl:
        * DCPS/FooTest3NoKey/run_test.pl:
        * DCPS/FooTest3NoKey/run_test_mw.pl:
        * DCPS/FooTest3NoKey/special_build_test.pl:
        * DCPS/FooTest3NoKey/special_build_test_mw.pl:

          The above require special builds - renamed them to
          avoid all_tests.pl running them.

        * DCPS/unit/run_test.pl:

          Redirected the output to a file because it contained
          expected "ERROR" output and both the nightly build testing
          and all_tests.pl would mark it as failed.

Fri May 20 13:45:11 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed duplicate Transport *.cpp lines.
          Added Debug.cpp and removed TheVerboseDebugFlag.cpp.

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/Debug.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.inl:

          Replaced TheVerboseDebugFlag singleton with
          Transport_debug_level integer because the ACE_Singleton was
          slower than just looking at an integer.

Fri May 20 15:30:11 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Added DCPS_debug_level that can be set by -DCPSDebugLevel.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Changed DataWriter and DataReader memory caches to be
          allocated durring the enable() call because not until
          that time is the number of chunks determined from the
          QoS.  Before that the QoS values might change.

          Changed cached allocators to be based only on
          RESOURCE_LIMITS.max_samples.

          Also added logging with DCPS_debug_level guards.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Update for changes to dcps_ts.pl templates.

        * DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h:
        * DCPS/unit/MyTypeSupportImpl.cpp:
        * DCPS/unit/MyTypeSupportImpl.h:

          Changes to tests because of pure virtual enable_specific()
          added to DataWriterImpl and DataReaderImpl.

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/common/TestException.cpp:
        * corbsvcs/tests/DDS/DCPS/ommon/TestException.h:
        * orbsvcs/tests/DDS/DCPS/common/common.mpc:
        * orbsvcs/tests/DDS/DCPS/common/common_export.h:

          Make the common test library build for VC++.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.inl:

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Allow more control over the setting of QoS.
          Showed that resource_limits.max_instances can be less than
          the number of samples being sent (in other words the blocking
          on write calls works for history.kind = KEEP_ALL_HISTORY).
          Made the DataReader/Writer QoS based on the TopicQos so
          as not to have to specify it in two locations.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Update for changes to dcps_ts.pl templates.

Fri May 20 14:11:41 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:

          more read tests, make liveliness lost test more interesting

Fri May 20 10:33:02 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

          Update for dcps_ts.pl to reflect changes in CPPTemplate.pm

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.cpp:

          Automate checking sample infos

Thu May 19 22:46:54 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:

          Changed the Writer to not be finished until all the
          subscribers have removed their associations.

Thu May 19 14:22:32 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

          Moved common files to a common directory.

        * orbsvcs/tests/DDS/DCPS/FooType4/FooDef.idl:

          added a char field to Foo.

        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/common/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/common/TestException.h:
        * orbsvcs/tests/DDS/DCPS/common/common.mpc:

          Moved these file to a common directory.

        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/TestException.h:

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/TestException.h:

          Removed these files.

Thu May 19 12:34:07 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fix return value in lookup_topicdescription

Thu May 19 01:23:31 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:

          Made the DCPSInfo server not use a fixed address for
          the Built-in Topic transport.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Made the client side of Built-in Topic support
          not use a fixed address for the its transport.

Thu May 19 01:04:31 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fixed warnings.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Fixed core when logging acceptor open failure.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:

          Turn off Built-In Topic support in the DCSPInfo.

Wed May 18 19:49:22 MST 2005  Scott Harris  <harris_s@ociweb.com>


        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:

          Remove warnings and print out samples per num_reads.

Wed May 18 14:38:54 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:

          Only set the transport address if one is given.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:

          Removed managing process synchronization files.

Wed May 18 14:21:22 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added commented out possible kludge for Built-in Topic's
          implemnatation for TRANSIENT_LOCAL.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Made it so the SimpleTcpTransport does not require specifying the
          local_address_ in the configuration.
          If local_address_ is not set then the OS will pick the port
          and the hosts IP address will be used.

Wed May 18 13:43:51 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Removed using files to synchronize running.  Added a space between
          < and :: of the templated method instantiation in reader and writer.

Wed May 18 13:43:03 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:

          Fixed compilation errors on linux.

Wed May 18 10:57:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Made the init_bit_topics to not register builtin topic type if
          it's already registered.

Wed May 18 13:08:06 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Fixed a potentially ghastly bug in the liveliness processing.

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

          Added a liveliness test.


Tue May 17 16:16:14 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl:

          Made the DCPSInfo consider the Transport type ID
          for association compatibility.
          Fixed a problem with the IncompatibleQosStatus policy list
          not being set.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Changed timing and comments related to setting the total_count_change=0
          when the listener is called.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Added missing argument to %p log:
             ERROR: Unrecoverable problem with data link detected: %p

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Added a test case using UDP (not TCP) and one where
          the subscriber and publisher have incompatible transport types.


Tue May 17 15:27:39 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Correcting so the test works with values 512, 2048, and 8192.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Committing regenerated files.

Tue May 17 11:52:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Made instance_handle_to_repo_id LM_ERROR log instead LM_DEBUG
          when failed to find the repo id from builtin topic data.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:

          Extended the sleep time from 5 seconds to 10 seconds after the
          create_participant to give enough time for the builtin topic
          datareaders receive the builtin topic data. This would resolve the
          problem that ignore failed due to the repo_id_to_instance_handle
          timed out.

          Made the ignore_publication and ignore_subscription always
          happened after add_assiciation because we need the repo id for
          ignore.

Tue May 17 14:05:45 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Initialize listenser_mask_ to something reasonable.
          Remove move some dead code.

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:

          Remove commented out code.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Initialize listenser_mask_ to something reasonable.

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

          Add a DataReaderListenerImpl to test on_sample_rejected.
          on_sample_lost, etc.

Tue May 17 10:15:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed repo_ids_to_instance_handles not return when timed out.

Tue May 17 10:01:12 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Fixed parameter order in is_xxx_ignored calls.

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixes and extra logging.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Made add_associations tell the Transport to associate
          before it calls the listener and other work.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Added temporary logging to debug BIT test.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:

          Made address error log the address.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:

          Improved the test and added review comments.

          Still having problems with ignore tests sometimes not ignoring.

Mon May 16 14:40:01 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

         Code review changes

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

          Update for dcps_ts.pl to reflect changes in CPPTemplate.pm

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

         Added some changes to facilitate future testing.


Mon May 16 12:09:57 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType2/FooType2.obsolete_mpc:

          Renamed the MPC file to remove FooType2 from the build
          since it is obsolete.  Forgot this last time.

Mon May 16 08:59:57 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.obsolete_mpc:

          Renamed the MPC file to remove FooTest2 from the build
          since it is obsolete.

Mon May 16 08:25:57 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Added a comment.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Update for dcps_ts.pl template changes related to the change
          described below.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Made create_topic, find_topic, and get_topic return
          a duplicate reference and tracked entity (datawriter/datareader),
          client (from create, find) and object references separately.
          Now clients should hold Topic references in a Topic_var.

Mon May 16 07:59:52 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Code review changes

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:

         The signature of InstanceState::accessed was modified in the above
         changes.

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:

         Added some sleeps.

Sun May 15 01:03:30 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:

          Changed PT### to Pt###.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.cpp:

          Renamed PT128* to Pt128*.

Sat May 14 23:36:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Made the subscriber have just one reader using one client
          thread (for performance reasons) and spin waiting for
          the first sample to arrive.   It was waiting for three seconds
          which was unfair because the publisher was able to
          write a bunch before the reader started reading.

Sat May 14 22:52:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Make stats handle multiple samples read at one time.
          Change -d (DATA_SIZE) to be log2(num_floats_per_sample)
          like the other comparitive tests.

Sat May 14 19:52:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/performance-tests/DDS/generateTS.pl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:

          Added a Perl script to generate the TypeSupport files and ran it.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:

          Improved the performance of the test by reading multiple samples
          in each read.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Removed temporary logging that impacted performance.

Sat May 14 17:10:42 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Changed the TypeSupport template.

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Improved logging.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:

          Changed servant_to_reference to not decrement the ref_count.
          Changed TopicMap to hold Topic_vars instead of Topic_Ptrs.

          TBD - make all create_xx, find_xx, get_xxx return a
          duplicate of the object reference.

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:

          Review comments.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:

          Simplified the logic.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/main.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/run_test.pl:

          Made the test return success or failure.
          Fixed ignore_participant case.

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Log DCPSInfo debug output.

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Enabled Built-In Topic support.

Fri May 13 17:55:45 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Added checks for more invalid qos states.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:

          Corrected some error messages.

        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/FooTypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PT128TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PTDef.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/PTTypeLib_Export.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt2048TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt512TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupport.idl:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/Pt8192TypeSupportImpl.h:
        * orbsvcs/performance-tests/DDS/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:

          Added performance test types.

        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Reader.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/SimpleE2E.mpc:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestException.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/TestStats.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/Writer.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/common.h:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/domain_ids:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/publisher.cpp:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/run_test.pl:
        * orbsvcs/performance-tests/DDS/DCPS/SimpleE2ETest/subscriber.cpp:

          Performance test.

Fri May 13 14:41:04 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/common.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

          Put FooTest4_0 into a framework similar to FooTest5_0.

Fri May 13 09:38:29 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fix occasional SEGV in Linux caused by get_datareaders.

Thu May 12 11:48:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:

          Made -NOBITS also not create a transport impl.

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Change the order of add_association notificaiton
          to avoid deadlock in single-threaded applications
          creating both the publication and subscription
          sides of the association.

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Run DCPSInfo -NOBITS and pring a PASS/FAIL summary.

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          Improved the test.

Thu May 12 12:43:16 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4_0/FooTest4_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4_0/run_test.pl:

          More subscriber/datareader tests - still under development

Thu May 12 11:36:47 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Fix sample_rank calculation for the case when multiple
          intances are returned by a read/take operation

Thu May 12 00:17:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:

          Avoid infinite wait in open() when svc() gets the lock first.
          Did not happen on Windows and Solaris but happened on RH 9;
          may be it happens on slow machines.

Wed May 11 21:47:21 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS/AssociationData.h:
        * orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/DDS/DCPS/Qos_Helper.cpp:
        * orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/DDS/DCPS/RcObject_T.h:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.cpp:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/DDS/DCPS/Registered_Data_Types.cpp:
        * orbsvcs/DDS/DCPS/Serializer.cpp:
        * orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/DDS/DCPS/SubscriptionInstance.h:
        * orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/DDS/DCPS/Transient_Kludge.cpp:
        * orbsvcs/DDS/DCPS/TypeSupportImpl.cpp:
        * orbsvcs/DDS/DCPS/TypeSupportImpl.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueLinkAllocator_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueLinkChunk_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h:
        * orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/DDS/transport/framework/BuildChainVisitor.h:
        * orbsvcs/DDS/transport/framework/BuildChainVisitor.inl:
        * orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/DDS/transport/framework/DataLink.inl:
        * orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/DDS/transport/framework/DataLinkSet.inl:
        * orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/DDS/transport/framework/DataLinkSetMap.inl:
        * orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/DDS/transport/framework/NetworkAddress.h:
        * orbsvcs/DDS/transport/framework/NetworkAddress.inl:
        * orbsvcs/DDS/transport/framework/NullSynch.cpp:
        * orbsvcs/DDS/transport/framework/NullSynch.h:
        * orbsvcs/DDS/transport/framework/NullSynch.inl:
        * orbsvcs/DDS/transport/framework/NullSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/NullSynchStrategy.h:
        * orbsvcs/DDS/transport/framework/NullSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/DDS/transport/framework/PacketRemoveVisitor.inl:
        * orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/DDS/transport/framework/PerConnectionSynch.inl:
        * orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/DDS/transport/framework/PoolSynch.inl:
        * orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:
        * orbsvcs/DDS/transport/framework/PoolSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/DDS/transport/framework/QueueRemoveVisitor.inl:
        * orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/DDS/transport/framework/ReceivedDataSample.inl:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet.inl:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:
        * orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/DDS/transport/framework/RepoIdSet.inl:
        * orbsvcs/DDS/transport/framework/RepoIdSet_rch.h:
        * orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/DDS/transport/framework/RepoIdSetMap.inl:
        * orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/DDS/transport/framework/TheTransportFactory.h:
        * orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/DDS/transport/framework/ThreadSynch.inl:
        * orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynchResource.inl:
        * orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynchStrategy.inl:
        * orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/DDS/transport/framework/ThreadSynchWorker.inl:
        * orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/DDS/transport/framework/TransportConfiguration.inl:
        * orbsvcs/DDS/transport/framework/TransportConfiguration_rch.h:
        * orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/DDS/transport/framework/TransportFactory.inl:
        * orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/DDS/transport/framework/TransportHeader.inl:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/DDS/transport/framework/TransportImpl.inl:
        * orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/DDS/transport/framework/TransportImplFactory.inl:
        * orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/DDS/transport/framework/TransportQueueElement.inl:
        * orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/DDS/transport/framework/TransportReactorTask.h:
        * orbsvcs/DDS/transport/framework/TransportReactorTask.inl:
        * orbsvcs/DDS/transport/framework/TransportReactorTask_rch.h:
        * orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/DDS/transport/framework/TransportReceiveListener.h:
        * orbsvcs/DDS/transport/framework/TransportReceiveListener.inl:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy.inl:
        * orbsvcs/DDS/transport/framework/TransportReceiveStrategy_rch.h:
        * orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportReplacedElement.h:
        * orbsvcs/DDS/transport/framework/TransportReplacedElement.inl:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.inl:
        * orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/DDS/transport/framework/TransportSendElement.inl:
        * orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/DDS/transport/framework/TransportSendListener.inl:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:
        * orbsvcs/DDS/transport/framework/TransportSendStrategy_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink_rch.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.inl:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket_rch.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport_rch.h:

          Removed /**/ in the include lines.

Wed May 11 20:53:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.cpp
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/common.h:
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/BuiltInTopic/run_test.pl:

          Updated to make the test worked with one write.

  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:

          Changed the Publication and Subscription ids to be unique across
          a domain. i.e. a publication and subscription will never
          have the same id in the same domain.

Wed May 11 19:24:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed repo_ids_to_instance_handles and instance_handle_to_repo_id.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Made the add_association returned when repo_ids_to_instance_handles()
          return error.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fixed a bug in create_topic and update log messages in
          ignore methods.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Added checking of nil topic description in create_datareader()
          method.

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Made the destructor log error if the samples are not cleaned.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:

          Fixed a bug that causes dead lock.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/domain_ids:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:

          Added ignore test.

Wed May 11 15:07:13 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Remember to set the length on the returned sequence.

Wed May 11 12:03:39 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/FooTest5_0.mpc:

          Oops - forgot the MPC file.

Wed May 11 11:16:39 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Made it run with verbose logging.

        * orbsvcs/tests/DDS/DCPS/FooTest5_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5_0/run_test.pl:

          A single threaded (plus the ORB and transport threads)
          example test.

Wed May 11 12:11:26 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Added debug info in data_received

Tue May 10 13:05:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl:
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:

          Added the repo id to add_associations calls.  This is the
          repo id of the object being called.  This is to prevent
          the problem where the add_association is called before the
          add_subscription or add_publication had returned with the
          objects id.

Tue May 10 11:44:02 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:

          Add "Error: " to all LM_ERROR and exception logs.

        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Reduce the time waiting on "ready" files.

Tue May 10 09:46:08 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Had to #include two header files to get this to compile under
          Linux.  The two files that are now included are:
          DomainParticipantImpl.h and Service_Participant.h.

Tue May 10 10:41:18 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fix get_datareaders.

Mon May  9 18:37:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:

          Added functionality to disable Built-In Topics.  The
          command line parameter -NOBITS will run the Repo
          without Built-In Topic support.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:

          Fixed the InfoRepo test.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:

          Added missing shutdown of Service Participant.

Mon May  9 16:58:35 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Make DCPSInfo tell the subscriber before the publisher
          because the subscriber will be the transport acceptor.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:

          Made Service_Participant::get_domain_participant_factory
          and parse_args consume the arguments given to them.

        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Turn on DCPSInfo DebugLevel 1.

Mon May  9 12:53:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:

          Implemeted methods to convert between the instance handle
          and repo id and applied to the
          add_association, remove_association, get_matched_publication_data
          and get_matched_subscription_data methods.

          Made the publication side code to not throw the exceptions
          internally but return the error code and log errors instead.

          Other minor review fixes.

Mon May  9 12:43:35 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:

          Added -z option to enable verbose Transport logs.

        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:

          Removed inappropriate "if (TAO_debug_level > 0)" gaurds around
          error messages.

        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:

          Added temporary sleep to help transport connections
          establish properly.  Marked with //REMOVE.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added temporary logging.  Marked with //REMOVE.

        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Added -z option to enable verbose Transport logs.
          Changed timing trying to workaround a transport bug.
          Added more logging.

Fri May  6 16:01:04 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        *  orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        *  orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        *  orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:
        *  orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:

          Added synchronization before starting data writers.

Fri May  6 16:26:44 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Identifying locations for some code change to make the connection
          establishment more robust.

Fri May  6 16:18:48 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed compilation errors on linux.

Fri May  6 13:45:02 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Extended the run time for publisher to make test pass on
          some slow machines.

Fri May  6 13:30:21 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:

          Moved the set_BIT to Service_Participant instead of
          DomainParticipantImpl because it needs to be set before
          create the participant.

Fri May  6 13:09:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:

          Temprary added the set_BIT () method in DomainParticipantImpl
          to turn on and off the builtin topic stuff.
          Moved the helper class to BuiltInTopicUtils and added
          the repo_id_to_instance_handle method.

        * orbsvcs/tests/DDS/DCPS/FooTest2/README:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Fixed tests.

Fri May  6 10:43:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/common.h:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/publisher.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/subscriber.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/run_test_split.pl:

          Added split version of the test.
Fri May  6 10:38:00 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

          Code review changes.

        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:

          Make the output a bit clearer.

Fri May  6 07:32:25 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:

          Removed a change that made it build with VC++ v6.0
          because it failed to execute properly.

Thu May  5 23:00:04 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:

          Make it build with inline=0 on gcc 3.3.2.

Thu May  5 20:08:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:

          Fix a build error.

Thu May  5 17:30:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:

          Changes to make it build with Visual C++ v6.0.
                  Not all tests build.  Some fail to execute.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Remove unused variable.

Thu May  5 16:19:22 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fixed the delete_contained_entities() not delete the
          publishers and subscribers.

        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/domain_ids:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/MyTypeSupport.idl:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/MyTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/MyTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/README:
        * orbsvcs/tests/DDS/DCPS/BuiltInTopic/run_test.pl:

          Added the builtin topic basic funtion test.

Thu May  5 17:40:07 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:

          Removed gratuitous use of std::string.

        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:

          Retain an additional reference: own the socket.

        * orbsvcs/tests/DDS/transport/simple_bp/run_test.pl:

          Extend run time.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:

          Eliminated gratuitous verbosity.  This needs to be done for other
          tests as well in order to run for the nightlies.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/run_test.pl:

          Extend run time.

        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.cpp:

          Added some diagnostics.

        * orbsvcs/tests/DDS/transport/udp_simple/run_test.pl:

          Extend run time.

Thu May  5 15:03:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Updated because the dcps_ts.pl templates changed.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Code review comments/changes and improved casting.

Thu May  5 13:51:37 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * TAO/orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Cleaned up the simple test.

Thu May  5 14:52:49 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Fixed a case problem in an include file name.

Thu May  5 14:32:19 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Removed a gratuitous use of std::string.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:

          Added the INLINE inclusion that is required when inlining is off.

Thu May  5 10:44:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:

          Made the built in topic initialization in a correct order
          and enabled Transient_Kludge in init_built_in_topics().

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.inl:

          Changed the Transient_Kludge interfaces to be clear.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:

          Made the participant's object reference is given to the
          servant before enable.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:

          Fixed a few problems in handling the builtin topics and
          added delete_topic_i() to give options to remove object
          reference.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Partcipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Partcipant.cpp:

          Added accessor for user to specify the transport port
          number for the builtin topics.

        * orbsvcs/orbsvcs/DDS/DCPS/Subscriberimpl.cpp:

          Fixed is_clean method to not count the builtin topic
          datareaders.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:

          Updated with the new Transient_Kludge interfaces and
          minor changes on script.

Thu May  5 12:59:16 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Added simple loan/return_loan test.

Thu May  5 10:27:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/DDS/DCPS/FooTest4/SampleInfo.cpp:

          Added missing constructors and fixed compilation error on windows.

Thu May  5 11:21:51 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/.SimpleTcpDataLink.cpp.swp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/.SimpleTcpDataLink.h.swp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.inl:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:

          Added inline files and modified to inline all possible methods.

Wed May  4 20:10:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest5/FooTest5.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest5/README:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest5/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest5/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest5/run_test.pl:

          Adding a simple end to end test.  This is not cleaned up yet.

Wed May  4 15:19:52 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/SampleInfo.cpp:

          Add function to print all fields in SampleInfo.

        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:

          Init all fields in SampleInfo.

        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Fix call to copy_from_topic_qos.

Wed May  4 10:48:06 MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Avoid the Built-In Topic problems until Yan fixes them.

Wed May  4 07:10:27 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed compilation errors on linux.

Tue May  3 18:31:17 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DomainParticipantListener_i.cpp:
        * orbsvcs/DDS/DomainParticipantListener_i.h:

          The domain participant requires a valid listener.

Tue May  3 16:27:18 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Exceptions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObject_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Minor code review changes and comments.

        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.h:

          Remove unused include of <hash_map> but had to include
          <string> where std::string was used.

Tue May  3 12:22:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Implemented get_builtin_subscriber.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:

          Updated comments.

Tue May  3 11:09:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.cpp:

          Adding missing file.

Mon May  2 18:49:32 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Fixed warning messages on gcc.

Mon May  2 17:51:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Remove memory leaks.

Mon May  2 17:12:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Changes while reviewing DomainParticipantImpl.

Mon May  2 13:05:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.cpp:
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.h:

          Resolve build errors using VC++ 7.1.

Mon May  2 11:32:41 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Code review fixes.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Implemented ignore_* methods.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:

          Removed assert_liveliness call since it does nothing
          for current supported AUTOMATIC liveliness qos.

Mon May  2 13:25:29 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/run_test.pl:

          Added a level to the library search to find the PerlACE package.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:

          Added some diagnostic messages.

        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.cpp:

          Added include of <string> since std::string type is used.

Mon May  2 10:40:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:

          Avoid unused argument warning from _dcps_find_size
          and _dcsp_max_marshaled_size on a struct.

Mon May  2 07:45:54 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp

          I double-checked a fix that Scott had made to the send_control()
          implementation, and removed his comments (asking me to check it).
          I removed a couple of Mike's inspection comments - in one case I
          replaced his comment/question with a statement that explained what
          he was unsure about.  Also, I made an important fix in the send()
          implementation that Yan pointed out a long, long time ago.  I added
          a comment that is prefaced with "VERY IMPORTANT NOTE" to explain
          what was a subtle misuse of the DataSampleListElement.

        * orbsvcs/tests/DDS/transport/dds_comparative/dds_transport_comparative.mpc
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/Pub.h
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/PubDriver.h
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/PubWriter.h
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/Sub.h
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/SubDriver.h
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/SubReader.h
        * orbsvcs/tests/DDS/transport/dds_comparative/TestException.h
        * orbsvcs/tests/DDS/transport/dds_comparative/pub_main.cpp
        * orbsvcs/tests/DDS/transport/dds_comparative/sub_main.cpp

          I added the new test above.  It is the comparative test that
          should also get checked-in to the projects/AdvancedAcousticConcepts
          repository (under performance-tests/comparative).  There are still
          some tweaks that could be made, and it still needs the "TestStats"
          class on the subscriber-side of things in order to collect the
          appropriate "comparative" results.  Other tests under the
          performance-tests/comparative directory have the TestStats class
          defined, so it can be "stolen" from one of those tests.

Mon May  2 09:11:22 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/DDS/DCPS_IR_Domain.h:

          Fixed compilation error on linux.

Sun May  1 18:21:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/BuiltInTopicUtils.h:

          Added Built-In Topic support to the info repo.  The topic names
          and types are defined in the BuiltInTopicUtils.h file.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:

          Fixed typo and incorrect renaming of variable in the run_test.pl

Sun May  1 14:52:56 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:

          Avoid unused argument warning from _dcps_is_bounded on a struct.

Sat Apr 30 22:29:12 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:

          Avoid unused argument warning from _dcps_is_bounded on a struct.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          fix copy_from_topic_qos.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:

          Tell it where to find the data type library.

Fri Apr 29 14:13:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Made the send_control handle the no subscription case correctly.

Fri Apr 29 13:29:51 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Regenerated these to get changes to CPPTemplate.pm.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Change set_listener to accept a nil listener.

Fri Apr 29 12:01:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Updated to use the fast listener.

Fri Apr 29 13:56:07 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

          Added sample lost processing

Thu Apr 28 20:46:49 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc

          Removed duplicate DdsDcpsInfrastructure.idl line that
          was not using the -Gdcps option.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:

          Update made while code reviewing.

Thu Apr 28 14:48:40 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/generateTS.pl:

          Added FooType3Unbounded directory for generating type support
          implementation.

Thu Apr 28 14:00:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/README:
        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType3Unbounded/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/FooTest3_2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/pub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/sub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_2/README:

          Added the unbounded sequence data type test.

Thu Apr 28 12:10:13 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:

          fixed read_instance test.

Thu Apr 28 09:40:32 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:

          Added library dependency.

Thu Apr 28 09:28:41 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsGenerateBuiltinTopicDataTypeSupport.pl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Created a perl script to generate Built-in Topic type support
          files.  And regenerated them.

        * orbsvcs/tests/DDS/generateTS.pl:

          Created a perl script to generate test type support files.
          This replaces the bash and batch files.

Thu Apr 28 10:01:03 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Added read_instance, read_next_instance,
          take_instance, and take_next_instance unit
          tests.

Wed Apr 27 17:21:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Corrected n_chunk configuration.

Wed Apr 27 17:07:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/dogenerate.bash:

          Added path to run the perl script.

Wed Apr 27 16:39:49 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc

          Only give -Gdcps option for DdsDcpsInfrastructure.idl
          because it is the only one with Built-in Topics that
          require DCPS data type support.

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h

          Minor changes made as part of code peer review.


Wed Apr 27 15:50:37 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added control_dropped_count_ and control_delivered_count_.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:

          Added test for control_dropped and control_delivered
          call.

Wed Apr 27 14:15:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added assert_liveliness call to the liveliness test.

Wed Apr 27 13:59:46 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Added remove_associations and get_domain_id test.
          Made the run_test.pl get the CommandLine from Process.

Wed Apr 27 16:08:12 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Fix DataReaderImpl::get_subscriber and
          DataReaderImpl::get_topicdescription

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Added some more unit tests

Wed Apr 27 11:48:26 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkAllocator_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkChunk_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp

          All of the files above were added/changed to support a much
          improved (performance-wise) implementation of the
          BasicQueueLinkPool<T> class.  I also made some changes per
          code inspection comments to merge some "init()" methods into
          a non-default ctor.  It cleaned some things up and made them
          prettier.

        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp

          Moved a verbose debug message into a conditional where it should
          have been.

        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h

          Removed a commented out method that was never implemented - it
          was a remnant of a half-completed band-aid solution for the
          blocking send_control/timeout stuff that we once envisioned doing.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/pub_main.cpp
        * orbsvcs/tests/DDS/transport/simple_bp_rm/sub_main.cpp

          Added #include for the EntryExit.h and added commented-out
          lines to the front of both main() functions.  The commented-out
          line is a call to the TURN_ON_VERBOSE_DEBUG macro.  Now I
          can uncomment one line in the main() function and get all of
          the debug info.  It was needed at one point in testing, and
          I decided to just leave it in place, but commented-out.

Wed Apr 27 11:45:44 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Code Review fixes.

        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

          Make the script print the command line,

Wed Apr 27 07:12:05 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Review fixes and comments.

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Review comments based on review of similar code
          in Publication module.

        * TAO/orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Make the script print the command line,
          print $ACE_PROCESS->CommandLine(), "\n";

Tue Apr 26 16:39:20 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/WriteDataContainer.cpp:

          Updated to use non-blocking send_control.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Removed the obsolete send_control method.

Tue Apr 26 17:53:32 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Corrected a bug with chaining a received sample.  It was not
          allocating new blocks in the chain...

Tue Apr 26 15:14:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:

          Made the test built after FooTest3_1NoKey lib.

Tue Apr 26 15:07:46 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

                Fixed compilation errors and warnings on linux.

Tue Apr 26 13:52:17 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/transport_dev/framework_test_exe.mpc:
        * orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp:

          Removed the test code above as it was OBE.

        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.inl:

          Part of the transport "cleanup" effort.  Some new .inl files.

        * orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy_rch.h:

          Most of the changes above were made as part of the transport
          "cleanup" effort.  But there was also a significant change made
          to the send_control() logic.  It is now a non-blocking call, and
          behaves very similarly to the way the send() works.  The
          remove_all_control_samples(RepoId pub_id) has also been implemented.
          The old send_control() method still exists, but has been depricated,
          and will always return SEND_CONTROL_ERROR.

Tue Apr 26 13:13:03 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Changed -d and -c DCPS Servant_Participant options to
          -DCPSInfo and DCPSChunks respectively.
          Also got rid of initial_xxx_status accessors because
          the value should just be in the constructor of the
          object creating statuses.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-topic.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test_mw.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/unit/README:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:

          Change DCPS options to long names and other minor fixes.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Minor code review changes.

Tue Apr 26 12:22:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * TAO/orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * TAO/orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.h:
        * TAO/orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:
        * TAO/orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:

          Made changes to build under VC6.  Changes involved
          scoping the ::TAO_Singleton and scoping variables in
          switch and for statements.

Tue Apr 26 12:11:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DataWriterImpl.cpp:

          Added data_dropped_count_ and data_delivered_count_ and made
          destructor delete data_container_.

        * orbsvcs/orbsvcs/WriteDataContainer.cpp:

          Made unregister_all tell transport to remove all samples currently
          processing.

        * orbsvcs/orbsvcs/Qos_Helper.inl:

          Fixed the consistency checking on history and resource limit.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added remove sample under backpressure test and blocking writer
          test.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:

          Changed SubDriver's option to shutdown publisher to be '-x'.

Tue Apr 26 13:59:18 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:

          Fix segfault caused by the take function.

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

          Add option to call take instead of read while
          accessing data.

Tue Apr 26 09:44:46 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:

          Do not put the library in $ACE_ROOT/lib.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-topic.pl:

          Find the FooType library locally.

Mon Apr 25 22:45:14 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Made -Gdcps ignore sequences of interfaces.
          Removed octet sequence optimization not supported by Serializer.

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added XXXBuiltinTopicDataTypeSupport.idl for all four BIT topics.
          Had to force XXXBuiltinTopicDataTypeSupportC/S.h/inl/cpp.  Why?

        * orbsvcs/orbsvcs/DdsDcpsInfrastructure.idl:

          Added #pramgas to define BIT data types and keys.

        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/ParticipantBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/PublicationBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/SubscriptionBuiltinTopicDataTypeSupportImpl.h:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupport.idl:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.cpp:
        * orbsvcs/orbsvcs/TopicBuiltinTopicDataTypeSupportImpl.h:

          Added generated BIT types support files.
          These need to be generated using dcps_ts.pl.

Mon Apr 25 14:23:49 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Added liveliness support for the datareader.

Mon Apr 25 10:41:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DataSampleList.h:
        * orbsvcs/orbsvcs/DataSampleList.inl:
        * orbsvcs/orbsvcs/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Fixed access violation due to nil listener and a few
          other bugs while testing reenqueue_all.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:

          Added test for reenqueue_all which supports transient_local qos.

        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:

          Added precompiled header.

Mon Apr 25 08:45:13 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * M orbsvcs/orbsvcs/DdsDcps.mpc:

          Changed the name of one .cpp from TransportReplacedSendElement.cpp
          to TransportReplacedElement.cpp.
          Also added all of the new source files from under the new dir:
          orbsvcs/orbsvcs/DDS/transport/simpleUDP for the UDP transport
          implementation.

        * orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObject_T.h:

          Slight mods - mostly indenting.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedElement.h:

          Rename of class/source files from TransportReplacedSendElement
          to just TransportReplacedElement.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Modifications to the files above were mainly bug fixes, added
          debug info, and modifications made to support an easier way
          to "plug-in" the SimpleUdpTransport implementation while still
          supporting the ability to easily "plug-in" the SimpleTcpTransport.

        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpDataLink_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpSocket_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleUDP/SimpleUdpTransport_rch.h:

          The new "Simple UDP" implementation source files.  I am currently
          experiencing a failure (segfault) on termination of my test
          applications for the Simple UDP transport.  I'll be looking into
          the cause shortly.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          Modifed to make use of the verbose debug macro (VDBG) for
          the verbose debug output rather than straight ACE_DEBUG.

        * orbsvcs/tests/DDS/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/README:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple/TestException.h:
        * orbsvcs/tests/DDS/transport/udp_simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple/sub_main.cpp:

          New transport test that uses the "Simple UDP" transport
          implementation.  This is nearly identical to the normal
          "simple" transport test except that the SimpleUdpFactory
          is used instead of the SimpleTcpFactory.

        * orbsvcs/tests/DDS/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/PubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/README:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/SubDriver.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/TestException.h:
        * orbsvcs/tests/DDS/transport/udp_simple_n/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/udp_simple_n/run_test.pl:
        * orbsvcs/tests/DDS/transport/udp_simple_n/sub_main.cpp:

          New transport test that uses the "Simple UDP" transport
          implementation.  This is nearly identical to the normal
          "simple_n" transport test except that the SimpleUdpFactory
          is used instead of the SimpleTcpFactory.

Mon Apr 25 09:52:57 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          Added sample_info function, fixed bug(typo) in get_qos,
          use cached allocators

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Added sample_info function

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

          Added fields required for filling out sample_info
          structure on read/take

        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

        * orbsvcs/tests/DDS/DCPS/FooType4/README.txt:

        Update unit tests.

Sun Apr 24 21:29:00 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/TopicListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:

          Fixed build errors and warnings using gcc.

Sun Apr 24 20:35:00 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Fixed a build problem and fixed a few warnings.

Fri Apr 22 16:52:13 USMST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:

          Specified the path to the FooType library.

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:

          Changed ACE_ASSERT to TEST_CHECK macro defined locally
          because ACE_ASSERT is a noop when built non-debug.

Fri Apr 22 16:01:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Transient_Kludge.cpp:

          Added the reenqueue_all to support TRANSIENT_LOCAL
          durability qos and added listener on_publication_match
          callback.

Fri Apr 22 15:42:13 USMST 2005  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed unused TypeSupportImpl.h/cpp.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:

          Minor changes as part of peer review.

        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/README:
        * orbsvcs/tests/DDS/DCPS/FooType/README:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/README:

          Added test READMEs as part of peer review.

Fri Apr 22 16:44:38 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:

          Initial, incomplete review comments.  I am still reviewing
          TransportSendStrategy.cpp.  I am only about 30% through that file.
          Overall, it looks pretty complete and workable.  Of course, I have
          yet to get to the interesting bits!

Fri Apr 22 12:12:13 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Added liveliness support for the datawriter.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:

          Added liveliness test.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:

          Updated to use the renamed convert time methods.

Thu Apr 21 17:49:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsDomain.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/TopicListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/TopicListener.h:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/dcps_integration.mpc:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/domain_ids:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/infrastructure.cpp:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-integration.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/run_test-topic.pl:
        * orbsvcs/tests/DDS/DCPS/DcpsIntegration/topic.cpp:

          Added Infrastructure and Topic integration tests.  Also fixed several
          missing functionalities along the way.

Thu Apr 21 14:08:23 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new TransportReplacedSendElement.cpp file to the mpc file.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReplacedSendElement.h:

          These are new files.  This is the TransportQueueElement subclass
          that serves as a "replacement element" for a TransportQueueElement
          that is removed from a partially sent packet via a remove_sample()
          call.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:

          Added support to the BasicQueue<T> class to accept a visitor
          for the purposes of "element replacement".  Changed
          BasicQueueVisitor<T> class to support the "element replacement"
          style of visitation.  Modified the TransportSendStrategy to use
          the "element replacement" style of visitation for the
          PacketRemoveVisitor it uses in remove_sample().  It was using the
          "element removal" style of visitation.  And lastly, I updated
          the PacketRemoveVisitor to be capable of visiting a BasicQueue<T>
          object as a "element replacement" visitor.  The "visit element"
          operation was modified considerably to account for the act of
          element replacement.

        * orbsvcs/tests/DDS/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/README:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/TestException.h:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp_rm/sub_main.cpp:

          Added a new transport test - the "Simple Backpressure/Remove Sample"
          test.  The SimpleDataWriter only has one DataSampleListElement to
          loan out.  When backpressure occurs, the SimpleDataWriter ends up
          having to perform a remove_sample() before it can attempt the
          next send().  When backpressure clears, things start zipping through
          the connection again.  Then we hit backpressure which causes another
          round of remove_sample()/send() calls...  until the backpressure
          clears.  Repeat.

Thu Apr 21 10:53:57 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Updated the data_dropped() method to only handle the case
          from remove_sample, not from the transport thread directly.
          Also updated data_delivered (), obtain_buffer () methods.

Thu Apr 21 10:40:40 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:

         Include NetworkAddress.h instead of SimpleTcpTypes.h.

Thu Apr 21 06:26:12 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed one .cpp file and added several others.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          The files above were removed.  The contents were placed into
          two new files (see below) called the NetworkAddress.h and .cpp.

        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NetworkAddress.h:

          The files above are the replacements for the SimpleTcpTypes files.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy_rch.h:

          Added the smart-pointer types listed above.

        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/NullSynchStrategy.h:

          These will be used to support the SimpleUDP transport implementation
          because UDP cannot experience backpressure, and thus will not make
          use of the "send queue" or the "send thread strategy" (it will use
          the new NullSynchStrategy for the send thread strategy).

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Modified to support the new classes that were introduced.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp

          Changed the test code above to accomodate the changes.

Thu Apr 21 00:48:40 MST 2005  Scott Harris <harris_s@ociweb.com>

       * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

         Fixed DCPSInfo IOR file name to make the test connect to the DCPSInfo.

Wed Apr 20 23:58:40 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:

          Put libraries in local directory (not ACE_wrappers/lib).
          Use PerlAce::add_lib_path to add the library path.
          Make builds work on Windows.

        * orbsvcs/tests/DDS/DCPS/FooTest4/run_test.pl:

          Added run_test.pl for FooTest4.

        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:

          Changed test to delete the datareader(s).

        * orbsvcs/tests/DDS/DCPS/FooTest4/repo.ior:

          Removed this generated file from CVS repo.

Wed Apr 20 11:27:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Test.idl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added Test.idl to synchronize shutdown of subscriber and
          publisher.

Tue Apr 19 16:56:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:

          Added precompile header.

Tue Apr 19 13:42:10 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp

          Mike fixed a problem where the receive strategy was breaking
          a single sent sample into two receive samples - each with only
          a portion of the 'data' portion of the orginally sent sample.
          I've tested this using the transport simple_bp test (it was
          showing the problem), and all is now well!  Yay!

Tue Apr 19 12:07:08 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added some new .cpp files to the .mpc file.

        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheVerboseDebugFlag.h:

          New files.  This is the singleton object used to control the
          transport's "debug verbose-ness" at runtime.  By default,
          the transport is not verbose.  There are two macros in the
          EntryExit.h file that will allow you to turn on/off the
          vebose debug messages in the transport code:

          TURN_ON_VERBOSE_DEBUG;
          TURN_OFF_VERBOSE_DEBUG;

        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchResource.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Added the new files above.  These allow the "Send Thread Strategy"
          to wait for the Thread Resource to wait until the resource is
          unclogged.  The SimpleTcpSynchResource implements this to wait
          via a "select" call on the socket.

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h:

          Modified the EntryExit such that the debug code can be completely
          compiled out (it is compiled-in by default).  Also integrated the
          use of the new TheVerboseDebugFlag to provide a runtime on/off
          switch for the verbose debug output.

        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:

          All of the above was modified to integrate with the new
          ThreadSynchResource type (needed to get the backpressure case
          working).

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          Fixed two bugs in here in addition to integration of the new
          ThreadSynchResource type and all that it entailed.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Modifed to conform to the new "verbose debugging" stuff.

        * orbsvcs/tests/DDS/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/README:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple_bp/TestException.h:
        * orbsvcs/tests/DDS/transport/simple_bp/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_bp/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_bp/sub_main.cpp:

          I added the new transport test above.  All new files in a new
          subdir called "simple_bp" for "simple backpressure" test.

Tue Apr 19 11:53:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:

          Fixed the decision_made parameter in the data_dropped() method.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:

          Made unregister test call write() with nil handle after unregistered.
          This will automatically register the instance again.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Made error returned when an invalid argument is pass to script.

Tue Apr 19 11:14:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:

          Undefined ::TAO::DCPS::INFINITE_VALUE and replaced with const
          defined in DdsDcpsInfrastructure.idl.

Mon Apr 18 21:21:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Updated readme and corrected the test number.

Mon Apr 18 16:43:40 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/run_test.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/run_test.pl:

          Added run_test.pl and updated README.txt to say how to run
          the tests.

        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:

          Made the test return 0 for success or 1 for failure
          to support run_test.pl.

Mon Apr 18 20:37:31 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          fixed delete_datareader

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed ReadDataContainer

        * orbsvcs/tests/DDS/DCPS/FooTest4/FooTest4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest4/README:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Reader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest4/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest4/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest4/repo.ior:

          Scubscriber unit test

        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:

          Removed these files.

Mon Apr 18 11:23:53 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Fixed a bug in detach_transport() that uses the nil
          TransportImpl.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Made the destructor call detach_transport().
          This would fix the access violation that accesses the deleted
          publisher/TranportInterface upon transport factory release.

Mon Apr 18 09:37:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:

          Updated code to use TransportInterface::attach_transport() and
          SimpleTcpConfiguration_rch.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:

          Added precompile headers.

Mon Apr 18 06:17:49 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          I added the new .cpp files mentioned below.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          New source files - the biggest change here was the introduction
          of the new Transport Send/Receive Strategy classes.  This is logic
          that used to "live" within the SimpleTcpConnection class, and has
          no been re-factored to "live" in the framework.

        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:

          Lots of the files changed were just changed to add some additional
          debug info.  Otherwise, the significant change is the re-factoring
          of the SimpleTcpConnection object - pulling pieces of it up to
          the transport framework level.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp:

          Test code changes.  Most of the changes was the addition of more
          debug output.  But there were some changes forced on the client
          applications due to changes made in the transport framework.

Sun Apr 17 22:42:00 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Added unregistered_ flag to the PublicationInstance and made the
          WriteDataContainer not remove the unregistered instance when
          unregistering and give the same instance handle when
          re-registering.

        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Fixed a bug that did not initialize some members.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Changed the n_chunk option to be '-c' instead of '-s'.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added the allocator test.

Thu Apr 14 22:55:57 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:

          Added code to test DataWriterImpl::get_matched_subscriptions().

Thu Apr 14 22:31:30 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test_nokey.pl:

          Added no key data type tests.

Thu Apr 14 16:32:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Made the lock_ replace subscription_handle_lock_
          to protect active subscription and also status changes.
          Updated get_*_status () methods.

        * orbsvcs/orbsvcs/DDS/DCPS/Entityimpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entityimpl.cpp:

          Added StatusKind to StatusChangedFlag map to remember
          which status is changed.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Made DCPSInfo object reference cached in the class instead
          of getting from the Service_Participant multiple times.

        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:

          Made listener_for () not return the listener if the entity
          is not enabled.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:

          Added initial values for the statuses used in DataWriterImpl.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DomainParticipantListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DataWriterListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PublisherListener.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:

          Added the listener and status test.

        * orbsvcs/tests/DDS/DCPS/unit/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/TopicListner.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Removed files. They are not tested in unit test.

Thu Apr 14 16:12:19 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/foolib_export.h:

          Added because dogenerate.bash/bat does not generate it.

Wed Apr 13 14:17:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Corrected the assertion in data_available () method.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:

          Added suspend/resume_publication test.

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataSample.h:

          Made export for windows.

Wed Apr 13 20:00:44 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:

          demarshal is no longer pure virtual

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:

          added SampleInfo member

Wed Apr 13 12:55:19 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:

          Yan helped me discover a problem with the way I implemented the
          fix for the "stuck" send_control() method.  I was calling a method
          on an object that had been deleted.

Wed Apr 13 12:53:06 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/tests/DDS/dogenerate.bash:
        * orbsvcs/tests/DDS/generateTS.bat:

          Added windows batch file to do the same thing as the bash script.
          Commands to run these will be added to the nightly build XML files.

Wed Apr 13 12:05:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriterDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriterDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Made the registered_sample_ in PublicationInstance not including
          the header part. Each register/unregister/dispose call on the data
          container will give the datawriter a duplicated sample data as
          part of the control message. The control message is released when
          send_control completes.
          Removed update_control_message method.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Reversed the Publisher and Subscriber start order and
          sychronized them to make test work.

Wed Apr 13 11:06:11 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Updated to reflect name changes for some transport source files,
          and to account for some new transport source files.  See below.

        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.h:

          The files above have been removed.  They have actually been
          replaced with files conforming to a standard naming scheme for
          the subclasses of BasicQueueVisitor<T>.  Some of the files listed
          below as new files are actually the renamed files.

        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/BuildChainVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PacketRemoveVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/QueueRemoveVisitor.h:

          The files above have been added.  Most are really renamed files,
          replacing files I listed as being removed.  The truely new files
          here are the PacketRemoveVisitor.h and .cpp files.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:

          Slight modifications to the way the "visitor" pattern was
          implemented.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:

          Filled in a TBD to release the sample_ (ACE_Message_Block chain)
          in the ReceivedDataSample destructor.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:

          Adjusted the send_control() method to account for the (very common)
          possibility that the control message is sent "directly" by all
          DataLinks using the thread that called send_control().  If this
          is what happens, then the send_control() will not wait() on the
          condition object.  Yan found this problem and came up with the
          solution.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:

          Added a new data member and a const accessor method for it.
          The new data member is a flag that indicates whether or not the
          condition has already been signalled.  This is used by the (new)
          DataLinkSet::send_control() logic that was described earlier.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Just added some comments to the file(s) above.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:

          Added new settings to the SimpleTcpConfiguration for the
          "maximum transport packet size (in bytes)", the "optimal transport
          packet size (in bytes)", and the "maximum samples per transport
          packet".  The default values given are 65535, 4096, and 10,
          respectively.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:

          Updated to accept the new configuration values specified above
          in the SimpleTcpDataLink::connect() method.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Updated the SimpleTcpTransport::configure_i() method to
          save off the new configuration settings mentioned earlier.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:

          Many changes here, but the most significant were those to
          accomodate the new configuation settings as explained earlier,
          and those changes needed in order to implement the remove_sample()
          logic, which is now done.  Note that I haven't run any tests that
          actually attempt to remove_sample()... I'm crossing my fingers.

Wed Apr 13 10:09:29 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:

          Made class exported on windows.

Wed Apr 13 09:46:38 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/dogenerate.bash:
          Build support.

Tue Apr 12 20:00:15 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.cpp:
          fix incorrect #include

Tue Apr 12 12:33:59 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added num_samples () method to provide the number of samples
          for a given instance and made the unregistered sample cloned
          for send control.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Fixed a bug on copy_from_topic_qos that does not initialize
          DataWriterQos members that are not part of the TopicQos.
          Fixed a bug on the delete_contained_entities that use an
          erased iterator.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Fixed a few missing qos assignments and removed comments.

        * orbsvcs/tests/DDS/DCPS/FooTest3_0/FooTest3_0.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/pub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/sub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_0/README:

          Added FooTest3_0 test to test most functionalities of the
          Publisher and DataWriter.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:

          Verified write () return value.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Added lib path to script.

Tue Apr 12 19:09:21 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Add processing for LIVELINESS
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
          Fix type in destructor
Tue Apr 12 17:46:39 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/ReceivedDataElementList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriptionInstance.h:

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Broke out ReceivedDataElementList and SubscriptionInstance.h from
          DataReaderImpl.h and DataReaderImpl.cpp.

        * orbsvcs/tests/DDS/DCPS/FooType4/FooTypeSupport.idl:

          Removed this file.

Tue Apr 12 07:56:06 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new ChainQueueVisitor.cpp file to the mpc file.

        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ChainQueueVisitor.h:

          I added these new files.  The ChainQueueVisitor can visit a
          BasicQueue<TransportQueueElement> object, and create a chain
          of ACE_Message_Blocks using a duplicate of each element's
          message block.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:

          Added the peek() and size() methods to BasicQueue<T>, and added
          support for "chain" visitors.

        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:

          Just added more verbose log messages.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:

          Added the concept of a TransportQueueElement that requires that it
          is sent in an "exclusive" transport packet.  This is for the
          "send control" messages.  This makes it such that a "send control"
          message is always sent in its own transport packet (ie, the transport
          does not aggregate any other samples into the packet).

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:

          Added all of the code to support the "direct send" and "queue send"
          logic - except for the remove_sample() logic - which is stubbed out
          for now.

Tue Apr 12 09:46:03 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Corrected a problem with managing the creation of the iovec sent to
          the recvv() call and the size indicated to the call.

Mon Apr 11 13:28:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:

          Fixed build error of not finding gettimeofday in ACE_OS
          and Windows PCH include missing.

Mon Apr 11 19:23:04 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
          Fix compile error.
        * orbsvcs/tests/DDS/DCPS/FooType4/DcpsFooType4.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType4/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType4/FooTypeSupport.idl:
        * orbsvcs/tests/DDS/DCPS/FooType4/README.txt:
        * orbsvcs/tests/DDS/DCPS/FooType4/foolib_export.h:
          Initial version

Mon Apr 11 19:09:13 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Add Support for Instance state
          Add demarshal to data_received
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
          Change constructor to take only DataReaderImpl *
          Added sample state support.
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          straighten out instance handle issues


Mon Apr 11 13:54:41 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple_n/run_test.pl:
          Added command line parsing to make running lots-o-tests easier.

Mon Apr 11 13:33:23 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple_n/run_test.pl:
          Added simple test managers.  I got tired of firing things up
          manually.

Fri Apr  8 18:20:18 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.h:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/InstanceState.cpp:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added support for InstanceState management for DataReader.  This
          needs to be integrated into the instance data containers in the
          readers.

Fri Apr  8 14:46:11 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:

          Updated message_length_ in header to not including the
          header size.

Fri Apr  8 13:47:43 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Updates made mostly by Mike, but includes a lot of ugly debug
          code that I put in there.  I'll remove the debug code shortly.
          But the simple and simple_n tests now work using the latest
          receive logic.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp

          Changed the DataSampleHeader message_length_ to not include
          header bytes.

Fri Apr  8 10:09:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooType2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3_1/DcpsFooType3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc:

          Made the test library output to current directory instead
          of $ACE_ROOT/lib.

Fri Apr  8 09:08:01 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:

          Checking in what I have so far, just to get in synch with the
          latest version in CVS.  All new code is stubbed out, and not
          relied upon yet.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:

          Modified to serialize the header correctly (using the actual code
          instead of a test kluge).

Fri Apr  8 10:53:13 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:

          Added ability to serialize using a reference as well as a pointer to
          an ACE_Message_Block.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Debugging.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Modified to serialize the header correctly (using the actual code
          instead of a test kluge).

Thu Apr  7 15:24:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Added Dynamic_Cached_Allocator_With_Overflow.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Used max_marshaled_size as the header size for control message
          and allocator that size for the header message block.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:

          Used Serializer for typed data.

Thu Apr  7 17:21:49 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Added macro definitions to use new receive operations.

Thu Apr  7 17:00:26 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Break out dropped connection errors separately.  Ooops.

Thu Apr  7 16:37:13 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
          Added a marshaled_size() method to return the number of bytes read
          from a message block chain.  NB: This now invalidates the use of
          sizeof() operators on these headers.  Use the max_marshaled_size()
          method instead.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
          Modified to use a NULL synch for receive buffers.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          First complete receive chain coding.  Now to test...

Thu Apr  7 10:14:31 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Moved wr_ptr adjustment code from the DataSampleHeader to
          the DataWriterImpl.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:

          Fixed a bug that returns error when inserting an already bound
          remote id to the remote map.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:

          Added options to specify max_samples_per_instance and
          history.depth and correctly verfied results.

        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mi.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mw.pl:

          Added options to specify max_samples_per_instance and
          history.depth and combined other test cases into the
          run_test.pl.

        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:

          Dumped Foo data and reduced publisher sleep time after
          sending message.

        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:

          Added pre compiled header.

Thu Apr  7 09:45:22 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new .cpp files listed below.

        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PerConnectionSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/PoolSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchStrategy.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ThreadSynchWorker.h:

          Added all of the files above.  These all play a part in the
          "Transport Send Thread Strategy" mechanism, which should hopefully
          give us a way to "plug-in" different thread strategies to be
          used for the transport sending logic.
          Note that the PoolSynch.cpp has an incomplete implementation.  It
          isn't used anywhere (yet), so this doesn't cause a problem.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          The files above were updated to make use of the new
          "Transport Send Thread Strategy" mechanism.  I made the default
          ThreadSynchStrategy be the PerConnectionSynchStrategy.  This
          can be changed to a different ThreadSynchStrategy via a change
          to the TransportConfiguration.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:

          Very minor updates - just added a comment to each file.

Wed Apr  6 17:42:51 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
          Added max_sample_size() in the spirit of the IDL generated code.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Daily update.  First cut up to creating the sample data and message
          blocks to send on is done.

Wed Apr  6 13:07:31 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Adding implementation for receive side.

Tue Apr  5 22:45:50 USMST 2005  Yan Dai  <dai_y@ociweb.com>

         * DDS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Fixed problem of never sending due to the disconnect_
          not initialized.
          Made the destroy() call disconnect so the handle_output
          thread can exit upon destroy.

        * DDS/transport/framework/TransportReactorTask.cpp:

          Added more debug message.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp:

          Made the data_delivered/data_dropped not delete the
          DataSampleListElement which will be used by the transport
          afterwards.

        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp:

          Made the publisher wait a while after send all data.
          This would avoid the problem of subscriber not receiving
          all messages due to disconnected by peer.

Tue Apr  5 17:16:13 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
          Added allocator types for the receive chain.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
          Simplified, removed that dang wr_ptr() bump that should _*NEVER*_
          have been in the low level code, and added the valid() checking
          method.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Added allocators for receive chain processing.  Added pseudo code
          for what I am about to do.

Tue Apr  5 13:20:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * DDS/transport/framework/TransportReactorTask.h:
        * DDS/transport/framework/TransportReactorTask.cpp:

          Removed stop_requested_ flag and used
          run_reactor_event_loop instead of handle_events in
          a while loop.

        * DDS/transport/framework/TransportQueueElement.cpp:

          Initialized dropped_.

        * DDS/transport/framework/TransportHeader.cpp:

          Fixed compilation error on windows.

Tue Apr  5 13:23:14 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DDS/transport/framework/TransportImpl.cpp:
        * DDS/transport/framework/TransportImpl.h:
        * DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Changed the sending logic to use a thread per connection.
          This "sending thread" will service the sending queue.
          This is in place of having the reactor invoke our
          handle_output() method.  Note that all of this is eventually
          going to be replaced with a better threading strategy.  This
          is to get things to work on both Linux and Windows.  Windows
          didn't like the previous implementation that involved the
          reactor and handle_output().
          Also added was logic to cause the TransportFactory::release()
          method to shutdown the TransportImpls, which in turn will
          disconnect the DataLinks, which in turn will stop the "send
          thread" from running.

Tue Apr  5 11:27:31 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new TransportHeader.cpp file.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportHeader.h:

          Added these two new files.  These define the TransportHeader
          struct that will prepended to each "Transport Packet" that
          is sent (and received).

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp

          Added a block of commented-out code that will be used to
          prepend the TransportHeader to the data sample being sent.

Mon Apr  4 17:41:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Remove some obsolete TBD comments.

        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Update some comments on dead code.

Mon Apr  4 17:01:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Fixed sequence of array bug for _dcsp_is_bounded() and
          _dcsp_max_mashaled_size() generated code.
          The temporary sequence element value was not initialized.
          This was causing problems on gcc but not VC7.1.
          Also restored the test to a full test.

Mon Apr  4 14:42:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Removed unused argument warnings from generated code.

Mon Apr  4 10:14:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:

          Corrected insertion operator signature.

        * DDS/transport/framework/RemoveSampleQueueVisitor.cpp:
        * DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * DDS/transport/framework/TransportQueueElement.cpp:
        * DDS/transport/framework/TransportSendControlElement.cpp:
        * DDS/transport/framework/TransportSendElement.cpp:

          Added pre compiled header and fixed a few warnings on
          windows.

Mon Apr  4 09:55:53 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Removed some temporary debug code from the files above.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Made some modifications to the way that the header and data
          message blocks are created/populated.  It mirrors what happens
          in the new simple_n test code (see below).

        * orbsvcs/tests/DDS/transport/simple_n/DDS_transport_simple_n.mpc
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/PubDriver.h
        * orbsvcs/tests/DDS/transport/simple_n/README
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataReader.h
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleDataWriter.h
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimplePublisher.h
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SimpleSubscriber.h
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple_n/SubDriver.h
        * orbsvcs/tests/DDS/transport/simple_n/TestException.h
        * orbsvcs/tests/DDS/transport/simple_n/pub_main.cpp
        * orbsvcs/tests/DDS/transport/simple_n/sub_main.cpp

          Added a new variant to the simple transport test that will send
          "n" messages (specified by -n, which defaults to 100).  See the
          README file.

Mon Apr  4 09:25:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:

          Fixed bug array of sequence bug intruduced in cleanup.

Mon Apr  4 07:39:56 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added new .cpp files and removed one .cpp file.

        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLinkPool_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueLink_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueueVisitor_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/BasicQueue_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RemoveSampleQueueVisitor.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportQueueElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendControlElement.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendElement.h:

          Added the new files listed above.

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:

          Removed the files listed above.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          Modified the files above.  All of these changes are to support the
          implementation of the transport queue.  All of this builds and runs
          on Linux.

Mon Apr  4 05:49:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foo_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/foo_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/foo_test2_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_lib/idl_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test1_main/main.cpp:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:

          renamed orbsvcs/tests/DDS/DCPS/Compiler/foo_test* to idl_test*.

Mon Apr  4 05:19:35 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Fixed array of arrays, sequence of arrays, enums and strings
          in arrays and enums in sequences.

        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:

          Renamed _tao_has_key(Foo) to _dcps_has_key(Foo).

        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_cs.h:

          Produced easier to debug code when the macro DCPS_DEBUG_IDL
          is defined.

        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Made unions always return false from _dcps_is_bounded(Foo) because
          _dcps_max_marshaled_size(Foo) might crash with an access violation
          if it attempted to get a correct value. _dcps_max_marshaled_size(Foo)
          on a union returns a bogus value of 10,000 to avoid producing an
          access violation.  The access violation would be caused by accessing
          a branch that was not initalized for the discriminant value when
          checking the max size for all discriminant values.

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Removed unneeded debug output and TBD comments.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foo_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Added more test cases.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:

          Updated the description of this test.

        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/idl_test3_main/main.cpp:

          Added a systematic test of IDL types.

Mon Apr  4 00:13:12 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:

          Fixed the DataSampleHeader serialization.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added DataSampleHeader serialization for publication side.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:

          Made extern functions exported on windows.

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added multiple instances and multiple datawriter tests.

Fri Apr  1 17:12:46 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
          Updated support to include more initialization from buffers to make
          the handle_input() usage more efficient.  Added the inline file.

Fri Apr  1 14:58:46 2005  Mike Martinez  <martinez_m@ociweb.com>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
          Added support for multiple DCPS data type definitions in the IDL
          source files.

Fri Apr  1 12:41:31 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
          Relocated the pragma once appropriately.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
          Cleaned up a bit, including comments from Scott.

Fri Apr  1 11:44:41 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Changes to make string serialization (and by implication wstring
          serialization) work correctly.  Added missing newline to end of file.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:
          Added a missing include directive.

        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:
          Added a test for string serialization.  Wstring test is present but
          lacks an actual string value.

Fri Apr  1 10:00:23 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mi.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test_mw.pl:

          Added multiple instances and multiple datawriters
          test cases.

        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/Writer.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/InstanceDataMap.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test_mw.pl:

          Added multiple datawriters test case.

Fri Apr  1 11:02:40 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

        Filled in some details re ReadDataContainer

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

        Fixed compilation error on Linux

Thu Mar 31 21:45:01 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Changed _tao_find_size to _dcps__find_size and
          _tao_max_marshaled_size to _dcps_max_marshaled_size.

Thu Mar 31 20:59:01 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Added support for sequence of arrays, sequences strings and unions.
          Added support for unions containing structs and strings.
          Backed out typedef xx _base_type; addition when I found that I could
          get it from the AST when I needed to use it.
          Changed "4"s to _dcps_max_marshaled_size_ulong().

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Added _dcps_max_marshaled_size_ulong() for lengths of strings and sequences.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Tested newly supported types (see above).

Thu Mar 31 17:07:27 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.cpp:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added serialization support for the header.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
          Added use of serialization support for the header.

Thu Mar 31 11:13:01 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_field/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Added DCPS support for a union of predefined types in a structure
          and start of support for user defined types in union branches.

        * docs/compiler.html:

          Documented the -Gdcps switch.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Added a union to the test.

Thu Mar 31 09:16:11 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:

          Applied the network address to transport info blob.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          Fixed compilation errors on windows.

Thu Mar 31 07:52:37 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the new SimpleTcpTypes.cpp file to the mpc file.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTypes.h:

          These are new files.  Currently, the only type is the
          NetworkAddress type.  This used to be a struct defined within
          the SimpleTcpTransport class, but has now been moved "up" to
          live under the TAO::DCPS namespace.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Removed the NetworkAddress struct from the header and moved it
          into its own file (see SimpleTcpTypes.h and .cpp).  Also
          modified the use of the NetworkAddress within the SimpleTcpTransport
          to use the new version of the NetworkAddress struct.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          Updated the "faking out" logic that creates AssociationData
          structs that normally come from the Repository.  This logic
          uses the new NetworkAddress struct.

Wed Mar 30 16:34:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3NoKey/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/FooType3NoKey.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/README.txt:
        * orbsvcs/tests/DDS/DCPS/FooType3NoKey/foolib_export.h:

          Added FooTest3NoKey and FooType3NoKey.

        * orbsvcs/tests/DDS/DCPS/FooTest3/README:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:
        * orbsvcs/tests/DDS/DCPS/FooType3/README:

          Updated documentation.

Wed Mar 30 16:37:09 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Fixed some locking issues regarding the adding and releasing
          of DataLink reservations.  Also, fixed the way the connection
          info is constructed for SimpleTCP so that it is byte-order safe.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          These tests "fake out" the Repository by constructing the
          AssociationData objects themselves.  This needed to be changed
          due to the changes made for the SimpleTCP transport to get
          the byte-order handled correctly.

Wed Mar 30 14:06:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3_1/FooTest3_1.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/PubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleDataReader.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/SubDriver.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/TestException.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/pub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/sub_main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3_1/README:

          Added FooTest3_1 integration test.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:

          Added PUBLISHER_TEST guard the code calling transport via
          PublisherImpl.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          Minor changes.

Wed Mar 30 12:16:30 MST 2005  Scott Harris <harris_s@ociweb.com>

        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:

          Removed unnessary warning from IDL compiler with -Gdcps option.
            "Warning: DDS does not support <corba type> in data types"

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Fixed generated code to not give unused variable warning.

Wed Mar 30 11:33:30 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Change character to Serializer operator<< methods to take const
          characters to be compatible with generated code.

        * TAO_IDL/be/be_global.cpp:

          Disallowed trailing extra characters after -G options.

        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be_include/be_visitor_array/serializer_op_ch.h:

          Added support for strings, sequences, structures in structures.
          Fixed _tao_is_bounded() and _tao_find_size() to work in more cases.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Updated test to test strings, sequences and structures.

Wed Mar 30 11:18:14 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * DDS/DCPS/DataWriterImpl.cpp:

          Fixed warnings.

        * DDS/transport/framework/DataLink.cpp:
        * DDS/transport/framework/DataLink.h:
        * DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * DDS/transport/framework/ReceiveListenerSetMap.h:
        * DDS/transport/framework/TransportFactory.cpp:
        * DDS/transport/framework/TransportFactory.h:
        * DDS/transport/framework/TransportImpl.cpp:
        * DDS/transport/framework/TransportImpl.h:
        * DDS/transport/framework/TransportReactorTask.cpp:
        * DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Added locking in certain places and solved some race condition
          problems in the DataLink when it releases its last reservation.
          The TransportImpl could, at the same time (in another thread),
          find the DataLink as being suitable for another TransportInterface's
          request to add associations.  Also fixed some other TBDs.

Tue Mar 29 16:58:30 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DdsDcps.mpc:

          Removed the ReceiversMap.cpp from the SourceFiles.

        * DDS/transport/framework/ReceiveListenerSetMap_rch.h:
        * DDS/transport/framework/ReceiversMap.cpp:
        * DDS/transport/framework/ReceiversMap.h:

          Removed these three source files.

        * DDS/transport/framework/DataLink.cpp:
        * DDS/transport/framework/DataLink.h:
        * DDS/transport/framework/ReceiveListenerSet.h:
        * DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * DDS/transport/framework/ReceiveListenerSetMap.h:
        * DDS/transport/framework/RepoIdSetMap.cpp:
        * DDS/transport/framework/RepoIdSetMap.h:
        * DDS/transport/framework/TransportImpl.cpp:
        * DDS/transport/framework/TransportImpl.h:
        * DDS/transport/framework/TransportInterface.cpp:

          Updated the DataLink maps to remove the TransportInterface.
          This simplification has been made because of the recent change
          where we do not inform the TransportInterface about the
          data_received() "event".

Tue Mar 29 16:20:09 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:

          Implemented support for string and wstring operations.

Tue Mar 29 14:58:48 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Remove SubscriberImpl::data_received

Tue Mar 29 11:12:32 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Integrated with Tim's change of combining the TransportListener
          and TransportInterface together.

Tue Mar 29 11:12:47 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Implemented some of the remove_sample() logic.  But the big change
          was the removal of the ReceiveListenerSet_rch data member from the
          ReceivedDataSample *and* the removal of the data_received() method
          from the TransportInterface.  The data_received() was a pure
          virtual method, so this will affect any subclasses of the
          TransportInterface class.  I have made those changes in the files
          below.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          These are the changes to the DCPS "core" code due to the
          transport framework changes made above.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:

          These are the changes to the simple tranport test due to the
          transport framework changes made above.

Tue Mar 29 08:41:07 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Removed the TransportListener.cpp from the Source_Files.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:

          This file has been removed.  The TransportListener and the
          TransportInterface have been "merged" into one class -
          and it is called the TransportInterface.  Publishers and
          Subscribers should inherite from the TransportInterface rather
          than the (now defunct) TransportListener.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:

          Updated code for various reasons.  Some minor TBDs have been
          cleared up, I've added some locking to some of the classes where
          it was missing (and needed), and I've made changes due to the
          merging of the TransportListener and TransportInterface classes.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:

          These files were changed as a result of the merge of the
          TransportListener and TransportInterface classes.  Authors
          of these classes should probably perform a "cvs diff" to see
          what modifications were made.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:

          This test code was also modified in light of the merging of
          the TransportInterface and TransportListener classes.


Mon Mar 28 23:52:06 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3/FooDef.idl-dont-compile:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefC.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefC.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefC.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS_T.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS_T.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDefS_T.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupport.idl-dont-compile:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportC.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportC.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportC.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS.inl:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS_T.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS_T.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportS_T.inl:

          Removed the stub and skeleton code and hand coded servant
          implementation.

        * orbsvcs/tests/DDS/DCPS/FooType3/DcpsFooType3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/FooType3/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/README.txt:

          Updated to make the test work.

Mon Mar 28 17:23:33 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:

          Corrected the servant's reference count and made the
          TopicImpl::is_clean () check topic reference count to
          see if any datareader/datawriter is using it.

Mon Mar 28 15:55:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Cached_Allocator_With_Overflow_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.inl:

          Added Cached_Allocator_With_Overflow to provide the cached
          allocator which can allocate memory on the heap when the
          preallocated memory is not enough.
          Made the chunk size of the Cached_Allocator_With_Overflow
          for datawriter specified from the command line ("-s").
          Made initial qos accessor functions to be inline.

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:

          Changed the WriteDataContainer constructor.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:

          Updated test to use the Cached_Allocator_With_Overflow.

        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:

          Update comments.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Fixed a bug on the PUBLISHER_TEST code.

Mon Mar 28 16:43:27 2005  Mike Martinez  <martinez_m@ociweb.com>

        * TAO/orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Corrected a return statement.

        * TAO/orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:
          Added newline to end of file.

Mon Mar 28 11:25:10 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test2_lib/foo_test2_lib.mpc:

          Added test that compiles dcps_ts.pl generated files.

Mon Mar 28 09:05:10 MST 2005  Scott Harris <harris_s@ociweb.com>

          Added DCPS support in the TAO IDL compiler when -Gdcps is given.
          Details of the change are grouped below.

        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_structure/structure.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_union/union.cpp:

          Make a serializer pass for *C.h and *C.cpp.

        * TAO_IDL/be_include/be_visitor_array/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_array/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_enum/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_enum/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_field/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_field/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_module/serializer_op.h:
        * TAO_IDL/be_include/be_visitor_root/serializer_op.h:
        * TAO_IDL/be_include/be_visitor_sequence/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_sequence/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_typedef/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_typedef/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_union/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union_branch/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_union_branch/serializer_op_cs.h:
        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_module/serializer_op.cpp:
        * TAO_IDL/be/be_visitor_root/serializer_op.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Added code to generate DCPS/serializer code.
          Code includes operator<< and operator>> methods calling
          TAO::DCPS::Serializer, _tao_max_marshaled_size(Foo),
          _tao_is_bounded_size(Foo) and _tao_find_size(Foo) methods
          for Foo and its sub-types as well as struct KeyLessThan
          (for std::map support) and _tao_has_key(Foo) for just
          the Foo type.

          Currenlty, the data type, Foo, must be a structure and can only
          contain scalar/predefined types, arrays and enums.
          Sequences, strings, and unions are not yet supported.
          Keys can only be scalar/predefined types and enums at this time.

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Handle #pragma DCPS_DATA_TYPE and #pragma DCPS_DATA_KEY.
          Can handle multiple keys per data type but just one data type
          per compiler invocation.

        * TAO_IDL/be_include/be_visitor_array.h:
        * TAO_IDL/be_include/be_visitor_enum.h:
        * TAO_IDL/be_include/be_visitor_field.h:
        * TAO_IDL/be_include/be_visitor_module.h:
        * TAO_IDL/be_include/be_visitor_root.h:
        * TAO_IDL/be_include/be_visitor_sequence.h:
        * TAO_IDL/be_include/be_visitor_structure.h:
        * TAO_IDL/be_include/be_visitor_typedef.h:
        * TAO_IDL/be_include/be_visitor_union.h:
        * TAO_IDL/be_include/be_visitor_union_branch.h:
        * TAO_IDL/be/be_visitor_array.cpp:
        * TAO_IDL/be/be_visitor_enum.cpp:
        * TAO_IDL/be/be_visitor_field.cpp:
        * TAO_IDL/be/be_visitor_module.cpp:
        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_structure.cpp:
        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_union.cpp:
        * TAO_IDL/be/be_visitor_union_branch.cpp:

          Make DCPS/serializer code part of the IDL compiler using
          #inlude - yuck.

        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be/be_decl.cpp:

        Add support for not generating serializer code multiple times.

        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be/be_codegen.cpp:

        #include "orbsvcs/DDS/DCPS/Serializer.h" if -Gdcps is given.

        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be/be_global.cpp:

        Parse -Gdcps option.

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Added _tao_max_marshaled_size(<type>) methods to support
          getting the size of a buffer for serialization.

        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/FooDef.idl:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/README.txt:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foo_test1_lib.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_lib/foolib_export.h:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/foo_test1_main.mpc:
        * orbsvcs/tests/DDS/DCPS/Compiler/foo_test1_main/main.cpp:

          Added a test of the -Gdcps option and using
          the TAO::DCSP::Serializer.

        * orbsvcs/tests/DDS/DCPS/DCPS_IDL_tests.mwc_skip:

          Make solution for DCSP IDL tests but only if explicitly requested;
          not just because it was picked up by -recurse.

Fri Mar 25 15:03:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Changed source_timestamp in DataSampleHeader to have sec_
          and nanosec_ instead of the ACE_Time_Value and added
          funtion to convert between the ACE_Time_Value and
          ::DDS::Time_t.
          Added the source_timestamp to the register_instance,
          unregister and dispose methods in DataWriterImpl to support
          the *_w_timestamp interfaces.
          Resolved some tbd.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:

          Made the TransportListener cache the connection_info and
          provide accessor.

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:

          Implemented the interfaces with the timestamp.

Fri Mar 25 12:34:52 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc

          Added two .cpp files and removed one.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSample.h

          Renamed and changed the ReceivedDataSampleList.h and .cpp
          files to ReceivedDataSample.h and .cpp.  Plus - the List
          type no longer exists and there is no "next_" data member
          in the ReceivedDataSample anymore.  BTW, the ReceivedDataSample
          class is what was formerly known as the
          ReceivedDataSampleListElement class.

        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap_rch.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiversMap.h

          Added these files since I needed to integrate the TransportListener
          into one of the DataLink's maps.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp

          Changed these files due integration of the TransportListener into
          one of the DataLink maps, the changes to the ReceivedDataSampleList
          type (its removal) and interface changes made due to it, as well as
          completing the initial implementation of the receive/deliver logic.
          I also removed a bunch of debug statements.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp
        * orbsvcs/tests/DDS/transport/simple/README
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp

          Updated the test code due to changes in the framework, and made
          the SimpleDataReader print out the message it receives.
          I also removed a bunch of debug statements. And I added a README
          file.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp

          These DCPS files were modified due to the removal of the
          ReceivedDataSampleList type, the renaming of the
          ReceivedDataSampleListElement type (to ReceivedDataSample), and
          the interface changes involving the various data_received()
          methods.

Fri Mar 25 11:18:26 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Corrections after feature testing.

        * orbsvcs/tests/DDS/DCPS/Serializer/.cvsignore:
        * orbsvcs/tests/DDS/DCPS/Serializer/README:
        * orbsvcs/tests/DDS/DCPS/Serializer/Serializer.mpc:
        * orbsvcs/tests/DDS/DCPS/Serializer/SerializerTest.cpp:
        * orbsvcs/tests/DDS/DCPS/Serializer/run_test.pl:

          Initial feature tests.  This still needs to be ACE-ified, and
          should add some cases driven from written files so that we
          ensure that the ordering for all expected cases is handled,
          but this covers all the known issues that I am aware of.

Fri Mar 25 09:06:10 2005 Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
          Typed a constant.

Thu Mar 24 17:19:29 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Exceptions.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:

          Added documentation and added the implementation
          for the status condition methods.
          Added the listener_for method to find the listener
          for a specific status kind. The listener will not
          be copied from the factory to the entity which does
          not have a registered listener.

        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:

          Updated tests to get the default
          datawriter/datareader/topic qos from its factory instead
          of from the initial values.
          Removed the using_factorys_listener parameter from
          datawriter initialize method.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Updated DataSampleList test.

Thu Mar 24 15:43:10 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:

          Minor cleanup and "_i" became "Impl" postfix for servants.

        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:

          Change #if 1 code to #ifndef PUBLISHER_TEST so by default
          the code will use the Transport but adding the PUBLISHER_TEST
          macro to the build line will produce code for publisher testing.

Thu Mar 24 13:53:10 MST 2005  Scott Harris <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:

          Added comments and review notes.

Thu Mar 24 12:39:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubsciberImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:

          Fixed a few bugs found while testing with FooTest3.

Thu Mar 24 08:45:40 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          Got the connection establishment code working in my tests.  I
          also filled-in the implementation for the send() calls.  Of
          course, the queue is missing, so the send() call will change
          eventually.

          The next set of changes that are coming will be the logic to
          actually receive messages from the connection, turn them into
          a ReceivedDataSampleList, and deliver the ReceivedDataSampleList
          to the appropriate TransportListener objects.

Wed Mar 23 14:30:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Fixed compilation error on windows.

Wed Mar 23 14:46:29 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:

          Added interfaces for reading and writing arrays of basic
          types.

Wed Mar 23 14:19:39 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Add implemenations for data_received's and
          SubscriberImpl::get_datareaders

Wed Mar 23 12:09:43 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added new .cpp files listed below.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReactorTask_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport_rch.h:

          Added the files above as I attempt to solve the connection
          establishment problem.  I'm currently debugging the connection
          establishment solution that is being checked in, but it does
          have problems right now.  This all builds on Linux.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Modified the files above as I attempt to solve the connection
          establishment problem.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.h:

          Modified the test code above as I attempt to solve the connection
          establishment problem.

Tue Mar 22 12:44:34 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooTest3/FooTest3.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest3/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest3/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest3/run_test.pl:

          Added FooTest3 which uses the FooType3 lib.

Tue Mar 22 12:24:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType3/FooTypeSupportImpl.cpp:

          Added the implementation to FooDataWriter_i and
          FooDataReader_i.

Tue Mar 22 10:40:07 MST 2005  Scott Harris <harris_s@ociweb.com>

        * DcpsFooType3.mpc:
        * FooDef.idl-dont-compile:
        * FooDefC.cpp:
        * FooDefC.h:
        * FooDefC.inl:
        * FooDefS.cpp:
        * FooDefS.h:
        * FooDefS.inl:
        * FooDefS_T.cpp:
        * FooDefS_T.h:
        * FooDefS_T.inl:
        * FooTypeSupport.idl-dont-compile:
        * FooTypeSupportC.cpp:
        * FooTypeSupportC.h:
        * FooTypeSupportC.inl:
        * FooTypeSupportImpl.cpp:
        * FooTypeSupportImpl.h:
        * FooTypeSupportS.cpp:
        * FooTypeSupportS.h:
        * FooTypeSupportS.inl:
        * FooTypeSupportS_T.cpp:
        * FooTypeSupportS_T.h:
        * FooTypeSupportS_T.inl:
        * README.txt:
        * foolib_export.h:

          Added Foo type library in style the DDS script and compiler will
          produce.  NOTE: see README.txt about why *C.* and *S.* are
          checked in.

Mon Mar 21 12:38:19 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:

          Fixed compilation errors and warnings on linux.

Mon Mar 21 09:39:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.h:

          Fixed compilation error on linux.

Mon Mar 21 08:27:30 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Updated the DataSampleList and WriteDataContainer for
          blocking/non-blocking write.
          Added the HISTORY, RESOURCE_LIMITS and RELIABILITY qos
          checking in Qos_Helper.

        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Updated unit test after the DataSampleList change.
          Added blocking write tests.

Mon Mar 21 07:02:40 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/EntryExit.h

          New header file added for debugging only.  This will ultimately
          be removed from the source code, but is here during development
          to assist in tracing the code.

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          Added EntryExit statements for debugging.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp

          Added EntryExit statements for debugging + other debug statements
          and some fixes to problems found in testing.

Fri Mar 18 14:17:03 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h:

          Interface change!  Woop-Woop-Woop!  Sound the alarm!  Only a
          single ReceivedDataSampleListElement is sent to the data_received()
          method on the TransportReceiveListener.  Note that the
          TransportListener's data_received() has not changed.  It receives
          a ReceivedDataSampleList argument still.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:

          Fixed some TBDs in the test subscriber exe code.  And adjusted
          the SimpleDataReader to accomodate for the TransportReceiveListener
          interface change.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:

          Made changes to accomodate for the TransportReceiveListener
          interface change.  Also fixed three unused argument warnings
          in the WriteDataContainer.cpp file.  All of this stuff builds
          on linux without errors or warnings.


Fri Mar 18 14:34:12 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

          Some code cleanup, added add_associations,
          SubscriberImpl::enable_reader, added
          DataReaderImpl::enable and got rid of
          find_topic/delete_topic in SubscriberImpl

Fri Mar 18 13:19:46 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DDS_transport_simple.mpc:

          Added a new sub-project to the mpc file for the test subscriber exe.

        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataReader.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleSubscriber.h:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/sub_main.cpp:

          New files added for the test subscriber exe.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp

          Just whitespace changes.

Fri Mar 18 12:08:15 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:

          Filled in the remaining TBDs for the test publisher exe.

Fri Mar 18 11:12:47 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TheTransportFactory.h:

          Added the new header file for the singleton TransportFactory.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Filled-in more pieces of implementation, replacing stub code.

        * orbsvcs/tests/DDS/transport/simple/DDS_transport_simple.mpc:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.cpp:
        * orbsvcs/tests/DDS/transport/simple/PubDriver.h:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimpleDataWriter.h:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.cpp:
        * orbsvcs/tests/DDS/transport/simple/SimplePublisher.h:
        * orbsvcs/tests/DDS/transport/simple/TestException.h:
        * orbsvcs/tests/DDS/transport/simple/pub_main.cpp:

          The simple test publisher executable code for testing the
          transport framework.  There are still just a couple of TBDs
          in this code.  The simple test subscriber code will be added
          here shortly.

Thu Mar 17 17:59:06 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublicationInstance.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TransportSendListener.h:

          Made the PublicationInstance struct defined in
          PublicationInstance.h instead of inside of WriteDataContainer.
          Made the DataSampleListElement has PublicationInstance
          pointer instead of InstanceHandle_t.
          Fixed a few bugs while testing.

        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp

          Made multiple threads write.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:

          Minor change.

Thu Mar 17 17:34:35  MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/SimpleTcpConnection.cpp:

          Added PCH include to fix VC7.1 build.

Thu Mar 17 16:12:14 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:

          Added the SimpleTcpConnection.cpp to Source_Files.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConnection.h:

          Initial checkin of these files.

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Integrated pieces of the Acceptor/Connector logic into the
          SimpleTCP code.  Still more to do.  This compiles on Linux.

Thu Mar 17 15:44:35  MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:

          Added PCH include to fix VC7.1 build.

Thu Mar 17 14:28:57 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp

          Modified test code to use a SimpleTcpConfiguration object
          to configure the TransportImpl objects (using SIMPLE_TCP type_ids).

Thu Mar 17 14:10:57 MST 2005  Tim Bradley  <bradley_t@ociweb.com>

        * DdsDcps.mpc:

          Added new .cpp files (see below).

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink_rch.h:

          Added these new files (listed above).

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:

          Modified these files (listed above).  Now a great deal more of the
          TransportImpl and DataLink implementation is available.  Most work
          is now being focused on the simpleTCP code, with more updates to
          come shortly before jumping into writing the test code.

Thu Mar 17 12:06:35 MST 2005 Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:

          Fixed DLL import cut & paste error to build under VC7.1.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added PCH include to build under VC7.1.

Wed Mar 16 22:27:02 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Made class exported and fixed DataSampleList operations.

        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/UnitTest.mpc:
        * orbsvcs/tests/DDS/DCPS/unit/MyTypeSupportImpl.h:
        * orbsvcs/tests/DDS/DCPS/unit/MyTypeSupportImpl.cpp:
          Updated unit test and added DataSampleList test.

Wed Mar 16 13:36:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Fixed a few bugs while testing.

        * orbsvcs/tests/DDS/DCPS/FooTest2/FooTest2.mpc:
        * orbsvcs/tests/DDS/DCPS/FooTest2/domain_ids:
        * orbsvcs/tests/DDS/DCPS/FooTest2/main.cpp:
        * orbsvcs/tests/DDS/DCPS/FooTest2/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataReaderImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType2/FooDataWriterImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType2/FooType.idl
        * orbsvcs/tests/DDS/DCPS/FooType2/FooType2.mpc
        * orbsvcs/tests/DDS/DCPS/FooType2/FooTypeSupportImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType2/FooTypeSupportImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType2/footype_export.h
          Added FooTest2 which tests the current implementation of
          publication side.

Wed Mar 16 13:18:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          Fixed compilation error.

Wed Mar 16 14:16:44 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        Continue SubscriberImpl/DataReaderImpl coding

Wed Mar 16 12:28:09 MST 2005  Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkIdMap.h:
          Removed this file.  Turns out that I needed something like
          a DataLinkIdSetMap, and the existing DataLinkSetMap fulfills
          this need and actually works a bit better.

        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpDataLink.cpp:
          This is the initial version of the concrete subclass of
          the DataLink base class - this one for the SimpleTcp
          implementation of the transport.  All methods have stubbed
          implementations at this point.

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
          Worked off several of the TBD issues that remained in various
          parts of the code, and implemented a great deal (if not all) of
          the DataLink methods.  Note that all of these changes have been
          built on Linux with no errors or warnings.

Tue Mar 15 16:35:00 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Reduced the subscription_handle_lock_ locking scope.

        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps.mpc:
          Added missed files.

Tue Mar 15 15:01:39 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Change unregistered method not be pure virtual function.

Tue Mar 15 15:11:37 MST 2005  Tim Bradley <bradley_t@ociweb.com>
        * ReadDataContainer.cpp:
        * WriteDataContainer.h:
          Fixed a compilation error and warning under Linux.

Tue Mar 15 14:41:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Changed the container to have the InstanceHandle_t set
          instead of using InstanceHandle_t to PublicationInstance
          map. The InstanceHandle_t intenally is the pointer to the
          PublicationInstance. This would avoid multiple lookups.
          Also added the HISTORY and RELIABILITY qos support.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
          Made DataWriterImpl inherited from TransportSendListener.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
          Added message_length_ to header.

        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.inl:
          Made the DataSampleList operations to be inline.

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImplFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
          Made delete_* methods calling the deactivate_object and
          added the remove_sample call in PublisherImpl.

        * orbsvcs/DDS/DCPS/Exceptions.h:
          Added more exceptions.

        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
          Fixed compilation error.

        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
          Added deactivate_object method.

        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetmap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
          Fixed compilation error and added precompiled header.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
          Removed the "//" from the include path.

Tue Mar 15 15:20:17 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp:
          Needed to add an include for compilation without inlining.
          This was due to internals of ACE implementation.

Tue Mar 15 14:49:16 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
          Needed to include additional files when not inlining.

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Added ACE_UNUSED_ARGS() macros.

Tue Mar 15 13:30:55 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/CountedSendSample.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkIdMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/RepoIdSet_rch.h:
          Added these new files.

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
          Filled in a lot more of the implementation, including all of the
          changes to the implementation due to the recent interface changes.
          There is too much to list specifically.  There are a few classes
          that still need a lot of work: TransportImpl and DataLink.  I have
          most, if not all, of that implementation stubbed out.  Almost all
          other parts of the framework are implemented, with a few exceptions.
          A cohesive/completed locking strategy is still an outstanding issue.

        * orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Had to add implementation of a method (search for TMB comment)
          to get a test executable to link.

Tue Mar 15 14:23:42 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Started fleshing DataReaderImpl (still a ways to go)
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          More changes to conform with TransportListener

Tue Mar 15 11:00:58 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Corrected the declaration and definition of the disambiguated
          extration operators to be extractors.  Added some
          documentation comments to explain the copy/swap operations.

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:
          Cleaned up the swap routine slightly.

Mon Mar 14 16:55:48 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
          Forgot to change the length() calls to space() calls for the
          wirte operations.

Mon Mar 14 16:29:48 2005  Mike Martinez  <martinez_m@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Serializer.cpp:
          First attempt at the Serialization object.  This includes
          overloaded insertion and extraction operations, disambiguation
          types and optimized copy and swap.  It does not contain
          support for string types or array reads and writes at this
          time.

        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added the Serializer source files.

Mon Mar 14 12:42:18 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          Changed to conform with Transport changes
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/ReadDataContainer.cpp:
          Initial version of ReadDataContainer (stubb, for now)
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          added ReadDataContainer

Fri Mar 11 16:04:14 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
          Removed Tim's comments and some deprecated methods.

Fri Mar 11 15:50:21 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Removed the DDS/DCPS/RcObjectBase.cpp.

        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
          Fixed the compilation error.

Fri Mar 11 15:15:40 MST 2005  Tim Bradley <bradley_t@ociweb.com>
        * M orbsvcs/orbsvcs/DdsDcps.mpc:
        * M orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * M orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * M orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * A orbsvcs/orbsvcs/DDS/DCPS/RcHandle_T.h:
        * R orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * R orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.h:
        * R orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * A orbsvcs/orbsvcs/DDS/DCPS/RcObject_T.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * M orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * M orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp:
        * M orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * M orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * M orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp:
        Fixed compilation warnings and errors on linux.  Also made changes
        to the reference counting "infrastructure" types (and names).

Fri Mar 11 14:40:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
          Fixed compilation warning and errors on linux.

Fri Mar 11 14:02:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleHeader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
          Fixed compilation on windows.

Fri Mar 11 09:11:51 MST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMapMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMapMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSetMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceiveListenerSet_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/ReceivedDataSampleList.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportExceptions.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_rch.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportReceiveListener.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportSendListener.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
          Major interface changes for the transport framework.  I ended up
          having to stub-out quite a bit of implementation to get this to
          compile.  Look for my initials (TMB) for places in the code where
          I had to do this.

Thu Mar 10 07:54:41 2005  James A. Chappell  <chappell_j@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
          Added data_received member function
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
          Fixed #ifdef #else #endif
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          implemented abstract methods from TransportListener

Thu Mar 10 00:01:28 CST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/DataSampleList.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Added enqueue and dequeue operations to the DataSampleList
          and applied to the WriteDataContainer.

        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/DDS/DCPS/PubliserImpl.h:
        * orbsvcs/DDS/DCPS/PubliserImpl.cpp:
          Change the PublisherImpl constructor to pass the
          DomainParticipant servant and added the code for
          foodatawriter test.

        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/Definitions.h:
          Moved the typedef of MessageBlockAllocator and DataBlockAllocator
          from DataSampleList.h to Definitions.h.

Tue Mar  8 13:38:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
          Updated the Sequence and CoherencyGroup data type.

        * orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
          Added enable checking for idl iterface implementation.

        * orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
          Updated "not enabled" error log messages.

Tue Mar  8 11:12:49 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/DDS/DcpsInfo_pch.h:
        * orbsvcs/DDS/DcpsInfo_pch.cpp:
          Added precompile header to the source code directory
          instead of using the DdsDcps_pch.h file.

Tue Mar  8 08:09:05 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/DDS/transport/framework/DataLinkMapMap.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkMapMap.h:
        Initial checkin of the Map of RepoId to DataLinkMap elems.

        * orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/DDS/transport/framework/DataLinkMap.h:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
        Added more implementation based upon recent discussions with Mike.


Mon Mar  7 17:38:55 2005  Mike Martinez  <martinez_m@ociweb.com>
        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        Added PCH stuff and orbsvcs directory include.  This may need
        to be corrected.

        * orbsvcs/DDS/DCPSInfo_i.h:
        Moved pragma once, inserted space to allow parser to
        understand global scope operator inside template
        specification.

        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        Changed ordering of initializers to correspond to declaration.

        * orbsvcs/DDS/DCPS_Utils.cpp:
        Added ACE_UNUSED_ARG macro.

        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/DDS/DCPS_Utils.h:
        Moved pragma once.

Mon Mar  7 14:45:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
          Fixed a few warnings when building on linux.

Mon Mar  7 14:40:03 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
          Updated to get this to build on Linux with just a few
          warnings remaining.
          See 2 "TBD" messages in PublisherImpl.cpp and 1 "TBD" message
          in WriteDataContainer.cpp.


Mon Mar  7 13:16:10 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/DDS/DCPS/DataSampleList.h:
        * orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/DDS/DCPS/Definitions.h:
        * orbsvcs/DDS/DCPS/Exceptions.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/WriteDataContainer.h:
        * orbsvcs/DDS/DCPS/WriteDataContainer.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
          Updated the publication implementation to use the
          WriteDataContainer per datawriter.


Mon Mar  7 12:55:51 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap_var.cpp:
          Added precompiled header and fixed compilation errors on
          windows.

Mon Mar  7 11:21:46 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp
          Added more incomplete logic and pseudo-code comments.  This
          still builds on Linux.  I am checking-in because I want to
          discuss some of the implementation with Mike.

Mon Mar  7 10:32:39 MST 2005 Tim Bradley <bradley_t@ociweb.com>
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added new .cpp files from transport/framework dir (see below).

        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLinkMap_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/DataLink_var.h:
          Added these new files (initial checkin).

        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
          Added logic in place of stub code, and added more comments
          and pseudo-code where implementation is still incomplete.
          This is all building on Linux - I may have broken the windows
          build because of the new DataLink and DataLinkMap classes.

Mon Mar  7 10:40:25 2005  James A. Chappell  <chappell_j@ociweb.com>
          Added find_topic to create_data_reader
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

Mon Mar  7 09:24:33 2005  James A. Chappell  <chappell_j@ociweb.com>
          Added initial implementation of SubscriberImpl
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:

Fri Mar  4 09:58:04 CST 2005  Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/DDS/DCPS/AssociationData.h:
          Added some missing standard comments.

        * orbsvcs/DDS/DCPS/DataSampleList.h:
          Created this file, containing the DataSampleList and
          DataSampleListElement types.

        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/DDS/transport/framework/TransportListener.h:
          Added stubbed implementations of the following methods:
          Note that I am not showing the signatures here:
            TransportInterface::send()
            TransportInterface::send_control()
            TransportListener::data_received()
            TransportListener::data_delivered()



Thu Mar  3 17:56:48 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_Utils.h:
        * orbsvcs/DDS/DCPS/DataReadImpl.h:
        * orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/Subscriber.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
          Cleaned up the #include paths and made compiled on windows.

Thu Mar  3 16:41:21 CST 2005  Tim Bradley <bradley_t@ociweb.com>

        * DCPS/AssociationData.h:
          Extracted this out of the PublisherImpl.h file into its own
          file because the TransportInterface needs to include it.

        * DCPS/DataWriterImpl.cpp:
        * DCPS/DomainParticipantImpl.cpp:
        * DCPS/PublisherImpl.cpp:
        * DCPS/PublisherImpl.h:
          Fixed warnings by using the in() method on _var objects.

        * DCPS/RcObjectBase.cpp:
        * DCPS/RcObjectBase.h:
        * DCPS/RcObjectHolder_T.h:
        * transport/framework/TransportDefs.h:
        * transport/framework/TransportExceptions.h:
        * transport/framework/TransportFactory.cpp:
        * transport/framework/TransportFactory.h:
        * transport/framework/TransportImpl.cpp:
        * transport/framework/TransportImpl.h:
        * transport/framework/TransportImplFactory.h:
        * transport/framework/TransportImplFactory_var.h:
        * transport/framework/TransportImpl_var.h:
        * transport/framework/TransportListener.cpp:
        * transport/framework/TransportListener.h:
        * transport/simpleTCP/SimpleTcpFactory.cpp:
        * transport/simpleTCP/SimpleTcpFactory.h:
        * transport/simpleTCP/SimpleTcpTransport.cpp:
        * transport/simpleTCP/SimpleTcpTransport.h:
          Cleaned up the #include paths and added the silly /**/ comment
          between the #include and the filename.

        * transport/framework/TransportInterface.cpp:
        * transport/framework/TransportInterface.h:
          Added a stubbed version of add_assocations() and
          remove_associations to the TransportInterface, using the
          agreed upon signatures.


Thu Mar  3 14:05:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
          Made the transport code built on windows.

Thu Mar  3 13:29:13 2005  Mike Martinez  <martinez_m@>

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
          Added ACE_UNUSED_ARG() to remove warnings.

        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp:
          Added newline to end of file to remove a warning.

        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
          Fixed a problem with the pragma once thingie.

Thu Mar  3 13:13:58 CST 2005 Tim Bradley <bradley_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectBase.h:
        * orbsvcs/orbsvcs/DDS/DCPS/RcObjectHolder_T.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportDefs.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportExceptions.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImplFactory_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportImpl_var.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportInterface.h:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.cpp:
        * orbsvcs/orbsvcs/DDS/transport/framework/TransportListener.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpFactory.h:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * orbsvcs/orbsvcs/DDS/transport/simpleTCP/SimpleTcpTransport.h:
        * orbsvcs/tests/DDS/DCPS/transport_dev/framework_test_exe.mpc:
        * orbsvcs/tests/DDS/DCPS/transport_dev/test_main.cpp:
          Initial checkin of the DDS transport framework code.
          This builds under Linux, but won't work on Windows.
          Yan has agreed to make it build on Windows very shortly
          after I commit.

        * orbsvcs/orbsvcs/DdsDcps.mpc:
          Added all of the .cpp files from the DDS transport framework
          and the simple TCP transport directories (see files above)
          into the Source_Files for the main DDS library.  This
          might have to change in the future if we decide to go with
          separate libs.

Wed Mar  2 14:17:03 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp:
          Fixed the compilation errors on the Solaris platforms.


Tue Mar  1 13:28:27 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps_pch.cpp:
        * orbsvcs/orbsvcs/DdsDcps_pch.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps_pch.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps_pch.h:
          Moved the precompiled header to avoid problems with it getting
          put into other projects

        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupportImpl.cpp:
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.idl:
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc:
        * orbsvcs/tests/DDS/DCPS/unit/UnitTest.mpc:
          Compilation fixes, pre compiled header change, and
          include of TAO_ROOT/orbsvcs for idl generated files.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_publisher.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_subscriber.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
          Reduced down to a single file.

Sun Feb 27 12:01:42 MST 2005  Trevor Fields  <fields_t@ociweb.com>

       * orbsvcs/DDS/DCPSInfo_i.cpp
       * orbsvcs/DDS/DCPSInfo_i.h
       * orbsvcs/DDS/DCPS_Entity_Id_Generator.h
       * orbsvcs/DDS/DCPS_IR_Domain.cpp
       * orbsvcs/DDS/DCPS_IR_Domain.h
       * orbsvcs/DDS/DCPS_IR_Participant.cpp
       * orbsvcs/DDS/DCPS_IR_Participant.h
       * orbsvcs/DDS/DCPS_IR_Publication.cpp
       * orbsvcs/DDS/DCPS_IR_Publication.h
       * orbsvcs/DDS/DCPS_IR_Subscription.cpp
       * orbsvcs/DDS/DCPS_IR_Subscription.h
       * orbsvcs/DDS/DCPS_IR_Topic.cpp
       * orbsvcs/DDS/DCPS_IR_Topic.h
       * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp
       * orbsvcs/DDS/DCPS_IR_Topic_Description.h
       * orbsvcs/DDS/DCPS_Utils.h
       * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h
       * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h
       * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.h
       * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.h
       * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp

         Adding documentation.

Thu Feb 24 16:32:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfo_i.cpp
        * orbsvcs/DDS/DCPS_IR_Publication.cpp
        * orbsvcs/DDS/DCPS_IR_Publication.h
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp
        * orbsvcs/DDS/DCPS_IR_Subscription.h
        * orbsvcs/DDS/DCPS_IR_Topic.cpp
        * orbsvcs/DDS/DCPS_IR_Topic.h
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp
        * orbsvcs/DDS/DCPS_Utils.cpp
        * orbsvcs/DDS/DCPS_Utils.h
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
          Changed DCPS Info Repo to notify for inconsistent
          QOS.

        * orbsvcs/orbsvcs/DdsDcpsInfrastructure.idl
          Added TAO specific TRANSPORTTYPE_QOS_POLICY_ID
          This is used to discriminate based on the transport
          that the publication/subscription uses.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp
          Test is now able to create inconsistent QOS situation.
          It does NOT check that it worked.

Thu Feb 24 11:19:15 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
          Fixed the compilation errors since idl module and  
          implementation namespace changes.
        
Wed Feb 23 17:13:55 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp:
          Added most implementations for PublisherImpl class.

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h:
          Implemented a few functions and changed the 
          remove_associations method signiture since the idl 
          interface is changed.

        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h:
          Changed the remove_associations method signiture since
          the idl interface is changed.
         
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl:
          Corrected writerTransInfo variable name in the 
          WriterAssociation struct.
         
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.idl:
          Corrected included DdsDcpsTypeSupportTAO.idl file name.
          
Tue Feb 22 18:47:21 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.mpc
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/Foo_Singleton_Transport.h
          Added functionality to get simple data readers and writers
          working.

        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/SimpleFooTest.mpc
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/main.cpp
        * orbsvcs/tests/DDS/DCPS/SimpleFooTest/run_test.pl
          Added simple data reader and writer test.

Fri Feb 18 12:35:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcpsTypeSupportTao.idl
          Updating the idl.

Fri Feb 18 12:00:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>
        
        * orbsvcs/orbsvcs/DdsDcpsTypeSupportTao.idl:
          Changed the interface return type.
          
Fri Feb 18 11:25:41 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h

          Added some of the topic support functionality.  Checking in
          so yan can use it.

Fri Feb 18 10:40:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
          Added template function servant_to_reference and 
          reference_to_servant in TAO::DCPS namespace to 
          reduce duplicate code.
          
Thu Feb 17 14:31:37 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.mpc
        * orbsvcs/orbsvcs/DdsDcpsTypeSupportTao.idl
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Registered_Data_Types.h
          Adding Registered_Data_Types singleton for registering
          TypeSupports.

        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataReaderImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooDataWriterImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.idl
        * orbsvcs/tests/DDS/DCPS/FooType/FooType.mpc
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.cpp
        * orbsvcs/tests/DDS/DCPS/FooType/FooTypeSupportImpl.h
        * orbsvcs/tests/DDS/DCPS/FooType/footype_export.h

          Adding DcpsFooType library for testing. 

Wed Feb 16 13:13:13 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp
          Added missing file accidently removed during last commit.

Wed Feb 16 12:25:07 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DdsDcps.idl
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl
        * orbsvcs/orbsvcs/DdsDcpsDomain.idl
        * orbsvcs/orbsvcs/DdsDcpsInfo.idl
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl
        * orbsvcs/orbsvcs/DdsDcpsInfrastructure.idl
        * orbsvcs/orbsvcs/DdsDcpsPublication.idl
        * orbsvcs/orbsvcs/DdsDcpsSubscription.idl
        * orbsvcs/orbsvcs/DdsDcpsTopic.idl
        * orbsvcs/orbsvcs/DdsDcpsDataReaderRemote.idl:
        * orbsvcs/orbsvcs/DdsDcpsDataWriterRemote.idl:
        * orbsvcs/orbsvcs/DdsDcpsInfo.idl:
        * orbsvcs/orbsvcs/DdsDcpsInfoUtils.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataReaderImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriterImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactoryImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/EntityImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/PublisherImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/SubscriberImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescriptionImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TopicImpl.h
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupportImpl.cpp
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupportImpl.h
        
          Renamed the DCPSInfo idl files and the servant files, 
          and added the CVS keyword string.
          Added changeable methods to Qos_Helper and made all  
          entities check if its qos is changeable after enabled.

        * orbsvcs/DDS/DCPS_IR_Domain.h
        * orbsvcs/DDS/DCPS_IR_Participant.h
        * orbsvcs/DDS/DCPS_IR_Publication.h
        * orbsvcs/DDS/DCPS_IR_Subscription.h
        * orbsvcs/DDS/DCPS_IR_Topic.h
        * orbsvcs/DDS/DCPSInfo_i.h
        * orbsvcs/DDS/DCPSInfoRepo.cpp
          Fixed the compilation error after the renaming.

Tue Feb 15 15:42:42 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DCPSDataReader.idl:
        * orbsvcs/orbsvcs/DCPSDataWriter.idl:
        * orbsvcs/orbsvcs/DCPSInfo.idl:
        * orbsvcs/orbsvcs/DCPSInfoUtils.idl:
          Made the interfaces in TAO::DCPS module.
        
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupport.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TypeSupport.h:
          Made the servant implementation and the helper class
          in namespace TAO::DCPS.
          
        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
          Fixed compilation error after the DCPSInfo idl interfaces 
          are changed to be in the TAO::DCPS module.
          
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/domain_ids:
          Added missing domain_ids file to support test and 
          other minor changes in Main.cpp.

Mon Feb 14 17:34:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DCPSInfo.idl:
        * orbsvcs/DDS/DdsDcps.mpc:
        * orbsvcs/DDS/DdsDcpsInfrastructure.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Marked_Default_Qos.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.h:
          Updated implementation of Domain components.
          
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        * orbsvcs/tests/DDS/DCPS/unit/run_test.pl:
        * orbsvcs/tests/DDS/DCPS/unit/README:
          Updated tests and tested against the DCPSInfo server.

        * orbsvcs/DDS/DCPSInfo_i.cpp:
          Fixed a bug in find_topic() method that does not allocate 
          memory for out parameter when the topic does not exist.

Sun Feb 13 14:51:04 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/DDS/DCPS_Utils.h:
        * orbsvcs/DDS/README:

        * orbsvcs/orbsvcs/DCPSDataReader.idl:
        * orbsvcs/orbsvcs/DCPSDataWriter.idl:
        * orbsvcs/orbsvcs/DCPSInfo.idl:
        * orbsvcs/orbsvcs/DCPSInfoUtils.idl:
          Update the functionality of the DCPSInfoRepo.

        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:

          Update the sample publisher.

Tue Feb  8 11:57:01 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
          Got it to a working state.  It is missing some error checking
          currently.
        
        * orbsvcs/orbsvcs/DCPSDataReader.idl:
        * orbsvcs/orbsvcs/DCPSDataWriter.idl:
        * orbsvcs/orbsvcs/DCPSInfo.idl:
        * orbsvcs/orbsvcs/DCPSInfoUtils.idl:
        * orbsvcs/orbsvcs/DdsDcps.mpc:
          The callback interface for the publications and
          subscriptions.
        
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_publisher.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/dcpsinfo_test_subscriber.mpc:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/publisher.cpp:
        * orbsvcs/tests/DDS/DCPS/DCPSInfoRepo/subscriber.cpp:
          A simple publisher and subscriber.

Tue Feb  8 11:43:23 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:
        Fixed get_offered_incompatible_qos_status method name 
        misspelling.
        
Tue Feb  8 11:18:00 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/DDS/DdsDcps.mpc:
        * orbsvcs/DDS/DdsDcpsDomain.idl:
        * orbsvcs/DDS/DdsDcpsInfrastructure.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Qos_Helper.inl:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Service_Participant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Topic.h:
        Added implementation of Domain components.
        
        * orbsvcs/tests/DDS/DCPS/unit/Main.cpp:
        Added domain interface tests.

Fri Feb  4 12:13:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/DDS/DCPSInfoRepo.cpp:
        * orbsvcs/DDS/DCPSInfoRepo.mpc:
        * orbsvcs/DDS/DCPSInfo_i.cpp:
        * orbsvcs/DDS/DCPSInfo_i.h:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.cpp:
        * orbsvcs/DDS/DCPS_Entity_Id_Generator.h:
        * orbsvcs/DDS/DCPS_IR_Domain.cpp:
        * orbsvcs/DDS/DCPS_IR_Domain.h:
        * orbsvcs/DDS/DCPS_IR_Participant.cpp:
        * orbsvcs/DDS/DCPS_IR_Participant.h:
        * orbsvcs/DDS/DCPS_IR_Publication.cpp:
        * orbsvcs/DDS/DCPS_IR_Publication.h:
        * orbsvcs/DDS/DCPS_IR_Subscription.cpp:
        * orbsvcs/DDS/DCPS_IR_Subscription.h:
        * orbsvcs/DDS/DCPS_IR_Topic.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic.h:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.cpp:
        * orbsvcs/DDS/DCPS_IR_Topic_Description.h:
        * orbsvcs/DDS/DCPS_Utils.cpp:
        * orbsvcs/DDS/DCPS_Utils.h:
        * orbsvcs/orbsvcs/DCPSInfo.idl:

          Adding the DCPSInfo repository.

Tue Feb  1 14:04:38 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * orbsvcs/orbsvcs/DCPSInfo.idl:
          Adding the idl file.

Thu Jan 27 13:04:17 USMST 2005 Yan Dai  <dai_y@ociweb.com>
    
        * orbsvcs/DdsDcpsTopic.idl:
        * orbsvcs/orbsvcs/Topic.h:
        * orbsvcs/orbsvcs/Topic.cpp:
          Added set_qos, get_qos, set_listener and get_listener methods
          to Topic interface.
        
        * orbsvcs/tests/DDS/DCPS/UnitTest.mpc
          Renamed the project name to follow name convention of orbsvcs 
          tests.
          
Thu Jan 27 11:58:09 USMST 2005 Yan Dai  <dai_y@ociweb.com>
        
        * orbsvcs/DdsDcps.idl:
        * orbsvcs/DdsDcpsDomain.idl:
        * orbsvcs/DdsDcpsInfrastructure.idl:
        * orbsvcs/DdsDcpsPublication.idl:
        * orbsvcs/DdsDcpsSubscription.idl:
        * orbsvcs/DdsDcpsTopic.idl:
        * orbsvcs/DdsDcps.mpc:
          Renamed the idl files, moved them from 
          orbsvcs/orbsvcs/DDS/DCPS directory to the orbsvcs/orbsvcs/ directory
          and made the TAO_DdsDcps library exportable.
           
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_export.h
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataReader.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DataWriter.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipantFactory.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DomainParticipant.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Entity.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Publisher.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.h:
        * orbsvcs/orbsvcs/DDS/DCPS/Subscriber.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.h:
        * orbsvcs/orbsvcs/DDS/DCPS/TopicDescription.cpp:
        * orbsvcs/orbsvcs/Topic.h:
        * orbsvcs/orbsvcs/Topic.cpp:
        * orbsvcs/orbsvcs/TypeSupport.h:
        * orbsvcs/orbsvcs/TypeSupport.cpp:
          Rename servant files, made the class name prefixed with "TAO_DCPS" and 
          made the class exportable.
          
        * Service_Participant.h:
        * Service_Participant.cpp:
          Added the Service_Participant singleton to initialize the configuration 
          for DDS/DCPS and start/shutdown the DDS service.
        
        * orbsvcs/tests/DDS/DCPS/UnitTest.mpc
        * orbsvcs/tests/DDS/DCPS/Main.cpp
        * orbsvcs/tests/DDS/DCPS/DataReaderListener.h:
        * orbsvcs/tests/DDS/DCPS/DataReaderListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DataWriterListener.h:
        * orbsvcs/tests/DDS/DCPS/DataWriterListener.cpp:
        * orbsvcs/tests/DDS/DCPS/DomainParticipantListener.h:
        * orbsvcs/tests/DDS/DCPS/DomainParticipantListener.cpp:
        * orbsvcs/tests/DDS/DCPS/Listener.h:
        * orbsvcs/tests/DDS/DCPS/Listener.cpp:
        * orbsvcs/tests/DDS/DCPS/PublisherListener.h:
        * orbsvcs/tests/DDS/DCPS/PublisherListener.cpp:
        * orbsvcs/tests/DDS/DCPS/SubscriberListener.h:
        * orbsvcs/tests/DDS/DCPS/SubscriberListener.cpp:
        * orbsvcs/tests/DDS/DCPS/TopicListener.h:
        * orbsvcs/tests/DDS/DCPS/TopicListener.cpp:
          Added DDS/DCPS/unit test directory and moved all listener implementations 
          there.
          
Mon Jan 24 11:22:01 USMST 2005 2005 Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/DDS/DCPS/DdsDcps.mpc:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_domain.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_infrastructure.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_publication.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_subscription.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dcps_topic.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/dds_dcps.idl:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReaderListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReaderListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReader_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataReader_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriterListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriterListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriter_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DataWriter_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantFactory_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantFactory_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipantListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipant_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_DomainParticipant_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Entity_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Entity_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Listener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Listener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_PublisherListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_PublisherListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Publisher_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Publisher_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_SubscriberListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_SubscriberListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Subscriber_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Subscriber_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicDescription_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicDescription_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicListener_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TopicListener_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Topic_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_Topic_i.h:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TypeSupport_i.cpp:
        * orbsvcs/orbsvcs/DDS/DCPS/DDS_TypeSupport_i.h:
        
        Added dcps idl files and implementation starter code.
