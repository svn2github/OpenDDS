project(DDS*idl): dcps {
  // This project ensures the common components get built first.

  TypeSupport_Files {
    Messenger.idl >> MessageTypeSupport.idl MessageTypeSupportImpl.h MessageTypeSupportImpl.cpp
  }

  IDL_Files {
    Messenger.idl
    MessageTypeSupport.idl
  }

  custom_only = 1
}


project(DDS*Publisher) : dcpsexe_with_tcp, portableserver {

  exename   = publisher
  after    += DDS*idl

  TypeSupport_Files {
    Messenger.idl >> MessageTypeSupport.idl MessageTypeSupportImpl.h MessageTypeSupportImpl.cpp
  }

  IDL_Files {
    Messenger.idl
    MessageTypeSupport.idl
  }

  Source_Files {
    publisher.cpp
    Writer.cpp
    MessageTypeSupportImpl.cpp
  }
}

project(DDS*Subscriber) : dcpsexe_with_tcp, portableserver {

  exename   = subscriber
  after    += DDS*idl

  TypeSupport_Files {
    Messenger.idl >> MessageTypeSupport.idl MessageTypeSupportImpl.h MessageTypeSupportImpl.cpp
  }

  IDL_Files {
    Messenger.idl
    MessageTypeSupport.idl
  }

  Source_Files {
    subscriber.cpp
    DataReaderListener.cpp
    MessageTypeSupportImpl.cpp
  }
}


project(DDS*Monitor) : dcpsexe_with_tcp, portableserver {

  exename   = monitor
  requires += built_in_topics

  Source_Files {
    monitor.cpp
  }
}
