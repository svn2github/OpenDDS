Mon Jun 19 18:58:43 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * TAO/DDS/dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * TAO/DDS/dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.h:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          Fixed a deadlock situation on linux when the direct_send()
          detects a lost connection and calls the relink(). The problem is the 
          direct_send() is called under the lock in send strategy and the 
          suspend_send() called by relink() aquires the same lock.
          To fix it, an extra parameter do_suspend is added to relink() 
          function to indicate if the relink() needs call suspend_send() on 
          send strategy object. If the thread calling relink() already hold
          the lock it will call the operations in suspend_send() before calling
          relink (), otherwise the relink() will call suspend_send().
          
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added shutdown () method to SimpleTcpConnection to shutdown the 
          reconnect task. This is called during transport pre-shutdown phase 
          after the datalink sends graceful disconnect message. This would
          avoid an access violation during transport shutdown.
          
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        
          Made the shutdown () do shutdown work just once if it's called multiple
          times.
          
        * TAO/DDS/dds/DCPS/DataWriterImpl.cpp:
        
          Corrected a debug message.
          
Fri Jun  9 07:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/DCPS/CPPTemplate.pm:
          Made changes to fix compile problems with BCB6

        * dds/DCPS/transport/framework/DataLink.h
        * dds/DCPS/transport/framework/DataLinkSetMap.h
        * dds/DCPS/transport/framework/ReceiveListenerSet_rch.h
        * dds/DCPS/transport/framework/TransportFactory.h
        * dds/DCPS/transport/framework/TransportImpl.h
        * dds/DCPS/transport/framework/TransportImplFactory.h
        * dds/DCPS/transport/framework/TransportSendStrategy_rch.h
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h
          Added needed includes to get things compiling with BCB6

Wed Jun  7 18:30:09 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added a limitation that transport can not receive single packet
          with single control message without data.

Wed Jun  7 09:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * dds/DCPS/Transient_Kludge.h:
          Fixed compile error with Borland

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
          Added missing include of post.h

Thu Jun  1 20:01:23 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.h:
        * tests/DCPS/FooTest4_0/Reader.h:

          Fixed the compilation errors with gcc4.1 due to the
          class scope prefixed to the method declaration.

Fri May 12 00:13:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added VC6 build support and a potential deadlock fix.

Fri May 12 00:00:27 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Renamed the second version of servant_to_reference() to
          servant_to_reference_2 to resolve the compilation errors
          on VC6. The VC6 can not recognize the template function
          with same name but difference template parameters.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Updated to use servant_to_reference_2().

        * tests/DCPS/MultiDPTest/README:

          Made a corresponding readme.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Added the thr_id_ data for checking if the shutdown()
          is called by the thread the task created. The thread
          should not wait for itself. This should fix a potential
          deadlock.

Mon May  8 20:16:50 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          DDS 0.8 released.

        * VERSION:

          Updated timestamp of the 0.8 release.

        * DDS_release_notes.txt:

          Updated one limitation note.

        * TAO_DDS_Configuration_Settings.html:

          Added reconnection configuration values.

Mon May  8 18:46:56 UTC 2006  Scott Harris <harris_s@ociweb.com>


        * DDS_release_notes.txt:
        * TAO_DDS_Configuration_Settings.html:

          Updated the release notes and added the config file html.

Mon May  8 18:36:24 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:
        * VERSION:

          Changes related to the 0.8 release.

Fri May  5 21:33:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

          Moved the qos operator functions from TAO::DCPS namespace to global
          namespace. This would resolve the compilation errors on DDS builds
          against DOC's latest version that the VC71 compiler can not find
          the octet sequence operator==.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:

          Made the qos operator== called implicitly instead of explicitly.
          Calling operator== explicitly was used as a workarround of the
          compilation problem metioned above.

        * tests/DCPS/Reconnect/run_test.pl:

          Added expected lost_subscription_callback=1 to the bp_timeout test.
          This fixed the test failure on windows.

Fri May  5 18:41:51 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple/DDS_transport_simple.mpc:
        * tests/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * tests/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * tests/transport/simple_n/DDS_transport_simple_n.mpc:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Added inheritance from portableserver base project.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Fri May  5 17:48:53 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/repo.conf:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Made the repo use the repo.conf to avoid multiple requests
          handled by single orb thread at the same time. This would
          fix the problem on sunos59 gcc3.3.2 builds that the DCPSInfo
          could not be terminated. It seems without using the service
          config file, the DCPSInfo deadlocked and the TerminateWaitKill()
          in perl script will return non-zero which causes the test failure.

Fri May  5 14:44:39 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Updated notes for re-establishment of lost connection.

Thu May  4 20:06:22 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h

          Reversed the changes Scott made on
          "Thu Dec 15  8:35:17 USMST 2005 2005  Scott Harris  <harris_s@ociweb.com>"
          since the TAO1.4a latest version works without the change.

Wed May  3 11:30:09 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Changed from char* to const char* to avoid build warnings from
          SunCC.

        * tests/DCPS/MultiDPTest/common.h:

          Removed the trailing comma from an enum to avoid build warnings
          from SunCC.

Tue May  2 16:59:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.inl:

          Changed to call operator==(TAO::unbounded_value_sequence<CORBA::Octet>)
          explicitly. It is ugly but it resolves the compilation error on VC71
          against DOC's latest version. This seems be a compiler problem that
          does not recognize the global operator== when the global operator== is
          defined as inline and it's called by the code inside of a namespace.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/SubscriberImpl.cpp:

          Fix bugs on subscriber that does not increase the sequence length
          before adding new elements to the sequence. This problem was detected
          in FooTest4_0 with the DOC's latest version which has the new sequence
          implementation.

Tue May  2 13:38:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_2/FooTest3_2.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1.mpc:
        * tests/transport/dds_comparative/dds_transport_comparative.mpc:

          Added inheritance from portableserver base project for subscriber.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Mon May  1 13:16:56 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Replaced the close() in SimpleTcpReconnectTask with shutdown ()
          method. The difference is the shutdown() will wait for thread
          exit. This would resolve an access violation due to the race
          condition in the SimpleTcpReconnectTask object
          Some un-necessary variables num_threads_ and active_workers_
          are also removed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Made the Datalink not send the GRACEFUL_DISCONNECT message if
          it already received the GRACEFUL_DISCONNECT message from peer.
          This would fix the error
          "SimpleTcpSendStrategy::send_bytes: ERROR: sendv: Bad file
           descriptor iovec count: 3" upon shutdown.

        * dds/DCPS/DataWriterImpl.cpp:

          Fixed a warning with unused variable.

Fri Apr 28 12:59:58 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixes a problem on linux that transport does not
        identify peer disconnecting due to crash. This should fix
        the "run_test.pl restart_pub" test on linux.

        * dds/DdsDcps.mpc:

          Added TransportGDControlElement.cpp.

        * dds/DCPS/DataSampleHeader.h:

          Added GRACEFUL_DISCONNECT message id.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Added new hooks so the concrete datalink can send graceful
          disconnect message before transport shutdown or releasing
          datalink.

        * dds/DCPS/transport/framework/TransportGDControlElement.cpp:
        * dds/DCPS/transport/framework/TransportGDControlElement.h:

          New type control message that does not need data_delivered
          callback.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Made the transport also try to reconnect if it did not receive
          the graceful disconnect message when receive_bytes() returns 0.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          This is the correct version that Scott committed for fixing
          rae\rt8448\test failure.
          "Tue Apr 25 09:48:23 USMST 2006  Scott Harris <harris_s@ociweb.com>"

Tue Apr 25 09:48:23 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Fix a problem were a second disconnect and reconenct did
          not call on_*_disconnected() or on_*_reconnected().
          Yan made the initial fix and I changed it a bit.

        * dds/DCPS/DataWriterImpl.cpp:

          Correct a typo in a log message.

Sun Apr 23 22:50:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to an effort to fix rae\rt8448\test failure.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:

          Fixed memory leaks and added more debugging messages.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Fixed multiple reconnected notification problem. The problem
          is the passive connection side seems not realize the lost
          connection before a new connection is reestablished.
          Changed to use the enum reconnect_state_ instead of a bool
          variable to mark various states during reconnecting and also
          seperate the active_reconnect_on_new_association() from
          active_reconnect_i() to make these function more obvious.

Sat Apr 22 21:54:02 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made the elems_ and queue_ to be allocated on heap. This would help
          resolve a deadlock situation after reconnect fails. The deadlock
          happens when a send thread holds datawriter's lock and try to acquire
          the SendStrategy's lock and the reconnect thread calls terminate_send
          which got the SendStrategy's lock and drop all queued samples and try
          to call data_dropped on DataWriter. The changes makes we can remove
          queued elements outside the SendStrategy's lock.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Changed to create per connection reconnect task to do the reconnecting instead
          of using single thread to do reconnecting for all datalinks in a TransportImpl.
          Hope this fix the rae\rt8448\test failure

Fri Apr 21 11:42:58 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added note for a transport limitation.

Fri Apr 21 10:17:51 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Corrected incorrect parameter order in a logging message.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:

          Added the new on_*_disconnected and on_*_reconnected to the listener
          implementations.

Fri Apr 21 01:09:00 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        The main changes are made to add the on_*_reconnected and on_*_disconnected
        new callbacks for RT8499.

        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Added the on_*_reconnected and on_*_disconnected callbacks
          Updated the *LostStatus to just contain the instance handles
          and typedef'd the *LostStatus as *DisconnectedStatus and
          *ReconnectedStatus.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Made the DataReader/DataWriter not cache the *LostStatus and
          added notify_*_diconnected and notify_*_reconnected to support
          the new callbacks.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:

          Updated the notify() function for DISCONNECTED, RECONNECTED and
          LOST connection notification.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          On active connection side, made the disconnected callback called
          before reconnect, the reconnceted callback called after reconnect
          succeeded and the lost connection callback called after reconnet
          failed.
          On passive connection side, made the disconnected callback called
          before reconnectschedule the timer, the reconnceted callback called
          when new connection is created and the lost connection callback
          called after the passive_reconnect_duration_ period if not reconnected.
          Updated some methods to correct the reconnect logic on the passive side.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Changed to use the "old" connection object to transfer its state to
          the "new" connection object instance of using "new" connection object
          copy state from "old" connection object. This was changed since we
          need synchronize the handle_timeout() and transfer state to "new"
          connection object on the "old" connection object.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:

          Added the new callback implementations.

Fri Apr 21 00:01:11 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Increased amount of time for the DCPSInfoRepo to shutdown.

Thu Apr 20 13:40:46 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Updated the data_dropped() method signature to be same as in the base
          class TransportSendListener. This would fix the errors
          "ERROR: Subclass should override if sending control samples. "
          when the transport drops the control messages due to a lost
          connection.

Wed Apr 19 19:13:01 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added tests/DCPS/Reconnect tests.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/run_test.pl:

          Added more options to publisher and subscriber to help automate the
          reconnect tests. Changed run_test.pl to redirect the output to a log
          file so that errors due to an abnormal shutdown and lost connection
          will not show on scoreboard. The final output "test PASSED" or
          "test FAILED" will show the test result.

Wed Apr 19 13:04:26 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_0/FooTest3_0.mpc:

          Added inheritance from portableserver base project for subscriber.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Mon Apr 17 09:45:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added release notes for main changes after 0.7 release.

Sun Apr 16 22:32:55 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:

          Added the notify_lost bool parameter to the remove_association()
          method which overrides the virtual methods in
          TAO::DCPS::DataReaderImpl/DataWriterImpl. This should fix the
          test failure on remove_association.

Sun Apr 16 21:43:11 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendListener.cpp:

          Fixed a compilation warning due to an unused variable.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:

          Fixed a bug on wait_to_unclog that passes an ACE_Time_Value::zero
          to handle_write_ready instance of 0 as the timeout parameter.
          This would fix the TCPListener performance test.

Sun Apr 16 21:53:02 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Serializer/SerializerTest.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:

          More scoreboard directed cleanup.

        * tests/DCPS/FooTest4/main.cpp:

          This change from std::string to ACE_CString was not dictated by
          the nightly scoreboard, but my local PC failed to compile the
          test as provided with std::string. This is on my home x86-32
          running Linux 2.6.10-1.770_FC2 with gcc version 3.3.3 20040412
          (Red Hat Linux 3.3.3-7). I felt it was not a big deal to add the
          ACE_CString since the test code is already linking in ACE to do
          parameter parsing.

Sun Apr 16 07:30:45 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Removed extraneous comma from enumeration list. I noticed that
          the enumeration also contains "NOTIFY_IMMEADIATELY" which should
          be changed to "NOTIFY_IMMEDIATELY". I'm not going to change that
          because I don't know the implications of such a change.

Sat Apr 15 13:23:09 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are tested on linux and fixed the deadlock situation
        during reconnecting.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made the send strategy will not wait for the reconnecting finish
          since the thread might hold the lock in DataWriterImpl and the
          reconnect thread might need call data_dropped () on DataWriterImpl
          which will cause datalock.

Sat Apr 15 11:47:43 USMST 2006  Yan Dai  <dai_y@ociweb.com>

          These changes are made to expect to fix a deadlock situation during
          reconencting on linux and they also fixed unregister data sample
          errors during shutdown for RT8499.

        * dds/DCPS/WriteDataContainer.cpp:

          Updated the data_dropped() to do same thing as data delivered
          when the transport initiates the data dropping which happens when
          connection lost and reconnet fails.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Made send strategy queue the connection to reconnect task in relink()
          and wait on a condition variable until the reconnect task completes
          the reconnecting and signal the condition. This would resolve the
          deadlock problem on linux and avoid using a recursive lock in
          TransportSendStrategy as a work around in my last commit.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Made the relink() has no return value.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Added DO_RECONNECT_UPON_SEND case to handle re-establishing
          of a lost connection detected by send strategy.

Thu Apr 13 17:01:08 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Changed to use ACE_Recursive_Thread_Mutex to fix the deadlock
          situation during reconnecting on linux. This is a temporary
          workarround. I need find a better way to fix it.

Thu Apr 13 14:59:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

       * tests/DCPS/Reconnect/repo.conf:

          Added missing file.


Thu Apr 13 13:23:18 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Fixed compilation errors on lunix build.

Thu Apr 13 12:54:39 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These are review fix for RT8499 and the compilation errors due to
        data_dropped () and remove_sample() signature changes are also fixed.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Changed to use while loop instead of for loop for code clarity.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added checking of the return value from dynamic_cast.

        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Publication.h:

          Added comments for the new parameter notify_lost.

        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimpleDataWriter.h:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.h:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.h:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.h:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.h:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.h:

          Fixed compilation errors due to the data_dropped ()
          and remove_sample() signature changes.

Thu Apr 13 10:30:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changs are made to drop messages after the reconnect
        failed for RT8499.

        * dds/DdsDcps.mpc:

          Added RemoveAllVisitor.cpp.

        * dds/DCPS/transport/framework/RemoveAllVisitor.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.h:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:

          New files are added to support the clear all elements in
          a BasicQueue.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.h:

          Added an extra parameter dropped_by_transport bool to the
          data_dropped(), remove_sample() and related methods. The
          dropped_by_transport true indicates the data dropping is initiated
          by transport which occurs when the transport send strategy is in
          a MODE_TERMINATED state. All messages are dropped in that state.
          The dropped_by_transport false which is the case before adding
          this extra parameter. The dropping is a result of remove_sample()
          call which is initiated by datawriter with KEEP_LAST history policy
          when the number of samples exceeds the depth of history queue.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added a few SendMode types(MODE_TERMINATED, MODE_SUSPEND and
          MODE_NOT_SET). These modes are used when reconnecting logic is
          used. When the connection is lost, the mode is set to
          MODE_SUSPEND until reconnect finishes. In the MODE_SUSPEND state,
          all messages are queued. If the reconnect succeeds, the mode is
          back to the state before suspend. If the reconnect fails after
          a "conn_retry_attempts" attempts, then the mode is set to
          MODE_TERMINATED and all messages in the backpressure queue and
          packet queue are removed and the data_dropped () is called for
          every element. During the state of MODE_TERMINATED, any sending
          or queuing are stopped and the messages are dropped.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Added send_strategy_ data member for state change when reconnecting
          happens. The suspend_send is called before reconnecting. The
          resume_send is called when the reconnect succeeds. The terminate_send
          is called after the reconnect fails.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy_rch.h:

          Removed lost_link() hook. Now we can use the mode in the
          TransportSendStrategy to know the state of the connection.

        * tests/DCPS/Reconnect/run_test.pl:

          Fixed the restart_sub test since now we drop the messages
          after reconnect failed.

        * tests/DCPS/Reconnect/sub.ini:

          Change to default "conn_retry_attempts".

Wed Apr 12 17:19:27 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * DDS_release_notes.txt:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:

          Typo fixes from review for RT 8499.

Tue Apr 11 11:44:32 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Fixed a compilation error on linux builds that need ace/Time_Value.h
          include.

Tue Apr 11 10:34:34 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Corrected lost_link() check in send_bytes().

        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:

          Changed the conn_retry_backoff_multiplier_ to be double instead of float
          to avoid warnings.

Tue Apr 11 10:10:41 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made for RT8499 to resolve the problem that publisher
        does not stop sending during reconnecting. There are two parts of the changes
        need be made and note the second part is not done yet.
          1)transport should queue the messages while reconnecting
          2)transport should discard the messages if the reconnect fails.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:

          Made handle_input () return -1 if the receive_bytes() return -1. This would
          close the connection anyway even it will try to reconnect.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:

          Added ready_send() virtual function to check if the connection is connected.
          This will be called whenever this->synch_->work_available is called or before
          sendv. This would stop the writing on a disconnected socket.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:

          Made it has reference to the SimpleTcpTransport object and
          added get_transport_impl() accessor.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:

          Made relink() to queue the connection object to the SimpleTcpReconnectTask
          to do the reconnect since we don't want the reactor thread block on reconnecting
          and not receiving other incoming messages.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Made this task handle both reconnecting and new connection checking.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Added reconnect task accessor so the SimpleTcpReceiveStrategy can access
          it and handle the connection to the reconnect task to do reconnect.


        These changes are made for RT8499 to add the support to declare connection
        lost upon backpressure timed out.

        * DDS_release_notes.txt:

          Updated comments for "max_output_pause_period" configuration.

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added GET_CONFIG_FLOAT_VALUE macro.

        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.h:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:

          Made the wait_on_clogged_resource() and wait_on_unclog() return status.
          The PerConnectionSynch thread terminates if it returns an error.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Added max_output_pause_period_ and changed the
          conn_retry_backoff_multiplier_ to be float instead of int.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Added new method notify_lost_on_backpressure_timeout() to support
          the disconnecting and notification when the transport stay in
          backpressure too long ( > max_output_pause_period).
          Removed unused parameter "notify" from reconnect_i().
          Accomodated with the changes of conn_retry_backoff_multiplier_
          type change.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.inl:

          Made the max_output_pause_period passed to the constructor and made
          wait_to_unclog() call notify_lost_on_backpressure_timeout() upon
          handle_write_ready() timeout.

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Updated comments for the reconnect strategy configuration values and
          added new configuration "max_output_pause_period".

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:

          Added read/write delay for bp_timeout test.

        * tests/DCPS/Reconnect/run_test.pl:

          Added bp_timeout test case.

        * tests/DCPS/FooTest4/main.cpp:

          Made subscriber attach to transport to avoid the errors return
          from create_datareader() due to no transport.

Mon Apr 10 13:03:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Corrected the description for "conn_retry_backoff_multiplier" configuration.

Mon Apr 10 09:20:35 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Corrected the notify_*_lost() to avoid duplicate reader/writer id
          report lost.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Corrected reconnect() to notify connection lost just once and not
          try to reconnect in subsequence send/recv failure.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Added reconnect() call in find_or_create_datalink() method when the
          connection is previously lost and now the datalink is requested because
          of the new association.

Fri Apr  7 15:15:23 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for reconnect and lost connection callback support.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed the "#if 0" in create_*/delete_* that was used to avoid
          some test failure, but the tests are fixed, we just remove it.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Removed the "attempt_connection_reestablishment" configuration
          since it's duplicated with other configuration values and
          updated some spelling errors with the configuration values.

        * tests/DCPS/FooTest3_0/pub_main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/sub_main.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/sub_main.cpp:
        * tests/DCPS/FooTest3_2/pub_main.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.h:

          Made the test call attach_transport before create_datawriter()
          to fix the test failures.

Fri Apr  7 00:46:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These files are changed to support the connection reestablishment
        and lost connection notify. See RT8499.

        * dds/DdsDcps.mpc:

          Added new file SimpleTcpReconnectTask.h/.cpp.

        * dds/DdsDcpsDataReaderRemote.idl:
        * dds/DdsDcpsDataWriterRemote.idl:

          Added a paramter "notify_lost" to the remove_association
          in DataReaderRemote and DataWriterRemote interfaces.
          The flag true indicates the remove_association is invoked
          by the InfoRepo after it detected a lost writer/reader. The
          InfoRepo detect the lost writer/reader when the
          add_association/remove_association invocations on the writer/reader
          object reference fail. The datareader/datawriter needs notify the
          the DataReaderListener/DatawriterListener the publication/subscription
          lost.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Added methods to support the notification of the publication/subscription
          lost and updated the remove_associations() signature change.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Made the datareader/datawriter register with the TransportImpl upon
          creation and unregister upon deletion.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:

          Added notify_lost() method that is called by the SimpleTcpConnection
          upon reconnect failure. Changed the receive_strategy_ to be protected
          data so the SimpleTcpDataLink can access it.

        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:

          Added lock to protect the map. This would fix the problem when
          multiple add_association() are called at the same time. The
          find_or_create_set() failure causes the add_association() failure.

        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Added internal map accessor so we can iterate the map to notify
          listener about the lost subscriptions/publication.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:

          Added methods to register/unregister/find the datareader
          and datawriter object.

        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:

          Added TransportImpl object reference accessor.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added relink() funcation and call it when the send_packet()
          and receive_packet() return an error.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Added new configurations to support connection re-establishment.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          This is the main change made for the re-establish a connection.
          Added more states to have enough information for re-establish
          and reuse the connection object. If connector/acceptor role of
          the connection is not changed when the connection is re-established.
          As the connector side, we reuse the same connection object after
          reconnected. As the acceptor side, since the ACE_Acceptor creates
          a new connection each time when it accept a connection, we can not
          reuse the connection object. The states in the "old" connection
          object are copied to the "new" connection object.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:

          Added reconnect() function to replace an "old" connection with the
          "new" connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:

          Added method to restart the ReceiveStrategy.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          This is a new class that is dedicated to check if the incoming
          connections are re-established connection from the remote. This
          would resolve the deadlock problem between the reactor thread
          (calling SimpleTcpTransport::passive_connction()) and the orb
          thread (calling SimpleTcpTransport::make_passive_connction()).
          The reactor thread will enqueue the new connection  to this task
          and let this task dequeue and check the connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Called SimpleTcpReconnectTask open and close upon transport
          initialization and shutdown.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Updated to accommodate the change of the remove_association()
          signature change.

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:

          Added configuration values for retry connect to the example.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Updated to accommodate the change of the remove_association()
          signature change.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/domain_ids:
        * tests/DCPS/Reconnect/Messenger.idl:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/Writer.h:

          Added new test to test connection re-establishment and the lost
          connection notification.

Fri Mar 31 09:02:01 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        Adding a listener type for handling the notification of disconnects
        from the transport. RT 8499

        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Added TAO::DCPS::DataReaderListener and
          TAO::DCPS::DataWriterListener to provide the on_subscription_lost
          and on_publication_lost functionalities.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:

          Changed the Listeners to inherit from the POA_TAO::DCPS
          version instead of the the POA_DDS


        * dds/DCPS/transport/framework/TransportInterface.h:

          Removed unnecessary friend class declaration.

Wed Mar 29 13:59:23 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Removed old comments and never reached code.

Wed Mar 29 10:46:36 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a warning "control reaches end of non-void function"
          on linux build.

        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Added the get_type_name() implementation to fix the compilation
          error "cannot instantiate abstract class".

        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:

          Changed the sample_num_ from long to be CORBA::Long to fix
          a warning in fprintf().

Tue Mar 28 14:11:41 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        Added TypeSupport::get_type_name() support for RT8496.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Added *TypeSupportImpl::get_type_name() implementation that use
          the interface repository id as the default type name.
          Made *TypeSupportImpl::register_type() check nil type name. If a nil
          type name is given then the default type_name is used.

        * dds/DdsDcpsTopic.idl:

          Added get_type_name() to the TypeSupport interface.

        * dds/DCPS/Registered_Data_Types.cpp:

          Updated the register_type() to use the get_type_name() for
          TypeSupport comparison instead of using
          _interface_repository_id() directly.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Updated the example to test TypeSupport::get_type_name() support.
          The nil type name is passed for type registration and get_type_name()
          is called to get the type name for topic creation.

Tue Mar 28 14:19:22 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:

          Added TCPListenerTests to the nightly build list of tests to run.
          UDP was not added due to the highly machine dependent performance
          of UDP.


Tue Mar 28 14:09:36 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        Adding scripts for topology tests for RT 8490.

        * performance-tests/DCPS/TCPListenerTest/conf.ini:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:

          Added scripts to run the different topology tests.

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:

          Removed old test scripts.

        * performance-tests/DCPS/UDPListenerTest/common.h:

          Changed variable name for clarity in reading.

Tue Mar 28 10:20:20 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to remove the "using namespace" in the
        dds core code. See RT8495.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/InstanceState.inl:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/ReceivedDataElementList.inl:
        * dds/DCPS/Serializer.cpp:
        * dds/DCPS/Serializer.inl:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Removed "using namespace" from the dds core code.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:

          Fixed compilation after the "using namespace" removal change.

Mon Mar 27 16:14:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to fix the DDS test failures between machines
        with different endianess. The swap_bytes configuration value per
        TransportImpl instance is also appropriately used to allow different
        transports use different setting of swap_bytes. (See RT8381)

        * bin/DCPS/CPPTemplate.pm:

          Made the Serializer in *DataWriterImpl::marshal() constructed
          with the swap_bytes flag based on swap_byte configuration value
          and made the Serializer in *DataReaderImpl::demarshal() constructed
          with the swap_bytes flag based on the endianess of the host and
          the byte order flag from the publisher.

        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataSampleHeader.inl:

          Set the swap_bytes flag to the Serializer in the reading side based
          on the the endianess of the host and the byte order flag in the data
          sample from publisher.

        * dds/DCPS/DataWriterImpl.cpp:

          Made the sample and control message header correctly set byte_order.

        * dds/DCPS/transport/framework/TransportHeader.cpp:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportHeader.inl:

          Added one more octet to the TransportHeader to indicate the endianess
          of the publisher side and updated the marshal and demarshal methods
          with the new flag.

Mon Mar 27 12:06:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Fixed the compilation error on some platforms in servant_to_reference()
          that misses the "typename" keyword for the_obj variable.

Fri Mar 24 11:22:34 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Reduce the template parameters from 3 to 1 for servant_to_reference.
          Thanks to Don Busch for suggesting this.

        * DDS_info.txt:

          More notes from Don's questions.

Thu Mar 23 09:17:23 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * DDS_info.txt

          This file is a place to collect notes that may later
          become part of the DDS section of the TAO Dev. Guide.

Wed Mar 22 11:53:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Moved the TransportReplaceElement cached allocator from PacketRemoveVisitor
          to TransportSendStrategy to fix a bug in the transport. The problem is
          PacketRemoveVisitor is allocated on stack so the allocator is destroyed
          as the PacketRemoveVisitor goes out of scope, but late the
          TransportReplaceElement accesses the allocator and causes the access
          voilation.

Wed Mar 15 11:26:50 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added tests/DCPS/MultiDPTest test.

Wed Mar 15 11:17:25 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:

          Change the hash map using void* as the key to fix the build problem
          on 64bits build.

Tue Mar 14 12:37:29 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:

          Changed the register_type() to use the_interface_repository_id
          comparison instead of  POA_TAO::DCPS::TypeSupport_ptr comparison.
          This would allow different TypeSupport instances of the same TypeSupport
          type register with the same type name in the same domain pariticipant.
          The second (and subsequent) registrations are ignored.

        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Added a test case that registers different TypeSupport instances of
          the same TypeSupport type using the same type name in a domain
          participant.

Mon Mar 13 14:50:00 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Added a type to the declaration of 'i'.

Tue Jan 24 13:54:33 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixes a bug in Registered_Data_Types that causes
        multiple domain participants within the same domain in a process
        can not register same data types. See RT8440.

        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:

          Made the DomainHash hash map use DomainParticipant object reference
          as the key instead of domain id. This would allow the data type
          be unique within a DomainParticipant and not within a domain.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Updated the first argument to the
          Registered_Data_Types::register_type() call.

        * tests/DCPS/MultiDPTest/common.cpp:
        * tests/DCPS/MultiDPTest/common.h:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.h:
        * tests/DCPS/MultiDPTest/domain_ids:
        * tests/DCPS/MultiDPTest/MultiDPTest.mpc:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/README:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/TestException.h:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.h:

          Created a new test for the bug fix. This is a test to show
          that multiple domain participants within a domain in a process
          can register the same data type.

        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:

          Updated the first argument to the
          Registered_Data_Types::register_type() call.

Mon Feb 20 09:26:00 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * tests/transport/simple/PubDriver.cpp:

          Changed config parameter from "DcpsInfo" to "DCPSInfoRepo".
          Changed config parameter from "DCPSBitLookupDurationSec" to
          "DCPSBitLookupDurationMsec" and changed its units to milliseconds.
          Change config parameter from "queue_links_per_pool" to
          "queue_messages_per_pool".
          Changed transport config ""DCPSBitTransportPort" default from
          2841 to 0 so the OS will pick a port and multiple Built-in Topic
          subscribers can run on one machine.
          Fixed a bug where the config parameter "swap_bytes" was being
          read as "swap_byte".

Sun Feb 19 17:24:02 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/README:
        * tests/DCPS/BuiltInTopic/README:
        * tests/DCPS/FooTest3/README:
        * tests/DCPS/FooTest3NoKey/README:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_1/README:
        * tests/DCPS/unit/README:

          Changed all -DCPSInfo options to -DCPSInfoRepo options
          because the -DCPSInfo is deprecated.

Sun Feb 19 17:05:02 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Set the data reader's liveliness.lease_duration QoS
          and log when it is not met.

        * tests/DCPS/BuiltInTopic/main.cpp:

          Print the size of Built-in Topic structures.

Thu Feb 16 16:23:28 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TypeNoKeyBounded/PTTypeLib_Export.h:
        * tests/DCPS/Compiler/idl_test1_lib/foolib_export.h:
        * tests/DCPS/Compiler/idl_test2_lib/foolib_export.h:
        * tests/DCPS/Compiler/idl_test3_lib/foolib_export.h:
        * tests/DCPS/FooType/footype_export.h:
        * tests/DCPS/FooType2/footype_export.h:
        * tests/DCPS/FooType3/foolib_export.h:
        * tests/DCPS/FooType3NoKey/foolib_export.h:
        * tests/DCPS/FooType3Unbounded/foolib_export.h:
        * tests/DCPS/FooType4/foolib_export.h:
        * tests/DCPS/FooType5/foolib_export.h:
        * tests/DCPS/MultiTopicTypes/foolib_export.h:
        * tests/DCPS/common/common_export.h:

          Fixed export macros for windows static builds.

Wed Feb 15 17:35:11 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Changed delay between adding subscribers.  The test was
          adding the second subscriber before the subscriber was running.

Thu Feb  9 22:11:11 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/dcps_export.h:

          Fix export macros for windows static builds.

Fri Feb 03 17:22:10 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:

          Additional BIT macros.

        * tests/DCPS/FooTest5/subscriber.cpp:

          Fix virtual call on windows with DOC group.
          We were passing a listener impl from the stack to the
          poa which caused the virtual call at shutdown.

Mon Jan 30 07:31:28 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:

          Call a base class method through the 'this' pointer to avoid
          problems with VC6.

Fri Jan 27 14:04:05 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Change the name of the POA to "InfoRepo".

Fri Jan 27 13:54:43 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Add support for -DCPSInfoRepo.  This is identical in action to
          -DCPSInfo (which is essentially deprecated).  I think this is
          more consistent.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Make the Info Repo's object reference persistent.  This makes
          the object references consistent (as long as fixed endpoints are
          specified) and simplifies deployment.

        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Change this test to work with a static DDS build.

        * dds/DCPSInfo.idl:

          Removed this file.  It appears obsolete (virtually identical to
          DdsDcpsInfo.idl).

Thu Jan 26 09:36:24 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Modified the DCPSInfoRepo process so it registers the
          Info Repo object using a simple object key via the
          IOR Table.  This makes it easier to implement alternate
          schemes of distributing the object reference (besides
          storing it in a file).

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:

          Add some examples/tests of how to locate the InfoRepo
          using corbaloc and the naming service (using corbaname).

Wed Jan 25 11:15:55 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Added DDS_HAS_MINIMUM_BIT macro to build without
          Built In Topic support.
          Defining the macro will NOT build BIT support.


        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:

          Fixed name of template instantiation macro.

Tue Jan 24 13:54:33 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Turned off the tests with SimpleUdp dynamically loaded via service
          configurator on static builds.

Tue Jan 24 12:54:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple_n/DDS_transport_simple_n.mpc:

          Removed dependency on SimplUdp lib.

        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Added dependency on SimplUdp lib.

Tue Jan 24 12:34:53 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Fixed a deadlock situation that recursively acquires the ACE_Thread_Mutex.

        * dds/DCPS/transport/framework/TransportConfiguration.inl:

          Updated a debug message.

Tue Jan 24 11:44:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Fixed a warning with unused variable.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Fixed compilation erros on some builds that complains the T type is not
          defined when the RcHandle<T> template is instantiated.

Mon Jan 23 13:56:59 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:

          Removed the TAO and DCPS namespaces from the basclass call to
          load() to allow vc6 to figure out which method is being called.

Sun Jan 22 23:23:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Added ace/Configuration.h include to fix compilation errors on DOC's
          nightly builds and made the modifiers of the  "common" configuration values
          can overwrite the value from command line option and command line option can
          overwrite the values in configuration file.

        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportGenerator.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Added includes or namespace to fix the compilation errors.

Fri Jan 20 14:02:53 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple_n/DDS_transport_simple_n.mpc:

          Added dependency on SimpleUdp library for this static loading SimpleUdp
          example.

Fri Jan 20 13:41:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdp.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_export.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.h:

          Added new files that should be checked in in last commit.

Fri Jan 20 13:21:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        The main changes are adding DDS file configuration feature. The SimpleTcp
        is still a part of DDSDcps library and other concrete transport libraries
        such as SimpleUdp can be dynamically or statically loaded.
        See the projects\DDS\design\configuration_design.txt (from CVS) for
        various scenarios of using dds configurations:

        * dcpsexe_with_udp.mpb:

          Added base project for SimpleUdp transport applications.

        * dds/DdsDcps.mpc:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportExceptions.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportGenerator.cpp:
        * dds/DCPS/transport/framework/TransportGenerator.h:
        * dds/DCPS/transport/framework/TransportGenerator_rch.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/framework/TransportImplFactory.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:

          These files are changed for the dds configuration feature.

        * dds/DCPS/DataBlockLockPool.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/RcObject_T.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/NullSynch.h:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.h:
        * dds/DCPS/transport/framework/PoolSynch.h:
        * dds/DCPS/transport/framework/PoolSynchStrategy.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/ThreadSynch.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.h:
        * dds/DCPS/transport/framework/ThreadSynchWorker.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportReactorTask.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.h:

          These files are changed to add the export macro.

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/udp.conf:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/conf.ini:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/udp.conf:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/udp.conf:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_1/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_2/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/common.h:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/udp.conf:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/FooTest5_0/udp.conf:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTest/udp.conf:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimplePublisher.h:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleSubscriber.h:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SimplePublisher.cpp:
        * tests/transport/simple_bp/SimplePublisher.h:
        * tests/transport/simple_bp/SimpleSubscriber.cpp:
        * tests/transport/simple_bp/SimpleSubscriber.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SimplePublisher.cpp:
        * tests/transport/simple_bp_rm/SimplePublisher.h:
        * tests/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * tests/transport/simple_bp_rm/SimpleSubscriber.h:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SimplePublisher.cpp:
        * tests/transport/simple_n/SimplePublisher.h:
        * tests/transport/simple_n/SimpleSubscriber.cpp:
        * tests/transport/simple_n/SimpleSubscriber.h:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/README:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimplePublisher.h:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.h:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple/udp.conf:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/run_test.pl:
        * tests/transport/udp_simple_n/SimplePublisher.cpp:
        * tests/transport/udp_simple_n/SimplePublisher.h:
        * tests/transport/udp_simple_n/SimpleSubscriber.cpp:
        * tests/transport/udp_simple_n/SimpleSubscriber.h:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Applied the new TransportFactory interfaces for generating and cofiguring
          the TransportImpl object to all DDS tests and made changes on the udp tests
          to allow the SimpleUdp library statically or dynamically loaded.

Mon Jan 16 10:35:06 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Fix missed ACE_INLINE in code that was un-inlined.

Sat Jan 14 15:22:43 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataSampleList.cpp:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/ReceivedDataElementList.inl:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * dds/DCPS/transport/framework/TransportReactorTask.inl:
        * dds/DCPS/transport/framework/TransportReceiveListener.cpp:
        * dds/DCPS/transport/framework/TransportReceiveListener.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:

          Uninlined some unnecessary inlines.  This was done to
          reduce the footprint of DDS.

Fri Jan 13 11:47:29 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Fixed a few other compile errors related to casting ACE_hrtime_t
          to a double with VC++ 6.0.

        * tests/DCPS/FooTest4_0/main.cpp:

          Avoid a g++ warning about choosing the right pointer type.

Thu Jan 12 20:40:18 UTC 2006  Scott Harris <harris_s@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Fix compile error using VC++ v6.0.
          Thanks to Chad Elliott for the recommended fix.

        * performance-tests/DCPS/SimpleLatency/DDSPerfTest.idl:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/README:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:

          Remove double spacing (extra ^M) by using unix2dos.

Wed Jan 11 23:47:37 UTC 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed locks before calling TransportInterface::add_pub/sub
          methods to avoid deadlocking.
          Thanks to Don Busch for providing a the StockQuoter example
          that would deadlock if the subscriber started before the publisher.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:

          Renamed some locks to make it easier to tell which lock_
          is being used.

Fri Jan  6 13:14:23 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dcps_ts_defaults.mpb:

          Add an explicit "perl" to the build rule.  This helps
          things go a little more smoothly on Windows for some people.

Wed Jan 04 14:51:42 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Changed to properly initialize the array variables. The
          properly initialized variables compare correctly on 64 bit
          systems.

Tue Jan 03 16:15:07 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed issue when reregistering an instance.
          The instance only needs to be registered not inserted
          into the list.

Fri Dec 30 16:37:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.h:

          Fixed access violation from missing allocator.

Fri Dec 30 13:54:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:

          Removed duplicate BuiltInTopic line.

Fri Dec 30 11:00:34 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:

          Fixed scoping of variables added for transport allocators.

Thu Dec 29 16:31:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataSampleList.h:

          Force the creation of a DataSampleListElement to give
          the allocator.

        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:

          Added missing transport allocators.


Tue Dec 27 12:26:47 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:

          Fix some GCC 3.4.2 warnings (ununsed vars and member
          initialization order).  Avoided commenting out random code.

Mon Dec 19 14:42:52 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Rolled back the changes that made on
          "Thu Dec 15 10:08:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>"
          that intended to cleanup memory when the write/register fail.
          The changes need more investigation.

Mon Dec 19 09:43:03 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Changed order of code to actually execute code that was
          after a return.

        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:

          Changed tests to use an allocator.

Fri Dec 16 01:03:41 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:

          Moved the method back to cpp and removed the ACE_INLINE
          declaration.  The method needed a define in the cpp file.

Fri Dec 16 00:50:26 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:

          Moved the ACE_INLINE method to the inl file.  Not having it
          in the inl file results in an undefined reference when linking
          with the dll

Thu Dec 15 22:31:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h:

          Corrected capitalization of header include.

Thu Dec 15 10:08:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:

          Corrected the number of chunks for map_entry_allocator_. It should be
          the number of datalinks. The map_ is also changed to be a pointer of
          hash map so we can appropiately delete the hash map with current
          implementation of ACE_Hash_Map_Manager_Ex and ACE_Hash_Map_With_Allocator.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made number of chunks in header data block to be 1 instead of 2 since the
          duplicate() increases the ref count of data block.

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Added free_to_pool_ count to help debugging.

        * dds/DCPS/DataWriterImpl.cpp:

          Replaced ACE_CHECK with ACE_CHECK_RETURN in some methods with a return
          type.

        * dds/DCPS/WriteDataContainer.cpp:

          Made obtain_buffer() and register_instance() release memory it allocates
          if the methods return error.
          Made the number of chunks for data allocator to be the
          max_samples of resource_limits in qos if that value is not
          LENGTH_UNLIMITED.

        * dds/DCPS/Service_Participant.cpp:

          Fixed a bug in parse_args() that causes crash when passing multiple
          -DCPS options.

        * bin/DCPS/CPPTemplate.pm:

          Made write_w_timestamp() release marshalled data sample if write fails.

        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:

          Uncommented the read_samples() which might be accidently checked in previously.

Thu Dec 15  8:35:17 USMST 2005 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h

          Get the DdsDcps project to build against TAO v 1.4.7.
          Needed to explicitly include the ACE version header so that
          conditional complication that makes DDS build with both the DOC
          and OCI versions of TAO worked.
          Strangely, this is not needed for the latest DOC TAO from CVS
          or when building with gcc/GNUmakefile but is needed for VC71.

Fri Dec  9 16:57:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportReplacedElement.inl:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Replaced the TransportSendControlElement, TransportSendElement,
          TransportReplacedElement and TransportSendStrategy header message
          block allocation from heap with the cached allocator.

        * dds/DdsDcps.mpc:

          Listed the files in same directory in alphabet order.

Fri Dec 09 15:31:23 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/DDSPerfTest.idl:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/README:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:

          Added a simple latency test.  This test is a modified
          version of the one created by Ming Xiong of the DOC group.

Fri Dec 09 15:22:38 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Changed Allocators to log an error message when more
          memory is freed to the heap than is allocated.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Expanded the amount of memory that is allocated for
          Message Blocks that are duplicated on a per-association
          basis.

Wed Nov 30 10:00:19 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Changed the allocation of the message block in
          create_control_message to properly use the allocator.

Tue Nov 29 13:30:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
          Changed the read_next_sample and take_next_sample that
          only take a single sample to handle the read and take,
          not allocate arrays and call the array version.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_1/README:

          Removed the unneeded PUBLISHER_TEST macro and code.

Sat Nov 26 17:35:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Constructor did not correctly use and save the rounded up size
           for allocating!  This resulted in invalid pointer locations
           used for small object sizes on the 64 bit OS.

Tue Nov 22 08:55:53 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          DDS 0.7 released.

        * DDS_release_notes.txt:
        * README:
        * VERSION:

          Changes related to the 0.7 release.

Tue Nov 22 08:54:53 2005  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Added #include "ace/os_include/netinet/os_tcp.h" for builds with
          inlining turned off.

Mon Nov 21 13:57:01 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/Writer.h:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:

          Renamed svc() function to be run_test() and removed the inheritance
          of ACE_Task_Base for class Writer. This was intended to fix build
          problem on Solaris platform.

Thu Nov 17 10:17:48 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:

          Make it build with TAO 1.3a (almost p6).

Thu Nov 17 06:23:48 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved some inlined functions to .cpp files to
          avoid a problem recursive include problem when
          building against DOC TAO and using gcc.

Tue Nov 16 18:39:52 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Make DDS build with the DOC group version of TAO.
          See RT8044.

Tue Nov 15 10:24:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:

          Added includes to the dcps_export header file for the exports.

Mon Nov 14 14:46:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:

          VC6 needs the classes exported.

Mon Nov 14 09:15:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/Writer.h:
        * tests/DCPS/FooTest5/common.h:

          Fixed warnings on Solaris builds.

Sun Nov 13 23:51:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooType/Foo_Singleton_Transport.h:

          Fixed warnings because of passing _var as _ptr argument.

Sun Nov 13 15:57:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:

          Added using declaration to resolve the "hides virtual functions"
          compilation warnings on Solaris.

Sat Nov 12 13:24:25 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.h:

          Resolved a warnings.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:

          Work arround with the compilation errors on Solaris due to the
          compiler can not resolve operator in a namespace.

Fri Nov 11 17:18:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Fixed warnings on string (char*) initialization.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:

          Work arround with the compilation errors on Solaris due to the
          compiler can not resolve operator in a namespace.

Fri Nov 11 14:58:33 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.h:

          Restored previous version that uses the
          EXTERN_OR_INLINE_HELPER_METHOD  macro, but changed the
          macro to be defined as ACE_INLINE instead of nothing if
          __ACE_INLINE__ is defined.

Fri Nov 11 12:51:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Fixed warnings on string (char*) initialization.

        * dds/DCPS/Qos_Helper.h:

          Used ACE_NAMESPACE_INLINE_FUNCTION for inline functions
          declare to fix warnings on Solaris.

Fri Nov 11 11:06:19 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:

          Removed extra parenthesis in the "#if defined" statement.
          The should fix the compilation problem on Solaris builds.

Thu Nov 10 16:35:32 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
          Solaris compilers failed when the method declaration was
          extern and the definition was inline.  Added a macro
          to assign the extern when the code is not inlined.

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:

          Set the VC6 necessary extra unused parameters into
          a typedef'd function declaration.  Solaris compilers
          were choking on the extra parameter in the templated
          method.

        * dds/DCPS/transport/framework/DataLinkSetMap.inl:
        * dds/DCPS/transport/framework/NullSynchStrategy.inl:
          Removed unused files.

Mon Oct 31 16:43:52 2005  Byron Harris  <harris_b@ociweb.com>

        * dds/DCPS/Marked_Default_Qos.cpp:

          Replaced usage of ACE_static_cast<::DDS...> with
          static_cast< ::DDS...> as the <: was confusing the
          Sun CC 5.3 compiler.

Mon Oct 31 16:38:30 2005  Byron Harris  <harris_b@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.cpp:

          Avoid compiler error generated by Sun CC 5.3 because
          a namespace terminates with a "}".

        * dds/DCPS/DataSampleHeader.h:

          Avoid compiler warning generated by Sun CC 5.3.

Tue Oct 25 17:26:38 MST 2005   Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:

          Moved SimpleTcpTransport rch include and added SimpleTcpTransport
          to properly instantiate the templates on gcc on solaris.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.inl:

          Moved inline methods into cpp.

Tue Oct 25 15:22:28 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Removed using the pointer as the DataLink id.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Can not use LONG_MAX for CORBA::Long because on some
          architectures the long is 8 bytes while a CORBA::Long
          is always 4 bytes.

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Fixed issue with using a long double as a
          character array all the time.

Tue Oct 25 13:18:31 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/WriteDataContainer.h:

          Add a space to some templates.  Things of the form <::DDS::Ident
          won't work because <: is a C++ digraph.

        * dds/DCPS/DataReaderImpl.cpp:

          Fix an initialization order warning

Sun Oct 23 16:19:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublicationInstance.h:
        * dds/DCPS/SubscriptionInstance.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:

          Removed using instance handles as pointers.  Maps of
          handle to pointer were added.

Thu Oct 20 16:09:20 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * LICENSE:

          Change "TAO-DDS" to "TAO DDS" in the LICENSE.

Thu Oct 13 15:13:22 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:

          Clean up some gcc warnings, all of which are unused args,
          unused vars, or uninitialized vars.

Mon Oct 10 15:59:48 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:

          Fixed compilation error on vc71.

Mon Oct 10 15:35:45 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:

          Fixed memory leaks.

Sun Oct  9 13:17:37 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/DcpsIntegration/TopicListener.h:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:

          Fixed memory leaks and some string problems caused by VC6's inability
          to pick the correct overloaded function.

Wed Oct  5 14:28:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:

          Declared the instance handle collection in DataReaderImpl class
          as ACE_Unbounded_Set instead of std::set. This would fix some
          tests on vc6 build.

        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:

          Added unused arguments with the template parameter types.
          This is a work arround to fix tests on vc6 builds that failed
          due to the vc6 bug on template function instantiation.

        * tests/DCPS/FooTest3_2/run_test.pl:

          Extended the timeout to fix test.

        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:

          Fixed incorrect data member initialization.

Tue Sep 27 10:31:34 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/Compiler/idl_test3_main/main.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/transport/simple_bp/SimpleDataReader.cpp:

          Clean up the remaining gcc warnings.

Fri Sep 23 16:18:49 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/InstanceState.cpp:

          Clean up some gcc warnings.

Fri Sep 23 15:31:37 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DDS_release_notes.txt:

          Add limitation to release notes describing excess memory
          usage of DDS because of application object bufferes being
          oversized.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Add a new configuration option for Nagle's algorithm
          (TCP_NODELAY).  The default is to disable Nagle's algorithm.
          This was uncovered by some latency testing.  Some
          performance tests with small sample sizes may benefit
          from enabling this algorithm.

Wed Sep  7 08:47:48 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * bin/all_tests.pl:

          Finally added the all_tests.pl script to the repo.  This
          is a script that automatically runs all the run_*.pl scripts
          it can find under a directory.  It can also loop on the tests
          for a set number of iterations or until a failure is encountered.

Tue Sep  6 11:57:09 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DdsDcps.mpc:

          Make sure the Built-In Topic IDL files use the -Gdcps IDL
          compiler option.  This was causing compilation problems with
          SunCC 5.6.

Wed Aug 31 06:39:06 2005  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.h:

          Removed extra semicolon's on the closing curly braces for
          namespaces.

Wed Aug 17 09:10:10 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:

          Enhance these scripts so they properly delete existing ior files
          at the beginning and the end of the test.

Thu Aug 11 13:56:18 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          DDS 0.6 released.

        * DDS_release_notes.txt:
        * VERSION:

          Updates for DDS 0.6.

Thu Aug 11 11:24:15 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          Fix some more function overloading issues with VC6.

Thu Aug 11 11:18:35 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Increase the sample and packet lengths to be 32 bit integers
          so we can support larger samples (greater than 64 KB).

        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:

          Limit the simple UDP transport to about 64 KB samples
          because of its lack of fragmentation and the MTU.

Tue Aug  2 16:24:58 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Change the default IOR file written from dcps_ir.ior to repo.ior.
          This makes it match the default that the service participant is
          looking for.

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:

          Clean these tests up by substituting a timed wait for the repo.ior
          file instead of a sleep(5).

Tue Aug  2 15:39:50 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.cpp:

          Let the host/port default on this test.

        * tests/DCPS/Compiler/idl_test1_main/main.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:

          Fix some string problems caused by VC6's inability to pick the
          correct overloaded function.

Fri Jul 29 17:10:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:

          Fixed memory leaks.
          - Use _var instead of _ptr.

Fri Jul 29 14:14:16 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

          Fix a variable scoping issue for VC6.

Fri Jul 29 12:48:42 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DDS_release_notes.txt:

          Updated the release notes (and renamed them).

        * VERSION:

          Added a version file.

        * DDS_realease_notes.txt:

          Removed this file.

Fri Jul 29 12:35:25 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataBlockLockPool.h:

          Remove explicit scope that was causing problems for VC6.

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Clean up this test a little.

Thu Jul 28 14:08:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Fixed memory leak.
          - Removed an extra get_name() call on topic which duplicates
            the string.

Thu Jul 28 13:43:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Fixed the memory leak of the Pt*TypeSupportImpl servant.

Thu Jul 28 13:17:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed memory leak of DataReaderRemote object references.
          - Made the get_dr_obj_ref () assign to a DataReader_var
            since the accessor duplicates object reference count.

        * dds/DCPS/Marked_Default_Qos.cpp:

          Fixed memory leak of DomainParticipantFactory object reference.
          - Made TheParticipantFactory assign to
            DomainParticipantFactory_var since the TheParticipantFactory
            duplicates the object reference count.

        * dds/DCPS/WriteDataContainer.cpp:

          Fixed memory leak of the registered sample data and the
          PublicationInstance object.
          - Made the unregister_all() delete all PublicationInstance
            objects in the instance handle list.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

          Fixed memory leak of the DataWriter object reference.
          - Delete every Writer object after test is done.

        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Fixed the memory leak of the listener servant.
          - Made the servant assign to PortableServer::ServantBase_var.

Thu Jul 28 10:41:07 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataBlockLockPool.h:

          Changes to compile on unix systems.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Removed the debugging code from
          Wed Jul 27 11:03:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

Wed Jul 27 17:37:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DdsDcps.mpc:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataBlockLockPool.h:

          Created a class to give out ACE_Thread_Mutex lock adapters.
          This just cycles through an array giving out the next lock.
          It does not currently require the returning of the locks.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Changed to use a DataBlockLockPool for providing locks to the
          ACE_Data_Blocks.  The blocks need to be locked to prevent the
          simultaneous access by multiple threads from deforming the
          reference count.

Wed Jul 27 17:20:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/Service_Participant.h:

          Rolled back previous version and found the memory
          leak is in the reference_to_servant function
          of Service_Participant.

Wed Jul 27 11:03:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added additional code to give more information when the send_bytes
          fails.  This code is marked with "//remove" and
          "DUMP_FOR_PACKET_INFO"

          This code should be removed when the problem has been fixed.

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:

          Fixed error with data size.

Tue Jul 26 22:33:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Fixed PublisherImpl and Subscriber memory leak.

        * tests/DCPS/FooTest3_2/pub_id.txt:

          Removed test generated file.

Tue Jul 26 15:38:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.h:

          Correctly applied the _var and _ptr.

        * tests/DCPS/FooTest3_0/pub_id.txt:

          Removed test generated file.

Fri Jul 22 08:40:18 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Make SimpleTcpSendStrategy::send_bytes log the iovec array when
          sendv returns an unexpected errno in hopes of getting it to
          core when the sendv fails for AAC.  Hopefully this will shed
          some light on the problem.

Thu Jul 21 18:38:54 CDT 2005  Scott Harris <harris_s@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.hi:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Added -sd <msec> option to allow the subscriber to sleep for
          <msec> milliseconds for every read call.
          This was added to see what would happend if there was a slow
          subscriber.

Wed Jul 20 15:59:55 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/RcObject_T.h:

          Added appropriate ACE_DES_FREEs for allocator frees.

Wed Jul 20 15:40:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/ReceivedDataElementList.inl:

          Corrected comment about why the instance state is not
          deleted in the destructor.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Added delete of queue in destructor.  It was new'd in
          the constructor.

Wed Jul 20 12:11:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
          Changed ptr in read to var to not leak memory.

Wed Jul 20 13:10:23 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Fix -a option so it overrides the address properly.

Mon Jul 18 17:27:29 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/transport/simple_bp/SimpleSubscriber.cpp:

          Fix return value error that VC6 caught.

Mon Jul 18 13:30:13 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/FooTest5/publisher.cpp:

          Remove extra fclose() that was causing failures.

Mon Jul 18 13:18:45 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/Messenger.idl:
        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * DevGuideExamples/DDS/Messenger/Writer.h:
        * DevGuideExamples/DDS/Messenger/Writer.cpp:
        * DevGuideExamples/DDS/Messenger/domain_ids:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Update and merge the devguide example.  I put it here
          because it proved difficult to integrate into the TAO
          DevGuideExamples directory.

Mon Jul 18 06:43:11 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Backed out the change of Thu Jul 14 12:39:15 MST 2005
          because reference_to_servant was fixed in 1.4a_p4.

Sat Jul 16 17:51:05 MST 2005  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Make samples replaced in the subscriber's instance queue delete as
          well as free the sample.

        * dds/DCPS/ReceivedDataElementList.inl:

          Added a comment about the ReceivedDataElement destructor
          needing to destroy its InstanceState. But it currently
          causes troubles.

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:

          Change the number of samples from 80,000 to 20,000.

Fri Jul 15 16:01:19 MST 2005  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Added Paul C's changes to free read elements in the subscriber
          side instance queue that are being replaced by the recieved
          samples.  It still leaks the if the sample contains a type
          that requires freeing the fields individiually (like sequences).

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:

          Changed this test to just have MAX_SAMPLES and
          MAX_SAMPLES_PER_INSTANCE set to the number that will be in
          the instance queue plus some for good measure.
          Previously it would set MAX_SAMPLES and PER_INSTANCE to
          the number of expected samples.

Thu Jul 14 12:39:15 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Changed reference_to_servant template to not remove
          a reference to the servant because POA::reference_to_servant
          changed in TAO 1.4a (and 1.4.x) to not increment
          the reference count.

Wed Jul 13 14:03:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dcps.mpb:
        * dds/DdsDcps.mpc:

          Removing checks for the Dcps in the TAO_ORBSVCS list.

Wed Jul 13 10:48:01 MST 2005  Trevor Fields  <fields_t@ociweb.com>
        * dds/DCPS/Service_Participant.h:

          Changed to new Root_POA.h for all builds.

Wed Jul 13 10:28:48 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.h:
        * tests/transport/simple_bp/SimpleDataReader.cpp:
        * tests/transport/simple_bp/SimpleDataReader.h:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.h:
        * tests/transport/simple_bp/SimplePublisher.cpp:
        * tests/transport/simple_bp/SimplePublisher.h:
        * tests/transport/simple_bp/SimpleSubscriber.cpp:
        * tests/transport/simple_bp/SimpleSubscriber.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp/pub_main.cpp:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp/sub_main.cpp:

          Modified the publisher to take a size parameter (-c ).

Tue Jul 12 14:33:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Increased the receive buffer size and corrected a comment.

Mon Jul 11 13:38:21 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dcps.mpb:
        * dds/DdsDcps.mpc:

          Set the library path correctly

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Change default values to account for correct memory usage.

Wed Jun 29 22:35:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
          Fixed array indexing.

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
          Fixed issues with the data size.

Wed Jun 29 20:55:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
          Adding identifier option to the publisher.

Wed Jun 29 17:09:02 MST 2005 Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/TestStats.h:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/TestStats.h:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:

          Changed to shift the data size when first passed in.  This
          fixes an issue with the tests not sending the correct amount of data.

Tue Jun 29 13:54:47 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DDS_realease_notes.txt:

          Update test section per fixes and split out of DDS from ocitao repository.

Wed Jun 29 11:16:05 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Definitions.h:
          Changed ACE_Message_Block allocator to use an ACE_Thread_Lock
          The message block's duplicate method was using the same
          allocator in different threads at the same time.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
          Changed to remove all the associations when
          DataReader/DataWriter is deleted.

        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
          Changed to not send remove assocations call back.

Tue Jun 28 10:50:47 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DDS_realease_notes.txt:

          Add release notes to the repository.

Wed Jun 15 11:28:42 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Added include of tao/Version.h so can distinguish between DOC
          and OCI's repos.  This will need to be removed after the DOC's
          POA changes come into the OCI repo.

Tue Jun 14 16:31:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/auto_run_tests.pl:
        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DdsDcps_pch.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/InfoRepo/DcpsInfo_pch.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/unit/Main.cpp:

          Changed includes to work with the DOC repo.

        * tests/DCPS/DcpsIntegration/test.log:
        * tests/DCPS/FooTest3_1/pub_id.txt:
        * tests/DCPS/unit/test.log:

          Removed some log files that got checked in accidently.

Fri Jun 10 14:40:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/Compiler/idl_test1_main/run_test.pl:
        * tests/DCPS/Compiler/idl_test3_main/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/DcpsIntegration/test.log:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Serializer/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/DCPS/unit/test.log:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Changed tests to not depend on being under TAO_ROOT.
          They still depend on ACE_ROOT being defined to locate
          the PERLACE package.

Tue Jun 10 18:55:09 UTC 2005  Trevor Fields  <fields_t@ociweb.com>

          Moved files from a branch off of TAO 1.4a to this separate
          repository.
          All files in ACE_wrappers\TAO\orbsvcs\DDS and
                       ACE_wrappers\TAO\orbsvcs\orbsvcs\DDS and
                       ACE_wrappers\bin\DCPS
          were moved over.

          See the ACE_wrappers\TAO\Changeklog_dds_branch
          on the AAC-DDS-1_4_3_branch branch
          in cvs.ociweb.com:/cvs for the original
          developement history.
