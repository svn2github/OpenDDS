Sat Dec 20 03:56:45 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * MPC/config/wrapper_src.mpb:
        
          Added libout to $OSPL_HOME/lib.
        
        * wrapper/Topic_Manager_T.cpp:
        
          Used preprocessor macros to catch differences between OpenSplice
          and OpenDDS.
        
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.cpp:
        
          Cosmetic changes.
        
        * wrapper/OpenSplice/OpenSplice_Domain_Manager.cpp
        * wrapper/OpenSplice/OpenSplice_create_domain_manager.cpp
        * wrapper/OpenSplice/OpenSplice_Domain_Manager.h:
        
          Added DomainParticipantQos support.
        
        * wrapper/DataReader_Listener_Base.h
        * wrapper/DataReader_Listener_Base.inl:        
        
          Added on_subscription_mathed () callback method, which seems to
          differ from OpenDDS, which uses on_subscription_match ().
        
        * wrapper/example/OpenSplice
        * wrapper/example/OpenSplice/ExchangeEventDataReaderListenerImpl.h
        * wrapper/example/OpenSplice/QuoteDataReaderListenerImpl.cpp
        * wrapper/example/OpenSplice/StockQuoterCommon_Export.h
        * wrapper/example/OpenSplice/OpenSpliceStockQuoterWrapper.mpc
        * wrapper/example/OpenSplice/StockQuoterDcps_impl.h
        * wrapper/example/OpenSplice/subscriber.cpp
        * wrapper/example/OpenSplice/QuoteDataReaderListenerImpl.h
        * wrapper/example/OpenSplice/StockQuoter.idl
        * wrapper/example/OpenSplice/ExchangeEventDataReaderListenerImpl.cpp
        * wrapper/example/OpenSplice/run_test.pl
        * wrapper/example/OpenSplice/publisher.cpp:
        
          Added example code for OpenSplice wrapper.
        
Fri Dec 19 02:33:48 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * MPC/config/wrapper_base.mpb
        * MPC/config/dds_wrapper.mpb:
        
          Changed the structure of the MPC templates.

Fri Dec 19 01:14:55 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/DDSWrapper.mpc:
        
          Added new project file.

Thu Dec 18 23:23:25 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * MPC/config/dds_wrapper.mpb
        * MPC/config/wrapper_base.mpb
        * MPC/config/wrapper_src.mpb
        
          Added mpc switches for OpenSplice support.

        * wrapper/example/OpenDDS/WrapperStockQuoter.mpc:        
        * wrapper/DDSWrapper_OpenDDS.mpc:
        
          Removed these files.

Thu Dec 18 21:55:49 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Domain_Manager.h
        * wrapper/Topic_Manager.inl
        * wrapper/Publication_Manager.h
        * wrapper/example/OpenDDS
        * wrapper/example/OpenDDS/ExchangeEventDataReaderListenerImpl.h
        * wrapper/example/OpenDDS/pub_udp_conf.ini
        * wrapper/example/OpenDDS/QuoteDataReaderListenerImpl.cpp
        * wrapper/example/OpenDDS/StockQuoterCommon_Export.h
        * wrapper/example/OpenDDS/sub_udp_conf.ini
        * wrapper/example/OpenDDS/subscriber.cpp
        * wrapper/example/OpenDDS/QuoteDataReaderListenerImpl.h
        * wrapper/example/OpenDDS/StockQuoter.idl
        * wrapper/example/OpenDDS/WrapperStockQuoter.mpc
        * wrapper/example/OpenDDS/dds_tcp_conf.ini
        * wrapper/example/OpenDDS/sub2_udp_conf.ini
        * wrapper/example/OpenDDS/tcp.conf
        * wrapper/example/OpenDDS/ExchangeEventDataReaderListenerImpl.cpp
        * wrapper/example/OpenDDS/udp.conf
        * wrapper/example/OpenDDS/run_test.pl
        * wrapper/example/OpenDDS/publisher.cpp
        * wrapper/example/README
        * wrapper/Subscription_Manager.inl
        * wrapper/Topic_Manager_T.cpp
        * wrapper/Domain_Manager.inl
        * wrapper/Publication_Manager.inl
        * wrapper/wrapper_config.h
        * wrapper/Topic_Manager.h
        * wrapper/OpenSplice
        * wrapper/OpenSplice/OpenSplice_Subscription_Manager.cpp
        * wrapper/OpenSplice/OpenSplice_Subscription_Manager.inl
        * wrapper/OpenSplice/OpenSplice_Domain_Manager.cpp
        * wrapper/OpenSplice/OpenSplice_Domain_Manager.inl
        * wrapper/OpenSplice/OpenSplice_Subscription_Manager.h
        * wrapper/OpenSplice/OpenSplice_Publication_Manager.cpp
        * wrapper/OpenSplice/OpenSplice_Publication_Manager.inl
        * wrapper/OpenSplice/OpenSplice_create_domain_manager.cpp
        * wrapper/OpenSplice/OpenSplice_Domain_Manager.h
        * wrapper/OpenSplice/OpenSplice_Publication_Manager.h
        * wrapper/Subscription_Manager.h:
        
          Added first version of OpenSplice port.

Wed Dec 17 23:42:28 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/build_scripts/jms_scoreboard.pl:

          Use PerlACE::Process to launch junit tests so that
          we can enforce a timeout.

Mon Dec 15 23:36:26 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/INSTALL:

          Fixed bad Windows path names.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Fixed failing liveliness test; updated unregister test.

Mon Dec 15 19:13:36 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/build_scripts/jms_scoreboard.pl:

          Adjusted test output to not print "Error" when there are none.

Mon Dec 15 05:57:16 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/README:
        * java/jms/example:
        * java/jms/example/jboss:
        * java/jms/example/jboss/opendds-ds.xml:
        * java/jms/example/jboss/opendds-ir-ds.xml:
        * java/jms/compat/src/META-INF/service/opendds-ir-ds.xml:

          Added documentation.

Sun Dec 14 02:42:13 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/compat/test/org/opendds/jms/MessageConsumerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/MessageProducerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/SessionImplTest.java:
        * java/jms/src/org/opendds/jms/DurableMessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/MessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/persistence/HibernatePersistenceManager.java:

          Final round of re-formatting and import optimization.

Sun Dec 14 00:06:46 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/src/org/opendds/jms/BytesBodyFacade.java:
        * java/jms/src/org/opendds/jms/ConsumerDataReaderListener.java:
        * java/jms/src/org/opendds/jms/DataWriterPair.java:
        * java/jms/src/org/opendds/jms/DurableMessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/MapBodyFacade.java:
        * java/jms/src/org/opendds/jms/MessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/MessageDispatcher.java:
        * java/jms/src/org/opendds/jms/MessageProducerImpl.java:
        * java/jms/src/org/opendds/jms/MessagePropertiesFacade.java:
        * java/jms/src/org/opendds/jms/ObjectMessageImpl.java:
        * java/jms/src/org/opendds/jms/SessionImpl.java:
        * java/jms/src/org/opendds/jms/StreamBodyFacade.java:

          Completed remaining TODO items.

Sat Dec 13 23:47:04 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/compat/build.xml:
        * java/jms/compat/test/org/opendds/jms/MessageConsumerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/SessionImplTest.java:
        * java/jms/compat/test/org/opendds/jms/client/SimpleTest.java:
        * java/jms/src/org/opendds/jms/common/util/NativeLoader.java:
        * java/jms/compat/test/org/opendds/jms/AbstractMessageImplTest.java:

          Updated test suites.

        * java/jms/test/org/opendds/jms/SessionImplTest.java:
        * java/jms/test/org/opendds/jms/TestUtils.java:
        * java/jms/test/org/opendds/jms/TopicMessageConsumerImplTest.java:
        * java/jms/test/org/opendds/jms/TopicMessageProducerImplTest.java:

          Removed these files.

Sat Dec 13 21:36:33 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/build.xml:

          Added missing TAO_ImR_Client library dependency.

        * java/jms/native/org_opendds_jms_DCPSInfoRepo.cpp:

          Updated code style.

        * java/jms/src/org/opendds/jms/ConnectionImpl.java:
        * java/jms/src/org/opendds/jms/DataWriterPair.java:
        * java/jms/src/org/opendds/jms/MessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/PublisherManager.java:
        * java/jms/src/org/opendds/jms/SubscriberManager.java:
        * java/jms/src/org/opendds/jms/TemporaryTopicImpl.java:
        * java/jms/src/org/opendds/jms/TopicImpl.java:
        * java/jms/src/org/opendds/jms/common/Version.java:
        * java/jms/src/org/opendds/jms/common/io/Files.java:
        * java/jms/src/org/opendds/jms/common/lang/Strings.java:
        * java/jms/src/org/opendds/jms/common/util/NativeLoader.java:
        * java/jms/src/org/opendds/jms/common/util/PropertiesHelper.java:
        * java/jms/src/org/opendds/jms/management/DCPSInfoRepoService.java:
        * java/jms/src/org/opendds/jms/management/HibernatePersistenceService.java:
        * java/jms/src/org/opendds/jms/management/ParticipantFactoryService.java:
        * java/jms/src/org/opendds/jms/resource/ManagedConnectionImpl.java:
        * java/jms/src/org/opendds/jms/resource/ResourceAdapterImpl.java:
        * java/jms/src/org/opendds/jms/transport/TransportFactory.java:

          Improved logging; Refined native library loading behavior.
          NativeLoader now detects broken RAR deployers and alerts the user
          before attempting to load native libraries manually.

Sat Dec 13 00:46:38 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/runtime/idl2jni_runtime.cpp:

          Refactored binary_name.

        * java/jms/compat/build.xml:

          Removed debug logging.

        * java/jms/src/org/opendds/jms/MessageProducerImpl.java:

          Fixed DCPSInfoRepo error on send with destinaton.

Fri Dec 12 23:33:38 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.h:

          Fixed a typo.

        * java/build_scripts/jms_scoreboard.pl:

          Added this new script which builds or tests the java/jms subtree
          with one command, with test output that is compatible with the
          DDS (ACE, TAO) scoreboard scripts.

Fri Dec 12 05:39:25 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/compat/build.xml:
        * java/jms/compat/test/org/opendds/jms/MessageConsumerImplTest.java:

          Updated build output; Fixed MessageConsumerImplTest.java.

Fri Dec 12 05:24:56 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/compat/src/META-INF/service/opendds-ir-ds.xml:
        * java/jms/compat/test/org/opendds/jms/AbstractMessageImplTest.java:
        * java/jms/compat/test/org/opendds/jms/MessageConsumerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/MessageProducerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/SessionImplTest.java:

          Package refactorings.

        * java/jms/compat/src/META-INF/service/opendds-inforepo-ds.xml:
        * java/jms/compat/test/org/opendds/jms/client/AbstractMessageImplTest.java:
        * java/jms/compat/test/org/opendds/jms/client/MessageConsumerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/client/MessageProducerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/client/SessionImplTest.java:

          Removed these files.

Fri Dec 12 00:46:41 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/OpenDDS.ipr:
        * java/jms/compat/test/org/opendds/jms/client/MessageConsumerImplTest.java:
        * java/jms/src/org/opendds/jms/DataWriterPair.java:
        * java/jms/src/org/opendds/jms/MessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/MessageProducerImpl.java:
        * java/jms/src/org/opendds/jms/qos/QosPolicies.java:

          More fixes to tests. Corrected default QoS behavior in
          MessageConsumerImpl and MessageProducerImpl.

Thu Dec 11 23:16:48 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/OpenDDS.ipr:
        * java/jms/compat/src/META-INF/service/opendds-inforepo-ds.xml:
        * java/jms/compat/test/org/opendds/jms/client/MessageConsumerImplTest.java:
        * java/jms/src/org/opendds/jms/ConnectionImpl.java:
        * java/jms/src/org/opendds/jms/TopicImpl.java:
        * java/jms/src/org/opendds/jms/common/lang/Objects.java:
        * java/jms/src/org/opendds/jms/common/util/Logger.java:

          Fixed compat test failures.

Thu Dec 11 22:24:07 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/FileSystemStorage.cpp:

          Fixed a bug that was due to me mistakenly thinking that
          ACE_String_Base constructors worked like std::string.

Thu Dec 11 18:32:13 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/runtime/idl2jni_runtime.h:

          Added exception for condition where native thread is unable to attach
          to the JVM. Fixed void ** cast warning in GCC 4.1.x.

Thu Dec 11 18:18:09 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/FileSystemStorage.cpp:

          In the Win32-specific code, set errno when a directory-open
          operation fails.

Thu Dec 11 16:10:17 UTC 2008  Weiqi Gao  <gaow@ociweb.com>

        * java/jms/compat/test/org/opendds/jms/client/MessageConsumerImplTest.java:
        * java/jms/compat/test/org/opendds/jms/client/SessionImplTest.java:

          Fixed some functional tests.

Thu Dec 11 15:32:00 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/codegen/im_jni.cpp:
        * java/idl2jni/runtime/idl2jni_BaseJavaPeer.h:
        * java/idl2jni/runtime/idl2jni_runtime.h:
        * java/idl2jni/runtime/idl2jni_runtime.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.mpc:
        * java/jms/src/org/opendds/jms/common/util/NativeLoader.java:

          Updated findClass to use the context class loader; JNIThreadAttacher
          also updates the current thread's context class loader on attach.

        * java/idl2jni/runtime/i2jrt/Runtime.java:
        * java/idl2jni/runtime/i2jrt_Runtime.cpp:

          Removed these files.

Thu Dec 11 00:58:14 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * DDS_release_notes.txt:

          Added release note about opendds_ir_ctl changes.

Thu Dec 11 00:46:26 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Re-added imr_client dependency (required for static builds).

Wed Dec 10 22:57:20 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for all of the changes merged in from the JMS_PROVIDER
          branch last Friday.

        * tests/DCPS/PersistentDurability/run_test.pl:

          Updated for -DCPSPersistentDurabilityDir option.

Wed Dec 10 15:09:39 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/INSTALL:

          Marked Mac OS X as an experimental platform.

Wed Dec 10 15:04:58 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/codegen/im_jni.cpp:
        * java/jms/src/org/opendds/jms/TopicImpl.java:
        * java/jms/src/org/opendds/jms/qos/DataReaderQosPolicy.java:
        * java/jms/src/org/opendds/jms/qos/DataWriterQosPolicy.java:
        * java/jms/src/org/opendds/jms/qos/ParticipantQosPolicy.java:
        * java/jms/src/org/opendds/jms/qos/PublisherQosPolicy.java:
        * java/jms/src/org/opendds/jms/qos/SubscriberQosPolicy.java:
        * java/jms/src/org/opendds/jms/qos/TopicQosPolicy.java:

          Updated default QosPolicy behavior. Added additional include
          in generated code to make use of new class loading behavior.

Wed Dec 10 03:22:06 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/src/org/opendds/jms/DataWriterPair.java:
        * java/jms/src/org/opendds/jms/MessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/PublisherManager.java:
        * java/jms/src/org/opendds/jms/SubscriberManager.java:
        * java/jms/src/org/opendds/jms/TopicImpl.java:

          Updated logging; Removed null checks on QosPolicies (will always
          be set).

Wed Dec 10 03:10:01 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/dds/OpenDDS_DCPS_jni.cpp:
        * java/idl2jni/runtime/i2jrt_ORB.cpp:
        * java/idl2jni/runtime/i2jrt_TAOObject.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.cpp:
        * java/jms/src/org/opendds/jms/common/util/NativeLoader.java:
        * java/jms/src/org/opendds/jms/resource/ResourceAdapterImpl.java:

          Updated other FindClass usages. Moved bootstrap code to
          NativeLoader.bootstrap().

Tue Dec  9 22:42:50 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/jms/native/org_opendds_jms_DCPSInfoRepo.cpp:

          Updated style to match DDS proper; fixed deprecated casts.

Tue Dec  9 22:04:28 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/codegen/im_jni.cpp:
        * java/idl2jni/runtime/i2jrt_Runtime.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.h:
        * java/idl2jni/runtime/idl2jni_runtime.cpp:

          Completed support for a global ClassLoader; this fixes an issue
          where ACE threads could not find classes defined in nested
          ClassLoaders.

Tue Dec  9 16:54:53 UTC 2008  Weiqi Gao  <gaow@ociweb.com>

        * java/jms/compat/opendds-jms-compat.iml:

          Trivial changes.

        * java/jms/compat/test/org/opendds/jms/client/MessageConsumerImplTest.java:
        * java/jms/src/org/opendds/jms/ConnectionImpl.java:
        * java/jms/src/org/opendds/jms/ConsumerDataReaderListener.java:
        * java/jms/src/org/opendds/jms/DurableMessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/MessageConsumerImpl.java:
        * java/jms/src/org/opendds/jms/SessionImpl.java:

          Added support for durable subscribers.

Tue Dec  9 05:38:57 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/INSTALL:

          Minor edits.

Tue Dec  9 05:28:24 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/runtime/i2jrt_Runtime.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.h:
        * java/idl2jni/runtime/idl2jni_runtime.cpp:

          Updated context class loading behavior.

Tue Dec  9 02:33:46 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/idl2jni/runtime/i2jrt/Runtime.java:
        * java/idl2jni/runtime/i2jrt_Runtime.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.h:
        * java/idl2jni/runtime/idl2jni_runtime.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.mpc:
        * java/jms/src/org/opendds/jms/resource/ResourceAdapterImpl.java:

          Initial support for context class loading in attached native
          threads.

Tue Dec  9 00:14:16 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/INSTALL:

          Updated INSTALL with instructions for building on Mac OS X.

Mon Dec  8 19:28:27 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Dropped static dependency on imr_client (This should cause a
          temporary failure on 1.4a builds - Ciju is working on a patch).

        * java/ant/opendds-ant.iml:
        * java/jms/compat/opendds-jms-compat.iml:
        * java/jms/src/org/opendds/jms/management/DCPSInfoRepoService.java:
        * java/jms/src/org/opendds/jms/management/Destination.java:
        * java/jms/src/org/opendds/jms/management/HibernatePersistenceService.java:
        * java/jms/src/org/opendds/jms/management/ParticipantFactoryService.java:
        * java/jms/src/org/opendds/jms/management/argument/DynamicArguments.java:

          Updates to JMX components: better logging; general refactoring.

Sun Dec  7 22:35:41 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Comparator_T.h:

          Added an #include needed for TAO 1.4a on some platforms.

        * dds/DCPS/FileSystemStorage.h:

          Fixed a typo in my commit from yesterday.

Sun Dec  7 05:47:46 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/ant/opendds-ant.iml:
        * java/jms/compat/opendds-jms-compat.iml:
        * java/jms/compat/src/META-INF/application.xml:
        * java/jms/compat/src/META-INF/service/opendds-ds.xml:
        * java/jms/src/org/opendds/jms/management/HibernatePersistenceService.java:
        * java/jms/src/org/opendds/jms/persistence/HibernatePersistenceManager.java:
        * java/jms/src/org/opendds/jms/persistence/PersistenceManager.java:

          Refactored PersistenceManager; updated IDEA project files.

        * java/jms/src/org/opendds/jms/management/PersistenceManagerService.java:

          Removed this file.

Sun Dec  7 03:38:15 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/DCPS/DataDurabilityCache.h:
        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * java/OpenDDS.ipr:
        * java/jms/compat/src/META-INF/service/opendds-ds.xml:
        * java/jms/src/org/opendds/jms/management/argument/DCPSArguments.java:
        * tests/DCPS/PersistentDurability/run_test.pl:

          Added configurable directory for FileSystemStorage. New DCPS option
          added: -DCPSPersistentDataDir.

Sat Dec  6 22:56:15 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/FileSystemStorage.h:

          ACE 5.4a doesn't define ACE_DIRENT so define it here based on the
          ACE version.

Sat Dec  6 20:59:16 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/FileSystemStorage.cpp:

          Added #includes for required ACE headers.

Fri Dec  5 23:23:24 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        Merged the JMS_PROVIDER branch (r1812) back to the trunk.
        That branch is now only for archival purposes.  Its ChangeLog
        is now in the file $DDS_ROOT/history/ChangeLog-JMS_PROVIDER.

        This changeset includes many improvements to the core OpenDDS
        libraries as well as the incorporation of a JMS Provider based on
        OpenDDS (located at $DDS_ROOT/java/jms).  Subsequent committs to the
        release notes will detail all of the user-visible changes to OpenDDS.

Wed Dec  3 18:19:34 UTC 2008  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Add attach() member functions to attach publishers
          and subscribers to the transport implementation.
          This helps users avoid downcasting to the publisher
          and subscriber implementations.

        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/stack_subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/subscriber.cpp:

          Use new method to attach transports (and remove downcasts).

Thu Nov 27 05:38:17 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Domain_Manager.h
        * wrapper/Topic_Manager.inl
        * wrapper/Publication_Manager.h
        * wrapper/Subscription_Manager.inl
        * wrapper/Domain_Manager.inl
        * wrapper/Publication_Manager.inl
        * wrapper/Topic_Manager.h
        * wrapper/Subscription_Manager.h:

          Added null () method to all Manager bridge classes to check for
          null references.

Tue Nov 25 21:30:24 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/common.h:
        * tests/DCPS/FooTest5/run_test_multi_trans.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:

          Changed FooTest5 to test connecting to BIT (using TCP) while
          data is sent using another transport.

Wed Nov 12 23:26:20 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Topic_Manager_T.h
        * wrapper/DataReader_Listener_Base.h
        * wrapper/Domain_Manager.h
        * wrapper/Topic_Manager.inl
        * wrapper/Exit_Signal_Handler.h
        * wrapper/Publication_Manager.h
        * wrapper/Subscription_Manager.inl
        * wrapper/Domain_Manager_Impl.h
        * wrapper/wrapper_subscription.h
        * wrapper/Publication_Manager_Impl.h
        * wrapper/Topic_Manager_T.cpp
        * wrapper/DataReader_Listener_Base.inl
        * wrapper/Topic_Manager_Impl.h
        * wrapper/Domain_Manager.inl
        * wrapper/Publication_Manager.inl
        * wrapper/Subscription_Manager_Impl.h
        * wrapper/wrapper_config.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.inl
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.h
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.inl
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.inl
        * wrapper/Topic_Manager.h
        * wrapper/wrapper_publication.h
        * wrapper/Subscription_Manager.h:

          Changed inclusion protection macro names (removed leading '_').

Wed Nov 12 04:44:21 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/OpenDDS/OpenDDS_Publication_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.cpp:

          Fixed problem with transport impl creation calls.

Tue Nov 11 16:00:37 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * rules.dds.GNU:

          Use the new DDS_MICRO_VERSION macro in the shared lib version #s.

Mon Nov 10 18:03:02 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Subscription_Manager.inl
        * wrapper/Subscription_Manager_Impl.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.cpp
        * wrapper/Subscription_Manager.h:

        Added get_default_datareader_qos method to Subscription_Manager.

Mon Nov 10 16:17:22 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Topic_Manager_T.h
        * wrapper/Domain_Manager.h
        * wrapper/Topic_Manager.inl
        * wrapper/Publication_Manager.h
        * wrapper/Subscription_Manager.inl
        * wrapper/Domain_Manager_Impl.h
        * wrapper/Publication_Manager_Impl.h
        * wrapper/Topic_Manager_T.cpp
        * wrapper/Topic_Manager_Impl.h
        * wrapper/Domain_Manager.inl
        * wrapper/Domain_Manager.cpp
        * wrapper/Publication_Manager.inl
        * wrapper/Subscription_Manager_Impl.h
        * wrapper/wrapper_config.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.h
        * wrapper/OpenDDS/OpenDDS_create_domain_manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.cpp
        * wrapper/Topic_Manager.h
        * wrapper/Subscription_Manager.h:

        Added QoS policy support to the wrapper API.

Fri Nov  7 20:46:44 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/Process.pm:
        * bin/ProcessFactory.pm:
        * bin/PerlDDS/Process.pm:
        * bin/PerlDDS/ProcessFactory.pm:

          Moved perl modules from bin/ to bin/PerlDDS to resolve
          PerlDDS::Process not locatable issue when running with
          -Config Coverage.

        * bin/DDS_Run_Test.pm:

          Added package name for using Process and ProcessFactory modules.

        * dds/DCPS/transport/framework/TheTransportFactory.h:

          Removed TheTransportFactory.inl include.

        * dds/DCPS/transport/framework/TheTransportFactory.inl:
        * dds/DCPS/transport/framework/TheTransportFactory.cpp:

          Removed these files as they are nothing and cause trouble
          when compiling with test coverage option (-fprofile-arcs)
          on some gcc compiler(1.4.1).

Fri Nov  7 17:49:09 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.rc:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.rc:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.rc:
        * dds/InfoRepo/DCPSInfoRepoServ.rc:
        * dds/InfoRepo/Federator.rc:
        * dds/InfoRepo/InfoRepoLib.rc:
        * dds/OpenDDS_DCPS.rc:
        * java/dds/dcps_java.rc:
        * java/idl2jni/runtime/idl2jni_runtime.rc:
        * java/tao/tao_java.rc:

          Use the new DDS_MICRO_VERSION macro in the version info.

Fri Nov  7 16:14:18 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Updated for OpenDDS 1.3!

Fri Nov  7 15:21:06 UTC 2008  Jonathan S. Pollack  <pollackj@ociweb.com>

        * OpenDDS version 1.2 released.

Fri Nov  7 15:04:49 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * README:

          Updated with notes regarding TAO versions and failing tests.

Tue Nov  4 22:51:42 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * java/tests/messenger/publisher/TestPublisher.java:
        * java/tests/messenger/subscriber/DataReaderListenerImpl.java:
        * java/tests/messenger/subscriber/TestSubscriber.java:
          Further error checking.

Tue Nov  4 16:46:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/GuardCondition/GuardConditionTest.cpp:

          Fixed warnings.

Mon Nov  3 16:20:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:

          Fixed incorrect string comparison(replace = with ==).

Sat Nov  1 16:18:46 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:

          Fixed compile error (now using fclose() instead of close()).

Sat Nov  1 07:54:55 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          Corrected file synch and updated some logging.

Fri Oct 31 23:01:18 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added entry for a deadlock fix in reliable multicast transport.

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          Used file synch for qos change instead of using fixed time
          delay. This should fix prst_repo_run_test failure on some
          slow machines.

Fri Oct 31 19:16:26 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * java/tests/messenger/publisher/TestPublisher.java:
        * java/tests/messenger/subscriber/DataReaderListenerImpl.java:
        * java/tests/messenger/subscriber/TestSubscriber.java:
          Verify returned objects. Check DDS return codes.

Fri Oct 31 18:57:15 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.cpp:

          Fixed a potential deadlock that send thread and reactor event
          thread acquire EventHandler lock and reactor internal lock
          reversely.

        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/FederatorManagerImpl.cpp:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * tests/DCPS/StatusCondition/StatusConditionTest.cpp:

          Fixed warnings.

Fri Oct 31 18:39:03 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          read_next_instance() and take_next_instance() may exit from within
          the for loop.  Call post_read_or_take() in these cases.

Fri Oct 31 17:40:02 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/idl2jni/runtime/idl2jni_runtime.rc:
        * java/tao/tao_java.rc:

          Fixed #include paths.

Fri Oct 31 16:21:52 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.rc:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.rc:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.rc:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepoServ.rc:
        * dds/InfoRepo/Federator.rc:
        * dds/InfoRepo/InfoRepoLib.rc:
        * dds/OpenDDS_DCPS.rc:
        * java/dds/dcps_java.rc:
        * java/idl2jni/runtime/idl2jni_runtime.rc:
        * java/tao/tao_java.rc:

          Added resource files so that Windows DLLs get the version number and
          library description embedded.

Thu Oct 30 23:23:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest4/main.cpp:

          Added delay between create_datareader and sub
          delete_contained_entities to avoid test failure on slow
          machines that add_associations is not performed because
          of deleting.

Thu Oct 30 17:00:49 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added entries for bug fixes after 1.1 release.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicImpl.h:
        * dds/DCPS/TopicImpl.cpp:

          Removed non-necessary overload functions (get_status_changes()
          and notify_status_condition()).

        * dds/DCPS/EntityImpl.cpp:

          Fixed a warning.

Wed Oct 29 23:53:35 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/EntityImpl.cpp:

          Added lock to protect the status_changes_.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Removed lock in get_status_changes() and
          notify_status_condition() as the status
          change is protected by EntityImpl lock. This
          should resolve potential deadlock when two threads
          acquire WaitSet lock and DataWriter/DataReader lock
          in reverse order.

Wed Oct 29 20:48:24 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added the qualifier !DDS_NO_ORBSVCS to tests that use TAO's orbsvcs.

Wed Oct 29 20:16:36 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Made disconnect() to unregister connection with reactor.
          This would avoid access violation if reactor cleanup
          handles after connection is destroyed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made relink() check if connection is nil to avoid access
          violation when trying to reconnect while datalink is
          releasing.

Wed Oct 29 19:33:47 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * docs/design/federation:
        * docs/design/federation/federation.html:
        * docs/design/federation/images:
        * docs/design/federation/images/Application.jpg:
        * docs/design/federation/images/CreateParticipant.jpg:
        * docs/design/federation/images/CreatePublication.jpg:
        * docs/design/federation/images/CreateSubscription.jpg:
        * docs/design/federation/images/CreateTopic.jpg:
        * docs/design/federation/images/Federation.jpg:
        * docs/design/federation/images/OpenDDS.jpg:
        * docs/design/federation/images/PassOwnership.jpg:
        * docs/design/federation/images/Repository.jpg:
        * docs/design/federation/images/StartAndFederate.jpg:
        * docs/design/federation/images/UseCases.jpg:
        * docs/design/federation/images/info-dm.png:

          Added documentation with diagrams for the federation design.
          Point a browser at docs/design/federation/federation.html to
          view the entire documentation.  This replaces the earlier text
          file design documentation.

        * docs/design/federation.txt:

          Removed this file.

Wed Oct 29 18:18:29 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS_TAO.mwc:

          Added PI and CodecFactory.  They're not strictly needed but TAO will
          try to load them at runtime and it will produce a confusing error
          message (which is flagged as an error on the scoreboard).

Wed Oct 29 17:41:05 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * java/tests/dcps_java_tests.lst:
        * java/tests/messenger/run_test.pl:
          New test script to run java peers(publisher/subscriber)
          simultaneously.

Tue Oct 28 21:34:20 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          Overloaded notify_status_condition() to get sample_lock_
          before calling base class notify_status_condition(). This
          should resolve deadlock situation that two threads (
          one calling notify_status_condition() and another calling
          data_received()) acquire DataReaderImpl sample_lock_ and
          ConditionImpl lock_ reversely.

        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:

          Similar change as DataReaderImpl.

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Corrected conn_retry_attempts_ setting which should be set 0
          even the local_address is not configured.

        * DCPS/transport/framework/DataLink.cpp:

          Added guard for accessing sub_map_ and pub_map_ in exist()
          function.

        * tests/DCPS/sub_init_loop/publisher.cpp:

          Changed history qos to be default(KEEP_LAST_HISTORY_QOS)
          instead of KEEP_ALL_HISTORY_QOS as it's not required.
          This avoids publisher continue consume resouce after
          subscriber encounter deadlock.

Mon Oct 27 20:59:57 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Fixed a bug in add_pending_association() that
          check_fully_association by individual association does not
          remove the fully associated pair in the pending list so
          fully_associated may be called multiple times for the same
          association.

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Configured BIT transport to not attempt connect after lost
          connection. This would avoid reconnect errors during repo
          shutdown.

Mon Oct 27 15:09:34 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/GuardCondition/GuardConditionTest.cpp:
        * tests/DCPS/StatusCondition/StatusConditionTest.cpp:

          Changed mechanism used for waiting for threads to terminate, the
          old way was hanging on some linux systems (rome).

Fri Oct 24 22:19:03 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Domain_Manager.h
        * wrapper/Domain_Manager.cpp
        * wrapper/Publication_Manager.h
        * wrapper/Publication_Manager.cpp
        * wrapper/Subscription_Manager.h
        * wrapper/Subscription_Manager.cpp:

          Removed empty destructors to fix compiler error with borland
          CodeGear.

Fri Oct 24 17:43:13 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dds_wrapper.mpb:

          Changed the "after" to valid project name
          (these are not library names).

Fri Oct 24 13:54:33 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/ConditionImpl.h:
        * dds/DCPS/ConditionImpl.cpp:
        * dds/DCPS/StatusConditionImpl.cpp:
        * tests/DCPS/GuardCondition/GuardCondition.mpc:
        * tests/DCPS/StatusCondition/StatusCondition.mpc:

          Merged an additional fix from the branch that was mistakenly
          left out of yesterday's merge.

Thu Oct 23 22:47:51 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * DDS_release_notes.txt:

          Added implementation of DomainParticipant::get_current_time().
          This ChangeLog entry is late, the previous changeset contains
          the actual file modification.

Thu Oct 23 21:43:57 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DdsDcpsDomain.idl:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Implemented DomainParticipant::get_current_time().

        * DDS_release_notes.txt:

          Noted the following changes.  These were first developed on the
          JMS_PROVIDER branch, but that branch has many other changes which
          will be merged after 1.2.

        * dds/DdsDcpsInfrastructure.idl:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/ConditionImpl.h:
        * dds/DCPS/ConditionImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Definitions.h:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/GuardCondition.h:
        * dds/DCPS/GuardCondition.cpp:
        * dds/DCPS/OfferedDeadlineWatchdog.cpp:
        * dds/DCPS/RequestedDeadlineWatchdog.cpp:
        * dds/DCPS/StatusConditionImpl.h:
        * dds/DCPS/StatusConditionImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WaitSet.h:
        * dds/DCPS/WaitSet.cpp:

          Implemented WaitSet, GuardCondition, and StatusCondition.

        * java/dds/DDS/GuardCondition.java:
        * java/dds/DDS/WaitSet.java:
        * java/dds/OpenDDS_DCPS_jni.cpp:
        * java/dds/dcps_java.mpc:

          Java bindings for WaitSet and GuardCondtion.

        * java/idl2jni/codegen/im_jni.cpp:

          Fixed a bug with inout sequences.

        * bin/dcps_tests.lst:
        * tests/DCPS/GuardCondition:
        * tests/DCPS/StatusCondition:

          Added two new tests.

Thu Oct 23 20:59:37 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          Fixed iterator incorrect move in processDeferred().

Wed Oct 22 22:08:10 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Topic_Manager_T.h
        * wrapper/Topic_Manager_T.cpp:

          Made corrections on copy ctor and assignment operator
          and made them private.

        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.cpp:

          Changed register_transport functionality so that it is only
          called once per Domain_Manager instance even if several
          publishers or subscribers are created.

Wed Oct 22 03:25:37 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrapper/Subscription_Manager_Impl.cpp
        * wrapper/Domain_Manager.h
        * wrapper/Publication_Manager.h
        * wrapper/Topic_Manager.cpp
        * wrapper/Subscription_Manager.inl
        * wrapper/Subscription_Manager.cpp
        * wrapper/Reference_Counter_T.h
        * wrapper/Domain_Manager_Impl.h
        * wrapper/Publication_Manager_Impl.h
        * wrapper/Topic_Manager_Impl.h
        * wrapper/Domain_Manager.cpp
        * wrapper/Domain_Manager.inl
        * wrapper/Publication_Manager.cpp
        * wrapper/Publication_Manager.inl
        * wrapper/Subscription_Manager_Impl.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.h
        * wrapper/OpenDDS/OpenDDS_Publication_Manager.h
        * wrapper/OpenDDS/OpenDDS_Subscription_Manager.cpp
        * wrapper/OpenDDS/OpenDDS_Domain_Manager.cpp
        * wrapper/Topic_Manager.h
        * wrapper/Reference_Counter_T.cpp
        * wrapper/Domain_Manager_Impl.cpp
        * wrapper/Subscription_Manager.h
        * wrapper/Publication_Manager_Impl.cpp
        * wrapper/Topic_Manager_Impl.cpp:

          Replaced Reference_Counter_T class with
          ACE_Refcounted_Auto_Ptr in the memory management bridge
          classes.

Tue Oct 21 23:22:55 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Fixed a warning.

        * dds/InfoRepo/PersistenceUpdater.h:

          Added missing includes.

Tue Oct 21 22:24:39 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/mySvc.conf:

          Updated the service name.

Tue Oct 21 22:05:28 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Removed a duplicate header.

        * dds/InfoRepo/DCPSInfoRepoServ.cpp:

          Added includes to load service for static build.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:

          Added Loader class for static intializing and
          loading service.

        * tests/DCPS/Prst_delayed_subscriber/mySvc.conf:

          Updated the service name.

Tue Oct 21 20:00:02 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added Federation test.

        * dds/InfoRepo/DCPSInfoRepoServ.cpp:

          Fixed a warning.

Tue Oct 21 18:53:07 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Eliminated a warning when built_in_topics=0.

Mon Oct 20 22:08:36 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * DDS_release_notes.txt:

          Added short description of new dcps_ts.pl command line
          argument.

Mon Oct 20 21:51:30 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * DDS_release_notes.txt:

          Updated release notes with DCPSInfoRepo changes.

Mon Oct 20 18:03:31 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfoRepoServ.h:
        * dds/InfoRepo/DCPSInfoRepoServ.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          DCPSInfoRepo refactorings:

          - DCPSInfoRepo will no longer abort on an invalid Transport
            configuration.
          - Added catch all to DCPSInfoRepoServ::init to ensure
            failed initialization cleans up state correctly.
          - Cleaned up DCPSInfoRepoServ interfaces (i.e. unused return
            values, incorrect return types).
          - Usage will no longer call ACE_OS::exit; now throws an
            InitError instead.
          - Service_Participant::shutdown is now resilient; assertion
            replaced with conditional if CORBA::ORB is nil.

Fri Oct 17 23:31:29 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/run_ns_test.pl:

          Added file extension for nsadd executable to fix file not found problem
          on windows.

        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:

          Reduced time delay for transport factory release to resolve
          "Unable to locate DataLink" during transport release.

Fri Oct 17 22:21:38 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/build_scripts/JavaTypeSupportImpl.pm:

          Removed an extraneous reference count on the typesupport object.

        * wrapper/example/WrapperStockQuoter.mpc:

          Removed references to non-existent domain_ids file.

Fri Oct 17 22:18:52 UTC 2008  Mike Martinez  <martinez_m@lab.ociweb.com>

        * bin/dcps_ts.pl:

          Added -o <dir> option to write output files to a directory.

Thu Oct 16 23:09:41 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/run_ns_test.pl:

          Worked around nsadd executable name difference in DOC and other
          TAO version(1.4a and 1.5a). The script now verify nsadd executable
          file existence.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Changed an LM_ERROR logging in find_topic_description to LM_DEBUG.

        * tests/DCPS/unit/run_test.pl:

          Directed output to a file as the errors loggings are expected.

Thu Oct 16 19:50:35 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Replaced _non_exist() call with _is_a() to validate repo connections.
          This would fix the 1.4a minimum_corba build issue due to _non_exist
          is not available in 1.4a.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Fixed a warning in DDS_HAS_MINIMUM_BIT build.

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Fixed a warning.

Wed Oct 15 22:45:58 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/FederatorManagerImpl.h:

          Fixed warnings from SunOS compiler.

Wed Oct 15 18:46:14 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/FailoverListener.cpp:
        * dds/InfoRepo/UpdateListener_T.cpp:
        * dds/InfoRepo/UpdateReceiver_T.h:
        * dds/InfoRepo/UpdateReceiver_T.cpp:

          Fixed warnings.

Wed Oct 15 17:37:22 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Made BIT transport configured with datalink_release_delay_=0, this
          makes the BIT transport send the graceful shutdown to the peer so
          the InfoRepo won't try to reconnect.

        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          Fixed some warnings.

Wed Oct 15 15:56:53 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * MPC/config/dds_wrapper.mpb:

          Fixed project dependency settings to remove linker errors in
          static builds.

Wed Oct 15 00:15:36 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.h:

          Fixed a guid comparison problem.

        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:

          Added release() to support topic deletion upon last associated
          sub/pub/topic object deletion. This would fix the access violation
          when sub/pub deletion updates happen after topic deletion.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:

          - Made topic->release called upon removing sub/pub/topic.
          - Updated remove_all_dependents() to move iterator to next
            before removing sub/pub/topic to fix access violation.

        * dds/InfoRepo/FederatorManagerImpl.inl:

          Fixed orb reference counting issue.

        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          - Added lock_ to protect the deferred updata samples.
          - Added processDeferred() call in each processCreate().
            This would fix missing update problem due to timing
            of multithreads handling participant/topic/sub/pub
            updates.
          - Added try and catch Invalid_Participant block for
            remove_topic/remove_publication/remove_subscription
            in case the remove_domain_participant is called
            before them.

        * dds/InfoRepo/FederatorManagerImpl.cpp:

          Changed an LM_ERROR message to LM_DEBUG message.

Tue Oct 14 19:11:47 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DdsDcps.mpc:
        * dds/dcps_bits.mpb:

          Even with built_in_topics=0, we now need to use -Gdcps on
          DdsDcpsInfrastructure.idl because Federation is depending on the
          functions it generates.

        * java/tests/builtintopics/run_test.pl:
        * java/tests/complex_idl/run_test.pl:
        * java/tests/messenger/publisher/run_test.pl:
        * java/tests/messenger/subscriber/run_test.pl:

          Remove references to deprecated 'domain_ids' files.

        * wrapper/DDSWrapper_OpenDDS.mpc:

          Use "dynamic" flags to set the *_BUILD_DLL macros.

Tue Oct 14 15:18:14 UTC 2008  Chris Cleeland  <cleeland@ociweb.com>

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Appended 'LL' to the constant used when ACE_SIZEOF_LONG_DOUBLE
          is 16.  Without this it was causing compile errors on at least
          Mac OS X 10.5.*.

Tue Oct 14 14:11:04 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * MPC/config/dds_wrapper.mpb:
        * wrapper/example/WrapperStockQuoter.m?c:

          Fixed scoreboard error by moving dds_wrapper.mpb file from
          the wrapper directory to the MPC/config directory and
          renamed MPC project files.

Mon Oct 13 21:36:42 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Fixed build breakage on static builds of DCPSInfoRepo.

Mon Oct 13 14:27:57 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/tools/federation/Federation.mpc:
        * dds/tools/federation/federation.cpp:

          Fixed compile errors.

Sun Oct 12 04:12:31 UTC 2008  Friedhelm Wolf  <fwolf@dre.vanderbilt.edu>

        * wrappers/*:

          Added new set of wrapper classes to simplify DDS usage in
          applications.

Fri Oct 10 22:39:35 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/tools:
        * dds/tools/federation:
        * dds/tools/federation/Federation.mpc:
        * dds/tools/federation/federation.cpp:

          Added new command line tool for managing federations.

Fri Oct 10 22:13:49 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Changed lock_ ACE_Recursive_Thread_Mutex to solve the deadlock
          on linux.

Fri Oct 10 22:15:39 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/tests/builtintopics/domain_ids:
        * java/tests/complex_idl/domain_ids:
        * java/tests/messenger/publisher/domain_ids:
        * java/tests/messenger/subscriber/domain_ids:

          Removed these files.  Domain ID files are now depreceated.

Fri Oct 10 20:26:41 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Corrected an debug logging.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Added invalid repo id from repo.

        * dds/DdsDcpsInfoUtils.idl:

          Added an enum TopicStatus - INTERNAL_ERROR .

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Added lock_ to synchronize the servant implementations
          and the methods called by updater threads.

        * dds/InfoRepo/DCPS_IR_Participant.cpp:

          Fixed a problem that the iterator is not accessible after
          remove_topic() is called.

        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:

          Corrected a debug logging.

        * dds/InfoRepo/UpdateReceiver_T.cpp:

          Removed task wait() call from close() since close() can be
          called when thread exit. It'll cause problem waiting for
          itself to finish. Use stop() instead of close() to shutdown
          the UpdateReceiver task thread.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Added pre-compile header.

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Added empty Template_Files section to DCPSInfoRepoServ.

Fri Oct 10 19:59:44 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Adjusted MPC settings to not pick up the defaults.

Fri Oct 10 19:48:27 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

        Transitioned from using _validate_connection() to using
        _non_existant() to remove a dependency on a non-minimal CORBA
        feature.

Fri Oct 10 19:29:57 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepoServ.h:
        * dds/InfoRepo/DCPSInfoRepoServ_Export.h:

          Added Export macros for GCC 4.x and Windows builds.

Fri Oct 10 19:09:50 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepoServ.h:
        * dds/InfoRepo/DCPSInfoRepoServ.cpp:

          Added libDCPSInfoRepoServ service library. DCPSInfoRepo is
          now a simple wrapper around the library.

Fri Oct 10 14:08:06 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/FailoverListener.cpp:

          Added required #include of the PCH header.

Thu Oct  9 21:37:23 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/InfoRepo/Federator.idl:

          leave_and_shutdown()
          shutdown()
            Added these methods to the Federator::Manager interface.

        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.cpp:

          leave_and_shutdown()
          shutdown()
            Implement the new IDL methods.

        * dds/InfoRepo/ShutdownInterface.h:

          Abstract interface used to propagate shutdown requests.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          shutdown() - forward shutdown requests to new ShutdownInterface
                       reference provided via constructor.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Implement the new ShutdownInterface and pass this to the
          repository implementation object constructor.

Thu Oct  9 20:31:34 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl/PublisherImpl.cpp:

          Fixed an iterator access violation due to iterator erasing
          while iterating on map or set. The delete_*() invalidates
          the iterator so the iterator has to be move forward for
          next iteration before delete_*() call.

Thu Oct  9 18:22:58 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/FailoverListener.h:
        * dds/DCPS/FailoverListener.cpp:

          Install a FailoverListener object to the DCPSParticipant
          built-in topic DataReader when federated.  This listener will
          initiate failover sequencing on reciept of the
          on_subscription_lost() callback.
          Set the LIVELINESS.lease_duration value for the DCPSParticpant
          built-in topic DataReader to that specified by the
          FederationLivelinessDuration value when federated.

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/Service_Participant.cpp:

          load_common_config() - added FederationLivelinessDuration key
            value to this section.  The default value is 60 seconds.
          federation_liveliness() - new methods to access a member
            containing the new FederationLivelinessDuration value.
          repsitory_lost() - simplified handling the case where the
            specified lost repository is not found.

        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Add argument when initializing the built-in topics to cause the
          DCPSParticipant built-in topic to use a non-infinite
          LIVELINESS.lease_duration value.

        * dds/DdsDcpsInfo.idl:
        * dds/DdsDcpsInfoUtils.idl:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          add_domain_participant() - changed signature to return a
            structure with both the previously returned Id value as well
            as a boolean indication of whether the repository is a
            federated repository.

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:

          Use modified add_domain_participant() signature.

        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:

          Use modified add_domain_participant() signature.

        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:

          Added diagnostic message to indicate final test result.

        * tests/DCPS/FooTest3_1/PubDriver.cpp:

          Added additional diagnostic messages during test.

        * tests/DCPS/FooTest3_1/run_test.pl:

          Added diagnostic message to indicate final test result.
          Moved command line prints to be immediately prior to the Spawn
          of the process.

Thu Oct  9 16:03:55 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Removed unreferenced local variable.
          Using ACE_Time_Value::zero to avoid ambiguous conversions.

Thu Oct  9 07:00:04 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Made TAO_DDS_DCPSInfo_i servant be member of InfoRepo instead of
          in the scope of init() function. It is deleted when exit from
          init(). This should fix access violation on the TAO_DDS_DCPSInfo_i
          object and its members.

        * dds/InfoRepo/FederatorManagerImpl.cpp:

          Made listener thread stop in finalize ().

        * dds/InfoRepo/UpdateListener_T.h:
        * dds/InfoRepo/UpdateListener_T.cpp:

          Added stop() method.

Wed Oct  8 18:45:16 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/Service_Participant.cpp:

          remap_domains()   - refactored partial implementation of
                              set_repo() into separate method.
          repository_lost() - added new method to failover to new
                              repository.
          Added configurable variables and accessors/mutators for
            FederationRecoveryDuration
            FederationInitialBackoffSeconds
            FederationBackoffMultiplier

        * tests/DCPS/Federation/run_test.pl:

          Added verbose option mapping to '-ORBVerboseLogging 1' for
          process arguments.

Wed Oct  8 14:42:23 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/InfoRepo/FederatorConfig.cpp:

          Added required #include.

Wed Oct  8 14:09:18 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/SubscriberImpl.cpp:

          Added required #include.

        * dds/DCPS/GuidUtils.cpp:
        * dds/InfoRepo/GuidGenerator.cpp:

          Added static_cast<> around numeric narrowing conversions.  This
          silences warnings from some compilers.

Tue Oct  7 19:31:05 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DdsDcps.mpc:

          No need to run dcps_ts.pl on DdsDcpsGuid.idl, tao_idl generates all
          the code that's actually used for the Guid type.

Tue Oct  7 14:28:59 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Fixed misspelled variable name.

Mon Oct  6 22:22:34 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

          Merged the Federation branch back onto the trunk.  This feature
          branch developed the basic infrastructure to support federation
          of multiple repositories.  This feature is intended to provide
          fault-tolerant capabilities to the DCPSInfoRepo service
          meta-data repositories.  Details of the development can be
          found in the file 'history/ChangeLog-Federation'.

          See the file 'DDS_release_notes.txt' for a description
          of changes made that affect the user API to OpenDDS.
          Briefly, these changes include: removal of domain_ids domain
          specification files; extension of internal Id values from 32
          to 128 bits; ability to federate multiple repositories for
          distributed operation.

        * DDS_release_notes.txt:
        * DevGuideExamples/DCPS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/run_test.pl:

        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderRemoteImpl.h:
        * dds/DCPS/DataReaderRemoteImpl.cpp:
        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterRemoteImpl.h:
        * dds/DCPS/DataWriterRemoteImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/GuidUtils.h:
        * dds/DCPS/GuidUtils.cpp:
        * dds/DCPS/InstanceState.h:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.h:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.inl:

        * dds/DdsDcps.mpc:
        * dds/DdsDcpsGuid.idl:
        * dds/DdsDcpsInfo.idl:
        * dds/DdsDcpsInfoUtils.idl:

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/DCPS_Utils.h:
        * dds/InfoRepo/DefaultValues.h:
        * dds/InfoRepo/DomainParticipantListener_i.h:
        * dds/InfoRepo/Federator.idl:
        * dds/InfoRepo/FederatorConfig.h:
        * dds/InfoRepo/FederatorConfig.inl:
        * dds/InfoRepo/FederatorConfig.cpp:
        * dds/InfoRepo/FederatorManagerImpl.h:
        * dds/InfoRepo/FederatorManagerImpl.inl:
        * dds/InfoRepo/FederatorManagerImpl.cpp:
        * dds/InfoRepo/FederatorManagerImpl_updates.cpp:
        * dds/InfoRepo/GuidGenerator.h:
        * dds/InfoRepo/GuidGenerator.cpp:
        * dds/InfoRepo/InfoRepoMulticastResponder.h:
        * dds/InfoRepo/InfoRepoMulticastResponder.cpp:
        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * dds/InfoRepo/UpdateDataTypes.h:
        * dds/InfoRepo/UpdateListener_T.h:
        * dds/InfoRepo/UpdateListener_T.cpp:
        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
        * dds/InfoRepo/UpdateManager_T.cpp:
        * dds/InfoRepo/UpdateProcessor_T.h:
        * dds/InfoRepo/UpdateProcessor_T.cpp:
        * dds/InfoRepo/UpdateReceiver_T.h:
        * dds/InfoRepo/UpdateReceiver_T.cpp:
        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/federator_export.h:
        * dds/InfoRepo/inforepo_export.h:

        * examples/DCPS/DistributedContent/run_test.pl:
        * examples/DCPS/IntroductionToOpenDDS/ExchangeEventDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/QuoteDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/run_tcp.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_tcp_bit_off.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_test.pl:
        * examples/DCPS/IntroductionToOpenDDS/run_udp.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_udp_bit_off.bat:
        * examples/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * examples/DCPS/Messenger_Imr/run_test.pl:

        * history/ChangeLog-Federation:

        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/InfoRepo_population/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:
        * performance-tests/DCPS/TransportLatency/run_corbaloc_test.pl:
        * performance-tests/DCPS/TransportLatency/run_ns_test.pl:
        * performance-tests/DCPS/TransportLatency/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:

        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.cpp:
        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/mySvc.conf:
        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/CompatibilityTest/run_test.pl:
        * tests/DCPS/CorbaSeq/run_test.pl:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/Deadline/run_test.pl:
        * tests/DCPS/Federation/DataWriterListenerImpl.h:
        * tests/DCPS/Federation/DataWriterListenerImpl.cpp:
        * tests/DCPS/Federation/Federation.mpc:
        * tests/DCPS/Federation/Publisher.h:
        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/Subscriber.cpp:
        * tests/DCPS/Federation/TestException.h:
        * tests/DCPS/Federation/publisher_main.cpp:
        * tests/DCPS/Federation/run_test.pl:
        * tests/DCPS/Federation/subscriber_main.cpp:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/Test.idl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/Lifespan/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/LivelinessTimeout/DataReaderListenerImpl.h:
        * tests/DCPS/LivelinessTimeout/DataReaderListenerImpl.cpp:
        * tests/DCPS/LivelinessTimeout/LivelinessTimeout.mpc:
        * tests/DCPS/LivelinessTimeout/run_test.pl:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/NotifyTest/run_test.pl:
        * tests/DCPS/Partition/run_test.pl:
        * tests/DCPS/PersistentDurability/run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/mySvc.conf:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/SetQosDeadline/run_test.pl:
        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/SetQosPartition/run_test.pl:
        * tests/DCPS/SetQosPartition/sub.ini:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/StringKey/run_test.pl:
        * tests/DCPS/TransientDurability/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/ViewState/run_test.pl:
        * tests/DCPS/ZeroCopyRead/run_test.pl:
        * tests/DCPS/ZeroCopyRead/run_test_coverage.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/dds_comparative/Pub.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/Sub.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/dds_comparative/SubReader.cpp:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SimpleDataReader.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SimpleDataReader.cpp:
        * tests/transport/mcast_simple_n/SimpleDataWriter.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SimpleDataReader.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SimpleDataReader.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SimpleDataReader.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SimpleDataReader.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SimpleDataReader.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SimpleDataReader.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/run_test.pl:

          These files were either added or modified on the Federation
          feature branch.

        * DevGuideExamples/DCPS/Messenger/domain_ids:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/domain_ids:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:
        * dds/InfoRepo/UpdateManager.inl:
        * dds/InfoRepo/Updater.cpp:
        * examples/DCPS/DistributedContent/domain_ids:
        * examples/DCPS/IntroductionToOpenDDS/domain_ids:
        * examples/DCPS/Messenger_IOGR_Imr/domain_ids:
        * examples/DCPS/Messenger_Imr/domain_ids:
        * performance-tests/DCPS/InfoRepo_population/domain_ids:
        * performance-tests/DCPS/McastListenerTest/domain_ids:
        * performance-tests/DCPS/SimpleE2ETest/domain_ids:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/TCPListenerTest/domain_ids:
        * performance-tests/DCPS/TCPProfilingTest/domain_ids:
        * performance-tests/DCPS/TransportLatency/domain_ids:
        * performance-tests/DCPS/UDPListenerTest/domain_ids:
        * performance-tests/DCPS/UDPNoKeyTest/domain_ids:
        * tests/DCPS/BuiltInTopic/domain_ids:
        * tests/DCPS/BuiltInTopicTest/domain_ids:
        * tests/DCPS/CompatibilityTest/domain_ids:
        * tests/DCPS/CorbaSeq/domain_ids:
        * tests/DCPS/DCPSInfoRepo/domainids.txt:
        * tests/DCPS/DcpsIntegration/domain_ids:
        * tests/DCPS/Deadline/domain_ids:
        * tests/DCPS/Federation/domain1_ids:
        * tests/DCPS/Federation/domain2_ids:
        * tests/DCPS/FooTest2/domain_ids:
        * tests/DCPS/FooTest3/domain_ids:
        * tests/DCPS/FooTest3NoKey/domain_ids:
        * tests/DCPS/FooTest3_0/domain_ids:
        * tests/DCPS/FooTest3_1/domain_ids:
        * tests/DCPS/FooTest3_2/domain_ids:
        * tests/DCPS/FooTest4/domain_ids:
        * tests/DCPS/FooTest4_0/domain_ids:
        * tests/DCPS/FooTest5/domain_ids:
        * tests/DCPS/FooTest5_0/domain_ids:
        * tests/DCPS/Lifespan/domain_ids:
        * tests/DCPS/LivelinessTest/domain_ids:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.h:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTimeout/domain_ids:
        * tests/DCPS/MultiDPTest/domain_ids:
        * tests/DCPS/MultiRepoTest/domain1_ids:
        * tests/DCPS/MultiRepoTest/domain2_ids:
        * tests/DCPS/MultiRepoTest/domain3_ids:
        * tests/DCPS/MultiTopicTest/domain_ids:
        * tests/DCPS/NotifyTest/domain_ids:
        * tests/DCPS/Partition/domain_ids:
        * tests/DCPS/PersistentDurability/domain_ids:
        * tests/DCPS/Prst_delayed_subscriber/domain_ids:
        * tests/DCPS/Reconnect/domain_ids:
        * tests/DCPS/SetQosDeadline/domain_ids:
        * tests/DCPS/SetQosPartition/domain_ids:
        * tests/DCPS/SimpleFooTest/domain_ids:
        * tests/DCPS/StringKey/domain_ids:
        * tests/DCPS/TransientDurability/domain_ids:
        * tests/DCPS/TransientLocalTest/domain_ids:
        * tests/DCPS/ViewState/domain_ids:
        * tests/DCPS/ZeroCopyRead/domain_ids:
        * tests/DCPS/sub_init_loop/domain_ids:
        * tests/DCPS/unit/domain_ids:

          Removed these files.

Thu Oct  2 22:29:21 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Fixed a typo.

        * java/INSTALL:

          Removed an unneeded build step.

        * java/FAQ:

          Added a FAQ entry.

        * java/idl2jni/runtime/idl2jni_runtime.cpp:

          When translating an unknown exception type (not a CORBA
          SystemException) from Java to C++, call the JNI ExceptionDescribe()
          function to output a stack trace.

Wed Oct  1 20:35:59 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Added a few OpenDDS 1.2 features.

        * java/FAQ:

          Added and edited FAQ entries.

        * java/INSTALL:
        * java/README:

          Fixed typo; added note about ActiveState Perl.

Tue Sep 30 21:49:54 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/FAQ:
        * java/README:

          Added FAQ.

Tue Sep 30 16:39:06 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/tests/complex_idl/ComplexIDLTest.java:
        * java/tests/complex_idl/QuoteSupport.java:

          Cleaned up imports.

Mon Sep 29 21:26:18 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/tests/builtintopics/run_test.pl:
        * java/tests/complex_idl/run_test.pl:
        * java/tests/hello/run_test.pl:
        * java/tests/multirepo/run_test.pl:

          Updated remaining tests to make use of the new JavaProcess.pm.

Mon Sep 29 18:45:37 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/idl2jni/codegen/im_jni.cpp:

          Added a cast for jchar -> char conversion.

Mon Sep 29 15:55:37 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * MPC/config/dcps_java.mpb:

          Added link dependency on libtao_java.

        * java/tao/tao_java.mpc:

          Added more built-in sequence types.

        * java/tests/complex_idl:
        * java/tests/dcps_java_tests.lst:

          Initial commit of complex IDL test.

Mon Sep 29 14:37:05 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/INSTALL:

          Added notes on building from the subversion repository sources
          instead of a packaged release.

Fri Sep 26 21:20:37 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * README:
        * docs/INSTALL:

          Minor changes and added references to the new java/* documents.

        * java/INSTALL:
        * java/README:

          Added first draft of Java README and INSTALL documents.

        * java/tests/messenger/messenger_idl/messenger_idl_test.mpc:

          Removed an unneeded line (it had the same value as the default).

Fri Sep 26 14:04:12 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/build_scripts/generate_javadoc.pl:

          Added -quiet so class names are not printed on stdout.  One of the
          class names (RETCODE_ERROR) is being flagged by the scoreboard.

Thu Sep 25 22:04:12 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/build_scripts/generate_javadoc.pl:

          Script now takes an optional destination argument (used by
          autobuild).

        * java/docs/overview.html:

          Updated documentation.

Thu Sep 25 21:44:23 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_ts_defaults.mpb:
        * MPC/modules/IDL2JNIHelper.pm:
        * MPC/modules/TYPESUPPORTHelper.pm:

          FooTypeSupportImpl.java is actually generated by dcps_ts.pl, not by
          idl2jni.  Adjusted the various MPC parts to be aware of this.

        * bin/Process.pm:

          Fixed whitespace.

        * java/dds/dcps_java.mpc:
        * java/idl2jni/runtime/idl2jni_runtime.mpc:

          Added explicit dependencies ("<<") so that javah always runs after
          the javac invocation for the referenced class.

        * java/idl2jni/codegen/im_jni.cpp:

          Fixed warnings, added comments, fixed whitespace.

        * java/idl2jni/tests/simple/idl2jni_test_simple.mpc:

          Disabled this compile-only test.

        * java/tests/dcps_java_tests.lst:

          Fixed syntax (":" needed as a separator).

        * bin/JavaProcess.pm:

          New Perl module for running Java applications in tests.

        * java/tests/hello/run_test.pl:
        * java/tests/messenger/publisher/run_test.pl:
        * java/tests/messenger/subscriber/run_test.pl:

          These now use the JavaProcess module to start Java apps.

Thu Sep 25 21:27:47 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/build_scripts/generate_javadoc.pl:
        * java/docs/overview.html:

          Updated javadoc documentation.

Thu Sep 25 20:56:45 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/dds/DDS/package.html:
        * java/dds/OpenDDS/DCPS/package.html:
        * java/docs:
        * java/docs/overview.html:

          Added documentation.

        * java/dds/OpenDDS/DCPS/transport/package.html:
        * java/dds/OpenDDS/package.html:

          Removed these files.

Thu Sep 25 20:04:39 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/build_scripts/generate_javadoc.pl:
        * java/dds/DDS/package.html:
        * java/dds/OpenDDS/DCPS/package.html:
        * java/dds/OpenDDS/DCPS/transport/package.html:
        * java/dds/OpenDDS/package.html:
        * java/docs:
        * java/docs/overview.html:

          Added initial javadoc support.

Thu Sep 25 19:04:17 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/tests/builtintopics/builtintopics_test.mpc:
        * java/tests/dcps_java_tests.lst:

          Added guards to Builin Topic tests.

Thu Sep 25 18:27:19 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/dds:
        * java/dds/DDS:
        * java/dds/OpenDDS/DCPS/BuiltinTopicUtils.java:
        * java/dds/dcps_java_optional.mpb:

          Added OpenDDS::DCPS Builtin Topic constants.

        * java/idl2jni/codegen/im_jni.cpp:
        * java/idl2jni/runtime:
        * java/idl2jni/tests/simple/simple.idl:

          Resolved JVM class resolution issue when generating native
          sequences (w/Adam Mitz).

        * java/tests/builtintopics:
        * java/tests/builtintopics/BuiltinTopicsTest.java:
        * java/tests/builtintopics/builtintopics.ini:
        * java/tests/builtintopics/builtintopics_test.mpc:
        * java/tests/builtintopics/domain_ids:
        * java/tests/builtintopics/run_test.pl:
        * java/tests/dcps_java_tests.lst:

          Added Builtin Topic tests.

        * java/tests/multirepo:
        * java/tests/multirepo/MultiRepoBase.java:

          Removed unused import.

Wed Sep 24 15:23:19 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/tests/messenger/publisher/run_test.pl:
        * java/tests/messenger/subscriber/run_test.pl:

          Updated transport tests to disable BITs.

Tue Sep 23 20:28:34 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/tests/dcps_java_tests.lst:
        * java/tests/messenger/publisher/pub_mcast.ini:
        * java/tests/messenger/publisher/pub_reliable_mcast.ini:
        * java/tests/messenger/publisher/pub_tcp.ini:
        * java/tests/messenger/publisher/pub_udp.ini:
        * java/tests/messenger/publisher/publisher_idl_test.mpc:
        * java/tests/messenger/publisher/run_test.pl:
        * java/tests/messenger/publisher/sub_mcast.ini:
        * java/tests/messenger/publisher/sub_reliable_mcast.ini:
        * java/tests/messenger/publisher/sub_tcp.ini:
        * java/tests/messenger/publisher/sub_udp.ini:
        * java/tests/messenger/subscriber/pub_mcast.ini:
        * java/tests/messenger/subscriber/pub_reliable_mcast.ini:
        * java/tests/messenger/subscriber/pub_tcp.ini:
        * java/tests/messenger/subscriber/pub_udp.ini:
        * java/tests/messenger/subscriber/run_test.pl:
        * java/tests/messenger/subscriber/sub_mcast.ini:
        * java/tests/messenger/subscriber/sub_reliable_mcast.ini:
        * java/tests/messenger/subscriber/sub_tcp.ini:
        * java/tests/messenger/subscriber/sub_udp.ini:
        * java/tests/messenger/subscriber/subscriber_idl_test.mpc:

          Updated messenger tests to use tcp and non-tcp transports.

        * java/tests/messenger/publisher/pub.ini:
        * java/tests/messenger/publisher/sub.ini:
        * java/tests/messenger/subscriber/pub.ini:
        * java/tests/messenger/subscriber/sub.ini:

          Removed these files.

Tue Sep 23 16:04:59 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * DDS_release_notes.txt:

          Reverted previous change to release notes.

Mon Sep 22 20:13:59 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * DDS_release_notes.txt:

          Added known issue when a single TransportImpl is used for both
          a DataWriter and DataReader in the same process in Java.

        * java/tests/multirepo:
        * java/tests/multirepo/MultiRepoBase.java:
        * java/tests/multirepo/MultiRepoMaster.java:
        * java/tests/multirepo/MultiRepoSlave.java:
        * java/tests/multirepo/MultiRepoWorker.java:
        * java/tests/multirepo/multirepo.ini:
        * java/tests/multirepo/run_test.pl:

          Updated the multirepo test to clean up state correctly.

        * java/tests/multirepo/master.ini:
        * java/tests/multirepo/slave.ini:

          Removed these files.

Mon Sep 22 19:40:16 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/dds/dcps_java_optional.mpb:

          Fixed the build dependencies so built-in-topics code builds later.

Fri Sep 19 23:46:47 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * java/tests/dcps_java_tests.lst:
        * java/tests/multirepo:
        * java/tests/multirepo/MultiRepo.idl:
        * java/tests/multirepo/MultiRepoBase.java:
        * java/tests/multirepo/MultiRepoMaster.java:
        * java/tests/multirepo/MultiRepoSlave.java:
        * java/tests/multirepo/MultiRepoWorker.java:
        * java/tests/multirepo/domain1_ids:
        * java/tests/multirepo/domain2_ids:
        * java/tests/multirepo/master.ini:
        * java/tests/multirepo/multirepo_test.mpc:
        * java/tests/multirepo/run_test.pl:
        * java/tests/multirepo/slave.ini:

          Added multi-repo test.

Thu Sep 18 22:57:36 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * MPC/modules/IDL2JNIHelper.pm:

          The dependency between Foo.idl and FooTypeSupport.idl was reversed.

        * java/dds/dcps_java_optional.mpb:

          Fixed whitespace.

Thu Sep 18 16:02:47 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/dds/dcps_java_optional.mpb:

          Added a -I for $TAO_ROOT.

Thu Sep 18 15:15:31 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/dds/dcps_java_optional.mpb:

          Added section for !built_in_topics.

Thu Sep 18 00:10:40 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/dds/dcps_java_optional.mpb:

          Fixed incorrect capitalization (s/BuiltIn/Builtin/g).

        * java/tests/multirepo/multirepo_test.mpc:

          Added workaround for vc71, vc8.

Wed Sep 17 19:39:27 UTC 2008  Steven Stallion  <stallions@ociweb.com>

        * AUTHORS:
        * java/tests/multirepo:
        * java/tests/multirepo/MultiRepo.idl:
        * java/tests/multirepo/multirepo_test.mpc:
        * java/tests/multirepo/multirepo_test_Export.h:

          Added initial idl and for Java multi-repo testing.

Wed Sep 17 18:47:00 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_java.mpb:
        * MPC/config/dcps_java_bits.mpb:
        * bin/dcps_ts.pl:
        * java/build_scripts/JavaTypeSupportImpl.pm:
        * java/dds/dcps_java.mpc:
        * java/dds/dcps_java_optional.mpb:

          Enabled built-in topics for Java applications.

        * MPC/config/idl2jni.mpb:
        * java/tao/tao_java.mpc:
        * java/tests/hello/hello_java_client.mpc:
        * java/tests/messenger/messenger_idl/messenger_idl_test.mpc:

          Updated comments.

        * java/idl2jni/tests/simple/idl2jni_test_simple.mpc:
        * java/idl2jni/tests/simple/simple.mpc:

          Removed this file.  It has been renamed to idl2jni_test_simple.mpc.

Wed Sep 17 17:52:18 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * docs/INSTALL:

          Clarified instructions for Solaris.

        * java/dds/dcps_java.mpc:
        * java/tao/tao_java.mpc:
        * java/tests/hello/hello_java_client.mpc:
        * java/tests/messenger/messenger_idl/messenger_idl_test.mpc:

          Added a prebuild step as a workaround to Visual Studio issues.

Mon Sep 15 22:48:47 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.cpp:

          Use a cross-platform (fixed-size) type for serializing the length.
          Thanks to Stefano Zampieri <szampier at eso dot org> and to
          Friedhelm Wolf <friedhelm_wolf at web dot de> for reporting the
          issue and helping with the fix.

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Replaced the identifier "interface" since it is used as a pseudo-
          keyword on some systems.  Thanks to Stone Jiang
          <2005119 at gmail dot com> for contributing the patch.

Mon Sep 15 21:56:04 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/idl2jni/codegen/im_jni.cpp:
        * java/idl2jni/runtime/idl2jni_runtime.h:

          Eliminated GCC warnings.

Mon Sep 15 18:50:16 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/build_scripts/JavaTypeSupportImpl.pm:

          Include the new idl2jni_jni.h to pick up visibility support for GCC4.

        * java/idl2jni/runtime/i2jrt_TAOObject.cpp:

          Added some error checking, still more to do.

        * java/idl2jni/runtime/idl2jni_runtime.mpc:

          Use OpenDDS's version number instead of TAO's.

Mon Sep 15 14:35:49 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Restore current directory after processing a test list.

Sat Sep 13 17:52:27 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/idl2jni/codegen/im_jni.cpp:

          Remove use of .in() from object refernence sequence's elements.
          Older versions of TAO return a ptr here and not a var-like object.

Fri Sep 12 21:56:05 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * java/idl2jni/runtime/idl2jni_jni.h:

          Sun's jni.h doesn't define JNIEXPORT to anything on GCC v4.  We need
          this to be an actual "export" when hidden visibility is used.

        * java/idl2jni/runtime/idl2jni_runtime.h:
        * java/idl2jni/runtime/idl2jni_BaseJavaPeer.h:
        * java/build_scripts/javah_wrapper.pl:

          Make use of idl2jni_jni.h in committed and generated code.

        * java/idl2jni/codegen/idl_mapping.h:
        * java/idl2jni/codegen/im_jni.cpp:

          Use .in() and duplicate() when copying a TAO objref sequence element
          to Java.  Cleaned up whitespace and formatting.

Thu Sep 11 22:02:27 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS.mwc:

          Removed "cmdline" setting that should have no effect.

        * java:

          Added this entire subtree for the "OpenDDS Java Bindings",
          which allows Java applications to use OpenDDS.  This will not be
          built unless the MPC feature "java" is enabled.  JAVA_HOME and
          JAVA_PLATFORM environment variables must be set.

        * MPC/config/dcps_java.mpb:
        * MPC/config/idl2jni.mpb:
        * MPC/config/java.mpb:
        * MPC/config/optional_jni_check.mpb:
        * MPC/modules:
        * MPC/modules/IDL2JNIHelper.pm:
        * MPC/modules/JAVAHHelper.pm:

          Added MPC files to support Java applications.

        * bin/auto_run_tests.pl:

          Provide a way to run the standard tests (-a) along with those in an
          external file (-l).

        * bin/dcps_tests.lst:

          Fixed slashes in the comment block at the top.

Sun Sep  7 01:07:41 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Updated local_address_str_ for bit transport configuration.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Removed listen_address_str_ initialization since it's not used.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Updated init_transport() signature and updated local_address_str_
          in bit config if local address is configured via command line.

Thu Sep  4 15:10:41 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Removed redundant Builtin Topic transport initialization.

        * tests/DCPS/StringKey/DataReaderListener.cpp:

          Added information to diagnostic messages.

Tue Aug 26 06:32:05 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/StringKey/pub.ini:
        * tests/DCPS/StringKey/sub.ini:

          Added missing files.

Mon Aug 25 17:53:30 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/StringKey/DataReaderListener.h:
        * tests/DCPS/StringKey/DataReaderListener.cpp:
        * tests/DCPS/StringKey/Messenger.idl:
        * tests/DCPS/StringKey/StringKey.mpc:
        * tests/DCPS/StringKey/Writer.h:
        * tests/DCPS/StringKey/Writer.cpp:
        * tests/DCPS/StringKey/domain_ids:
        * tests/DCPS/StringKey/publisher.cpp:
        * tests/DCPS/StringKey/run_test.pl:
        * tests/DCPS/StringKey/subscriber.cpp:
        * tests/DCPS/StringKey/tcp.conf:

          Added new test to detect incorrect String_Manager comparison
          that cause multiple instances created for same string key.

        * bin/dcps_tests.lst:

          Added StringKey test.

Thu Jul 31 16:23:14 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:

          In the open() method, return false on error instead of -1 (true).

Thu Jul 24 23:12:45 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/pub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_reliable_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_mcast.ini:

          Added fixed port to multicast_group_address which is required.

        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.cpp:

          Updated local_address_str with port picked by OS when local_address
          is configured with "localhost:" (or "localhost:0"). This bug makes
          SimpleUdp test fail to establish connection but does not affect
          SimpleMcast Transport since it does not use the local_address
          for connection info exchange via DCPSInfoRepo.

        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:

          Updated local_address_ with port actually using. The local_address_str
          in configuration object is not updated for ReliableMulticast if the
          configuration does not specify the port or use 0. This is fine as it
          does not use the local_address_str for connection info exchange via
          DCPSInfoRepo. It needs more work to get it updated.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          TCP already handled the "localhost:" case but added a minor change.

Tue Jul 22 18:38:51 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/run_test.pl:

          Added ORBDebugLevel to diagnostic options.

Tue Jul 22 18:10:01 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          - Made fully_associated () function remove fully associated
            pub-sub pair from acks map instead of removing all acks
            for a pub. This bug made the DataWriter::fully_associated()
            not called if the ack arrives before DataWriter
            receives add_associations() call from DCPSInfoRepo.

          - Made acked_sub_map_.demarshal() call guarded by lock_.
            This bug may cause access violation when one thread is
            demarshlling ack message and updating ack map while another
            thread is removing acks from ack map.

          - Added remove_ack() to support removal of pub-sub id pair from
            ack map.

        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:

           Overrode remove_ack() to be noop for UDP and MCAST transports since they
           do not require ack from subscriber.

Tue Jul 22 15:55:55 UTC 2008  Mike Martinez  <martinez_m@ociweb>

        * performance-tests/DCPS/InfoRepo_population/run_test.pl:

          Added some selectable diagnostic options.

        * performance-tests/DCPS/Sync/SyncClient_i.h:
        * performance-tests/DCPS/Sync/SyncClient_i.cpp:

          Added lock around access to the notification_ member.

Sun Jul 20 18:16:57 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Made send strategy remove samples when scheduling datalink
          release with a delay. This would avoid problem that the sample
          from previous association could not be delivered.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Made send_delayed_notifications called before changing the
          mode in clear().

        * performance-tests/DCPS/Sync/SyncClient_i.cpp:

          Fixed a warning.

        * tests/DCPS/sub_init_loop/pub.ini:
        * tests/DCPS/sub_init_loop/sub.ini:

          Set the datalink_release_delay=0 to avoid timing issue on
          receiving add_assocition,remove_association and fully_associate
          calls because of delayed datalink release.

Sat Jul 19 18:00:22 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/pub.ini:
        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/pub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_udp.ini:
        * DevGuideExamples/DCPS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * DevGuideExamples/DCPS/Messenger/sub.ini:
        * DevGuideExamples/DCPS/Messenger/sub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/sub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_udp.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub_udp.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/sub.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/sub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/sub_udp.ini:
        * examples/DCPS/IntroductionToOpenDDS/pub_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/sub2_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/sub_udp_conf.ini:
        * examples/DCPS/Messenger_IOGR_Imr/pub.ini:
        * examples/DCPS/Messenger_IOGR_Imr/sub.ini:
        * examples/DCPS/Messenger_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_udp.ini:
        * performance-tests/DCPS/InfoRepo_population/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_udp.ini:
        * performance-tests/DCPS/TransportLatency/pub.ini:
        * performance-tests/DCPS/TransportLatency/pub_mcast.ini:
        * performance-tests/DCPS/TransportLatency/pub_reliable_mcast.ini:
        * performance-tests/DCPS/TransportLatency/pub_udp.ini:
        * performance-tests/DCPS/TransportLatency/sub.ini:
        * performance-tests/DCPS/TransportLatency/sub_mcast.ini:
        * performance-tests/DCPS/TransportLatency/sub_reliable_mcast.ini:
        * performance-tests/DCPS/TransportLatency/sub_udp.ini:
        * tests/DCPS/CorbaSeq/pub.ini:
        * tests/DCPS/CorbaSeq/sub.ini:
        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/NotifyTest/sub.ini:

          Commented the local_address or made it not specify port.
          This is to avoid using fixed port in case the port is
          using by other applications and cause test fail.

        * performance-tests/DCPS/TransportLatency/run_corbaloc_test.pl:
        * performance-tests/DCPS/TransportLatency/run_ns_test.pl:
        * examples/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * examples/DCPS/DistributedContent/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/Federation/run_test.pl:

          These scripts were updated to use PerlACE::random_port() to
          get random port instead of fixed port.

        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:

          Added -x option to pass local_address and configured the
          transport in the code instead of using configuration file.

        * tests/DCPS/Reconnect/run_test.pl:

          Updated to not use configuration file.

        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:

          Removed files as they are not needed.

Thu Jul 17 16:09:54 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/pub.ini:
        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/pub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_udp.ini:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * DevGuideExamples/DCPS/Messenger/sub.ini:
        * DevGuideExamples/DCPS/Messenger/sub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/sub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_udp.ini:

          Removed explicit host and port assignments.

        * examples/DCPS/Messenger_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/sub.ini:

          Removed explicit host and port assignments.

        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_udp.ini:
        * performance-tests/DCPS/InfoRepo_population/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_udp.ini:

          Removed explicit host and port assignments.

        * tests/DCPS/BuiltInTopic/run_test.pl:

          Extended startup delays.

        * tests/DCPS/CompatibilityTest/run_test.pl:

          Additional diagnostic information added.  Increased startup and
          operational delays.

        * tests/DCPS/CorbaSeq/pub.ini:
        * tests/DCPS/CorbaSeq/sub.ini:

          Removed explicit host and port assignments.

        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/NotifyTest/sub.ini:

          Removed explicit host and port assignments.

        * tests/transport/mcast_simple_n/run_test.pl:

          Extended startup delays.

Wed Jul 16 23:47:17 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/Subscriber.cpp:

          Merged in following Changes made in DDS-1.1.1 branch.

            Wed Jul 16 23:43:27 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    * tests/DCPS/Federation/Publisher.cpp:
                    * tests/DCPS/Federation/Subscriber.cpp:

                      Made TheServiceParticipant->shutdown called after
                      TheTransportFactory->release to fix crash due to nil orb
                      during transport release.


Wed Jul 16 22:34:10 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * DevGuideExamples/DCPS/Messenger/pub.ini:
        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub.ini:
        * examples/DCPS/Messenger_IOGR_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/TransportLatency/pub.ini:
        * tests/DCPS/BuiltInTopicTest/pub.ini:
        * tests/DCPS/Deadline/pub.ini:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/Lifespan/pub.ini:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/Partition/pub.ini:
        * tests/DCPS/PersistentDurability/pub.ini:
        * tests/DCPS/Prst_delayed_subscriber/pub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/SetQosDeadline/pub.ini:
        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/TransientDurability/pub.ini:
        * tests/DCPS/TransientLocalTest/pub.ini:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Merged in following Changes made in DDS-1.1.1 branch.

              Wed Jul 16 21:16:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

            * dds/DCPS/transport/framework/DataLink.h:
            * dds/DCPS/transport/framework/DataLink.cpp:
            * dds/DCPS/transport/framework/TransportConfiguration.h:
            * dds/DCPS/transport/framework/TransportConfiguration.inl:
            * dds/DCPS/transport/framework/TransportConfiguration.cpp:
            * dds/DCPS/transport/framework/TransportImpl.cpp:

              Supported configurable delay for datalink release after no associations.
              This is to fix disconnect problem happened when removing and adding
              association related to same datalink during short period. The new connection
              is established before remove_association call which results in new connection
              been disconnect.
              Removed keep_link support which can be replaced with long
              datalink_release_delay value.

            * dds/InfoRepo/DCPS_IR_Publication.h:
            * dds/InfoRepo/DCPS_IR_Publication.cpp:
            * dds/InfoRepo/DCPS_IR_Subscription.h:
            * dds/InfoRepo/DCPS_IR_Subscription.cpp:

              Added "notify_both_side" parameter to remove_associated_publication/subscription
              methods to allow remove_associations() invocation on both datareader
              and datawriter upon qos change. This intends to make the remove_associations
              call earlier than add_associations to avoid same datalink removing/adding timing
              issue.

            * DevGuideExamples/DCPS/Messenger/pub.ini:
            * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
            * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub.ini:
            * examples/DCPS/Messenger_IOGR_Imr/pub.ini:
            * examples/DCPS/Messenger_Imr/pub.ini:
            * performance-tests/DCPS/InfoRepo_population/pub.ini:
            * performance-tests/DCPS/InfoRepo_population/pub2.ini:
            * performance-tests/DCPS/TransportLatency/pub.ini:
            * tests/DCPS/BuiltInTopicTest/pub.ini:
            * tests/DCPS/Deadline/pub.ini:
            * tests/DCPS/Lifespan/pub.ini:
            * tests/DCPS/NotifyTest/pub.ini:
            * tests/DCPS/Partition/pub.ini:
            * tests/DCPS/PersistentDurability/pub.ini:
            * tests/DCPS/Prst_delayed_subscriber/pub.ini:
            * tests/DCPS/Reconnect/pub.ini:
            * tests/DCPS/Reconnect/sub.ini:
            * tests/DCPS/SetQosDeadline/pub.ini:
            * tests/DCPS/SetQosPartition/pub.ini:
            * tests/DCPS/TransientDurability/pub.ini:
            * tests/DCPS/TransientLocalTest/pub.ini:

              Replaced keep_link with datalink_release_delay. If the
              application requires to keep the datalink alive for longer
              time, it could configure datalink_release_delay to a big
              value.

            * tests/DCPS/FooTest3_0/SubDriver.cpp:
            * tests/DCPS/FooTest3_1/SubDriver.cpp:
            * tests/DCPS/FooTest3_2/SubDriver.cpp:
            * tests/DCPS/FooTest4/main.cpp:
            * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
            * tests/DCPS/MultiRepoTest/TestSystem.cpp:
            * tests/transport/mcast_simple/PubDriver.cpp:
            * tests/transport/mcast_simple/SubDriver.cpp:
            * tests/transport/mcast_simple_n/PubDriver.cpp:
            * tests/transport/mcast_simple_n/SubDriver.cpp:
            * tests/transport/simple/PubDriver.cpp:
            * tests/transport/simple/SubDriver.cpp:
            * tests/transport/simple_bp/PubDriver.cpp:
            * tests/transport/simple_bp/SubDriver.cpp:
            * tests/transport/simple_bp_rm/PubDriver.cpp:
            * tests/transport/simple_bp_rm/SubDriver.cpp:
            * tests/transport/simple_n/PubDriver.cpp:
            * tests/transport/simple_n/SubDriver.cpp:
            * tests/transport/udp_simple/PubDriver.cpp:
            * tests/transport/udp_simple/SubDriver.cpp:
            * tests/transport/udp_simple_n/PubDriver.cpp:
            * tests/transport/udp_simple_n/SubDriver.cpp:

              The changes are to trigger the TheServiceParticipant singleton
              created and has ORB created or provided so it can be accessed
              during transport shutdown. The TheServiceParticipant->shutdown
              should always be called after TheTransportFactory->release.

Tue Jul 15 22:26:55 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_ts.pl:

          Added --extension which is a plugin mechanism for dcps_ts.pl.

Tue Jul 15 13:57:08 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:

          Changed to use actual object to call methods in error handling
          section.

Sun Jul 13 19:10:57 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:

          Removed Stack_Trace header which is not needed.

Sat Jul 12 20:52:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:

          More fixes from DDS-1.1.1 branch.

            Sat Jul 12 20:30:01 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    * dds/DCPS/DataReaderImpl.h:
                    * dds/DCPS/DataReaderImpl.cpp:

                      Added overloaded notify_subscription_lost() function passing with
                      instance handles instead of writer ids and use it in
                      remove_association(). This would fix a warning in
                      remove_associations() that lookup cached BIT data failed.

                    * dds/DCPS/DataWriterImpl.h:
                    * dds/DCPS/DataWriterImpl.cpp:

                      Made on_publication_lost() called once in notify_publication_lost
                      instead of for every lost publication.

            Sat Jul 12 08:18:54 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    * dds/InfoRepo/DCPS_IR_Publication.h:
                    * dds/InfoRepo/DCPS_IR_Publication.cpp:
                    * dds/InfoRepo/DCPS_IR_Subscription.h:
                    * dds/InfoRepo/DCPS_IR_Subscription.cpp:
                    * dds/InfoRepo/DCPS_IR_Topic.cpp:
                    * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:

                      - Corrected ACE_Unbounded_Set iterator use to fix access
                        violation.
                      - Made remove_association always be called before
                        add_association when re-evaluating the associations.
                        Otherwise, the new association has trouble to connect
                        when the removed associations and added association using
                        the same datalink. This would fix SetQoSPartition test
                        failure.

        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/SetQosPartition/sub.ini:

          Added missing files.

Fri Jul 11 22:45:25 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicImpl.cpp:
        * dds/DdsDcpsInfo.idl:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/DCPS_Utils.h:
        * dds/InfoRepo/DCPS_Utils.cpp:
        * tests/DCPS/SetQosDeadline:
        * tests/DCPS/SetQosDeadline/DataReaderListener.h:
        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosDeadline/Messenger.idl:
        * tests/DCPS/SetQosDeadline/README:
        * tests/DCPS/SetQosDeadline/SetQosDeadline.mpc:
        * tests/DCPS/SetQosDeadline/Writer.h:
        * tests/DCPS/SetQosDeadline/Writer.cpp:
        * tests/DCPS/SetQosDeadline/domain_ids:
        * tests/DCPS/SetQosDeadline/pub.ini:
        * tests/DCPS/SetQosDeadline/publisher.cpp:
        * tests/DCPS/SetQosDeadline/run_test.pl:
        * tests/DCPS/SetQosDeadline/sub.ini:
        * tests/DCPS/SetQosDeadline/subscriber.cpp:
        * tests/DCPS/SetQosDeadline/tcp.conf:
        * tests/DCPS/SetQosPartition:
        * tests/DCPS/SetQosPartition/DataReaderListener.h:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/Messenger.idl:
        * tests/DCPS/SetQosPartition/README:
        * tests/DCPS/SetQosPartition/SetQosPartition.mpc:
        * tests/DCPS/SetQosPartition/Writer.h:
        * tests/DCPS/SetQosPartition/Writer.cpp:
        * tests/DCPS/SetQosPartition/domain_ids:
        * tests/DCPS/SetQosPartition/publisher.cpp:
        * tests/DCPS/SetQosPartition/run_test.pl:
        * tests/DCPS/SetQosPartition/subscriber.cpp:
        * tests/DCPS/SetQosPartition/tcp.conf:


          Merged in changes from RT12349 branch(renamed to DDS-1.1.1 branch).

            Fri Jul 11 22:34:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    * tests/DCPS/SetQosDeadline/pub.ini:
                    * tests/DCPS/SetQosDeadline/sub.ini:
                    * tests/DCPS/SetQosPartition/pub.ini:
                    * tests/DCPS/SetQosPartition/sub.ini:

                      Added files missed in previous commit.

            Fri Jul 11 16:23:22 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    * dds/InfoRepo/DCPSInfo_i.cpp:
                    * dds/InfoRepo/DCPS_IR_Publication.cpp:
                    * dds/InfoRepo/DCPS_IR_Subscription.cpp:
                    * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
                    * dds/InfoRepo/DCPS_Utils.cpp:
                    * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
                    * tests/DCPS/SetQosPartition/DataReaderListener.cpp:

                      Fixed warnings.

            Fri Jul 11 07:46:02 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    * bin/dcps_tests.lst:

                      Added deadline and partition qos change tests.

            Fri Jul 11 07:14:41 UTC 2008  Yan Dai  <dai_y@ociweb.com>

                    These changes made DCPSInfoRepo re-evaluate the compatibility and
                    associations when QoS change is made. The QoS RxO and changeable
                    property determine whether re-evaluation is needed for a specific
                    QoS.

                    * dds/DCPS/DataWriterImpl.cpp:
                    * dds/DCPS/DomainParticipantImpl.cpp:
                    * dds/DCPS/PublisherImpl.cpp:
                    * dds/DCPS/SubscriberImpl.cpp:
                    * dds/DCPS/TopicImpl.cpp:

                      Verify QoS update return from DCPSInfoRepo. If it's incompatiable
                      (return 0) then set_qos() return RETCODE_ERROR.


                    * dds/DdsDcpsInfo.idl:

                      Made update_<entity>_qos function have return value to indicate if the
                      provided QoS passes compatibility checking.

                    * dds/InfoRepo/DCPSInfo_i.h:
                    * dds/InfoRepo/DCPSInfo_i.cpp:
                    * dds/InfoRepo/DCPS_IR_Participant.h:
                    * dds/InfoRepo/DCPS_IR_Participant.cpp:
                    * dds/InfoRepo/DCPS_IR_Publication.h:
                    * dds/InfoRepo/DCPS_IR_Publication.cpp:
                    * dds/InfoRepo/DCPS_IR_Subscription.h:
                    * dds/InfoRepo/DCPS_IR_Subscription.cpp:
                    * dds/InfoRepo/DCPS_IR_Topic.h:
                    * dds/InfoRepo/DCPS_IR_Topic.cpp:
                    * dds/InfoRepo/DCPS_IR_Topic_Description.h:
                    * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
                    * dds/InfoRepo/DCPS_Utils.h:
                    * dds/InfoRepo/DCPS_Utils.cpp:

                      Supported re-evaluation of the compatibility and association of
                      changed QoS. If changed QoS is not compatible then it will return
                      error code to set_qos and the QoS will not be changed(e.g. deadline).
                      If the changed QoS is compatible or do not need be compatible
                      (e.g. partition) and affect association, then it may result in
                      removing existing associations or adding new associations.

                    * tests/DCPS/SetQosDeadline/DataReaderListener.h:
                    * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
                    * tests/DCPS/SetQosDeadline/Messenger.idl:
                    * tests/DCPS/SetQosDeadline/README:
                    * tests/DCPS/SetQosDeadline/SetQosDeadline.mpc:
                    * tests/DCPS/SetQosDeadline/Writer.h:
                    * tests/DCPS/SetQosDeadline/Writer.cpp:
                    * tests/DCPS/SetQosDeadline/domain_ids:
                    * tests/DCPS/SetQosDeadline/publisher.cpp:
                    * tests/DCPS/SetQosDeadline/run_test.pl:
                    * tests/DCPS/SetQosDeadline/subscriber.cpp:
                    * tests/DCPS/SetQosDeadline/tcp.conf:

                      Added deadline QoS change test to test if compatibility and association
                      are affected by the change.

                    * tests/DCPS/SetQosPartition/DataReaderListener.h:
                    * tests/DCPS/SetQosPartition/DataReaderListener.cpp:
                    * tests/DCPS/SetQosPartition/Messenger.idl:
                    * tests/DCPS/SetQosPartition/README:
                    * tests/DCPS/SetQosPartition/SetQosPartition.mpc:
                    * tests/DCPS/SetQosPartition/Writer.h:
                    * tests/DCPS/SetQosPartition/Writer.cpp:
                    * tests/DCPS/SetQosPartition/domain_ids:
                    * tests/DCPS/SetQosPartition/publisher.cpp:
                    * tests/DCPS/SetQosPartition/run_test.pl:
                    * tests/DCPS/SetQosPartition/subscriber.cpp:
                    * tests/DCPS/SetQosPartition/tcp.conf:

                      Added patition QoS change test to test if compatibility and association
                      are affected by the change.


Wed Jul 09 20:55:52 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/transport/reliable_multicast/run_test.pl:

          Added perl script to run the reliable_multicast test because it
          can hang indefinitely.

Tue Jul 08 22:06:45 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:

          Changed test to use PerlACE::waitforfileoutput_timed method.

Tue Jul 08 18:56:19 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Lifespan/run_test.pl:
        * tests/DCPS/Partition/run_test.pl:
        * tests/DCPS/TransientDurability/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:

          Changed tests to use the PerlACE::waitforfileoutput_timed
          method.

Thu Jul 03 18:40:52 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * tests/DCPS/Compiler/idl_test3_lib/FooDef.idl:

          Removed anonymous array declarations from structs.

Thu Jul 03 17:57:12 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * dds/DdsDcpsInfrastructure.idl:
        * examples/DCPS/DistributedContent/FileInfo.idl:
        * performance-tests/DCPS/TCPProfilingTest/testMessage.idl:
        * performance-tests/DCPS/TypeNoKeyBounded/PTDef.idl:
        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * tests/DCPS/FooType5/FooDef.idl:

          Removed anonymous types from the idl structs.

Thu Jul  3 16:20:53 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed a warning.

Thu Jul  3 00:33:05 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Reconnect/README:

          Updated the patch for reproduce and verify RT11348 fix.

Thu Jul  3 00:28:51 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        Fixed a race condition described in RT11348. The commit
        at "Fri Jun 27 19:42:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>"
        broke some tests. This time the fix was fully tested.

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:

          Added pub_map_releasing_ and sub_map_releasing_ to save the snapshot
          of associations in datalink at the time the link is declared for releasing
          resource due to connection problem. The DataLinkCleanupTask will remove the
          associations based on the snapshot. This would fix the problem that new
          associations are removed while removing the old associations due to a failed
          connection. The problem occurs when actual removal is performed with a delay
          after the datalink lost its connection.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved the datalink cleanup operations in DataLinkCleanupTask::execute to a
          new function (clear_associations()) in DataLink class and removed TransportImpl
          reference in DataLinkCleanupTask as it's not needed.

        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:

          Added operator= and clear functions to support map copy and clear.

        * tests/DCPS/Reconnect/README:

          Added description of dl_clean test case to reproduce the bug and verify the fix.
          The dl_clean test can not be run in an automated nightly build since it requires
          a special patch to prove the fix.

        * tests/DCPS/Reconnect/run_test.pl:

          Added dl_clean test case.

Wed Jul  2 19:36:12 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DDS_TAO.mwc:

          TAO's Svc_Utils is now used by DDS.

Tue Jul  1 16:45:17 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * tests/DCPS/Reconnect/README:
        * tests/DCPS/Reconnect/run_test.pl:

          Rolled back the "Fri Jun 27 19:42:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>"
          changes as it broke some tests. Will fix RT11348 later.

Mon Jun 30 17:30:08 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/dcps_ts_defaults.mpb:

          Modified to use the new 'automatic_in' and 'automatic_out' custom
          settings.

        * DevGuideExamples/DCPS/Messenger/Messenger.mpc:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/Messenger_ZeroCopy.mpc:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.mpc:
        * dds/DdsDcps.mpc:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/dcps_bits.mpb:
        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mpc:
        * examples/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/TransportLatency/TransportLatency.mpc:
        * performance-tests/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * tests/DCPS/CorbaSeq/CorbaSeq.mpc:
        * tests/DCPS/Deadline/Deadline.mpc:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/FooType3/DcpsFooType3.mpc:
        * tests/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * tests/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * tests/DCPS/FooType4/DcpsFooType4.mpc:
        * tests/DCPS/FooType5/DcpsFooType5.mpc:
        * tests/DCPS/Lifespan/Lifespan.mpc:
        * tests/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * tests/DCPS/NotifyTest/NotifyTest.mpc:
        * tests/DCPS/Partition/Partition.mpc:
        * tests/DCPS/PersistentDurability/PersistentDurability.mpc:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/TransientDurability/TransientDurability.mpc:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:

          Simplified these files due to the above base project change.

Sat Jun 28 20:41:45 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:

          Fixed MPC files that were missing the *TypeSupportImpl.cpp file after
          yesterday's scripted changes.  A recent change to MPC itself will
          allow us to not have to specify "Source_Files" in most cases, but the
          dcps_ts.pl custom type is not yet taking advantage of this new MPC
          feature.

Fri Jun 27 22:14:26 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * examples/DCPS/IntroductionToOpenDDS/run_test.pl:

          Added Perl script to execute the example similar to the bat
          files.

Fri Jun 27 19:42:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        Fixed a race condition described in RT11348.

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:

          Added pub_map_releasing_ and sub_map_releasing_ to save the snapshot
          of associations in datalink at the time the link is declared for releasing
          resource due to connection problem. The DataLinkCleanupTask will remove the
          associations based on the snapshot. This would fix race condition that the new
          associations added to the same link during the period from the datalink
          is declared for releasing to the removal is performed are removed.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved the datalink cleanup operations in DataLinkCleanupTask::execute to a
          new function (clear_associations()) in DataLink class and removed TransportImpl
          reference in DataLinkCleanupTask as it's not needed.

        * tests/DCPS/Reconnect/README:

          Added description of dl_clean test case to reproduce the bug and verify the fix.
          The dl_clean test can not be run in an automated nightly build since it requires
          a special patch to prove the fix.

        * tests/DCPS/Reconnect/run_test.pl:

          Added dl_clean test case.

Fri Jun 27 19:14:01 UTC 2008  Steve Totten  <totten_s@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/run_test.pl:
          Corrected spelling of -DCPSTransportDebugLevel option.

        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
          Updated usage message to list all possible arguments
          for the -t (transport type) option.

Fri Jun 27 14:04:41 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/dcps_reliable_multicast.mpb:

          Modified to inherit from dcps (since the library project does the
          same).

        * MPC/config/dcpsexe_with_reliable_multicast.mpb:

          Removed the addition of ReliableMulticast to libs and after, since
          it inherits from dcps_reliable_multicast.

        * tests/transport/reliable_multicast/reliable_multicast.mpc:

          Modified to inherit from dcps_reliable_multicast instead of adding
          the ReliableMulticast library manually.

        * MPC/config/dcps_ts_defaults.mpb:

          Modified to indicate a source, header and generic output
          extension for the change below.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * bin/DCPS/IDLTemplate.pm:
        * bin/dcps_ts.pl:

          Modified this script to create a single idl, header, and source
          file no matter how many types are contained within the input idl
          file.  This allows the output file names to be based upon the
          input file name (instead of the types found in the idl file).

        * bin/update_dcps.pl:

          This new script updates MPC and C++ source files to use the new
          dcps_ts.pl output file names.  It only truly works if you allow it
          to work on the directory so that it can edit the MPC files and
          with knowlege gained from that, edit the C++ source files.

        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DCPS/Messenger/Messenger.mpc:
        * DevGuideExamples/DCPS/Messenger/StackDataReaderListener.cpp:
        * DevGuideExamples/DCPS/Messenger/Writer.cpp:
        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/stack_subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/Messenger_ZeroCopy.mpc:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/Writer.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/subscriber.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/dcps_bits.mpb:
        * examples/DCPS/DistributedContent/AbstractionLayer.h:
        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * examples/DCPS/DistributedContent/FileInfoListener.cpp:
        * examples/DCPS/IntroductionToOpenDDS/ExchangeEventDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/QuoteDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mpc:
        * examples/DCPS/IntroductionToOpenDDS/publisher.cpp:
        * examples/DCPS/IntroductionToOpenDDS/subscriber.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * examples/DCPS/Messenger_IOGR_Imr/Writer.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * examples/DCPS/Messenger_Imr/DataReaderListener.cpp:
        * examples/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * examples/DCPS/Messenger_Imr/Writer.cpp:
        * examples/DCPS/Messenger_Imr/publisher.cpp:
        * examples/DCPS/Messenger_Imr/subscriber.cpp:
        * performance-tests/DCPS/InfoRepo_population/DataReaderListener.cpp:
        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/InfoRepo_population/Writer.cpp:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:
        * performance-tests/DCPS/TCPProfilingTest/publisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:
        * performance-tests/DCPS/TransportLatency/DataReaderListener.cpp:
        * performance-tests/DCPS/TransportLatency/TransportLatency.mpc:
        * performance-tests/DCPS/TransportLatency/Writer.cpp:
        * performance-tests/DCPS/TransportLatency/publisher.cpp:
        * performance-tests/DCPS/TransportLatency/subscriber.cpp:
        * performance-tests/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.cpp:
        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/CompatibilityTest/DataReaderListener.cpp:
        * tests/DCPS/CompatibilityTest/Writer.cpp:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:
        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * tests/DCPS/CorbaSeq/CorbaSeq.mpc:
        * tests/DCPS/CorbaSeq/DataReaderListener.cpp:
        * tests/DCPS/CorbaSeq/Writer.cpp:
        * tests/DCPS/CorbaSeq/publisher.cpp:
        * tests/DCPS/CorbaSeq/subscriber.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/Deadline/DataReaderListener.cpp:
        * tests/DCPS/Deadline/Deadline.mpc:
        * tests/DCPS/Deadline/Writer.h:
        * tests/DCPS/Deadline/publisher.cpp:
        * tests/DCPS/Deadline/subscriber.cpp:
        * tests/DCPS/Federation/DataReaderListener.cpp:
        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/Subscriber.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.h:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.h:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.h:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/FooType2/FooTypeSupportImpl.cpp:
        * tests/DCPS/FooType3/DcpsFooType3.mpc:
        * tests/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * tests/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * tests/DCPS/FooType4/DcpsFooType4.mpc:
        * tests/DCPS/FooType5/DcpsFooType5.mpc:
        * tests/DCPS/Lifespan/DataReaderListener.cpp:
        * tests/DCPS/Lifespan/Lifespan.mpc:
        * tests/DCPS/Lifespan/Writer.h:
        * tests/DCPS/Lifespan/publisher.cpp:
        * tests/DCPS/Lifespan/subscriber.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTimeout/Writer.cpp:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiRepoTest/ForwardingListener.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * tests/DCPS/NotifyTest/DataReaderListener.cpp:
        * tests/DCPS/NotifyTest/NotifyTest.mpc:
        * tests/DCPS/NotifyTest/Writer.cpp:
        * tests/DCPS/NotifyTest/publisher.cpp:
        * tests/DCPS/NotifyTest/subscriber.cpp:
        * tests/DCPS/Partition/DataReaderListener.cpp:
        * tests/DCPS/Partition/Partition.mpc:
        * tests/DCPS/Partition/Publisher.cpp:
        * tests/DCPS/Partition/Subscriber.cpp:
        * tests/DCPS/PersistentDurability/DataReaderListener.cpp:
        * tests/DCPS/PersistentDurability/PersistentDurability.mpc:
        * tests/DCPS/PersistentDurability/Writer.h:
        * tests/DCPS/PersistentDurability/publisher.cpp:
        * tests/DCPS/PersistentDurability/subscriber.cpp:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.cpp:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Prst_delayed_subscriber/Writer.cpp:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/TransientDurability/DataReaderListener.cpp:
        * tests/DCPS/TransientDurability/TransientDurability.mpc:
        * tests/DCPS/TransientDurability/Writer.h:
        * tests/DCPS/TransientDurability/publisher.cpp:
        * tests/DCPS/TransientDurability/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/DataReaderListener.cpp:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/TransientLocalTest/Writer.h:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:
        * tests/DCPS/sub_init_loop/Writer.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:
        * tests/DCPS/sub_init_loop/subscriber.cpp:

          Updated to use the new dcps_ts.pl output file names.

Wed Jun 25 18:39:10 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:

          - Added pending reader list to keep track the pending reader so it can be
            distinguished from fully associated reader and also added code to manage
            state transition. This would fix some errors if remove_associations()
            is called before fully_associated() call.
          - Changed reader_ to be std::set<RepoId> instead of ReaderIdSeq to simplify
            implementation for insertion and deletion.

        * tests/DCPS/sub_init_loop/subscriber.cpp:

          Removed the delay between delete_datareader and create_datareader, but
          still keep the delay between create_datareader and delete_datareader
          which is needed to avoid problem that datareader removal in DCPSInfoRepo
          cause bit lookup failure upon fully association.

Fri Jun 20 15:58:04 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Updated for DDS 1.2.

Fri Jun 20 15:11:13 UTC 2008  Jonathan S. Pollack  <pollackj@ociweb.com>

        * OpenDDS version 1.1 released.

Fri Jun 20 05:44:33 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * README:

          Added note for
          $DDS_ROOT/tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl
          test failure due to TAO version.

Thu Jun 19 23:01:42 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * README:

          Removed a few limitations.

Thu Jun 19 21:57:09 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * README:

          Added USER_DATA, TOPIC_DATA and GROUP_DATA to minimum profile.

Thu Jun 19 21:21:28 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * README:

          Updated QoS related notes.

Thu Jun 19 21:06:42 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * README:

          Corrected QNX gcc version.

Thu Jun 19 20:55:25 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * README:

          Updated supported compiler.

Thu Jun 19 20:13:14 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * README:

          Updated test platforms.

Thu Jun 19 19:54:17 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * README:

          Updated features to note partial progress towards version 1.2
          of the DDS specification and added Ubuntu 8.04 platform.

Thu Jun 19 19:22:35 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * README:

          Updated TAO version requirements.

Thu Jun 19 19:04:35 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * README:

          Updated some grammar and clarified several points.

Thu Jun 19 15:32:57 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * DDS_release_notes.txt:

          Made some quick grammatical fixes.

Wed Jun 18 23:23:46 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * DDS_release_notes.txt:

          Updated release notes.

Wed Jun 18 20:47:43 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:

          Corrected the class name passed to ACE_DES_FREE macro.

Wed Jun 18 20:37:23 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DurabilityArray.h:
        * dds/DCPS/DurabilityQueue.h:

          MS VC++ requires an explicitly defined destructor for this
          particular use case.  Added one.

Wed Jun 18 19:08:38 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/DataDurabilityCache.h:

          Reset allocator address stored in persistent objects retrieved
          from the backing store by using new DurabilityArray and
          DurabilityQueue classes.  Addresses a crash on process exit when
          using PERSISTENT DURABILITY.

          Fixed Linux build error.  The MAP_TYPE macro is already defined
          by the <sys/mman.h> system header.

          Reset the underlying queue after retrieving data so that the
          data is not duplicated if the DataWriter ends up reinserting the
          same data into the durability cache.

        * dds/DCPS/DurabilityArray.h:
        * dds/DCPS/DurabilityQueue.h:

          New source files containing subclasses of ACE_Array_Base<> and
          ACE_Unbounded_Queue<>, respectively, that provide a means to
          reset the allocator.  Needed to properly support persistent
          durable data that is accessed between different process runs.

        * tests/DCPS/PersistentDurability/publisher.cpp:
        * tests/DCPS/PersistentDurability/subscriber.cpp:
        * tests/DCPS/TransientDurability/publisher.cpp:
        * tests/DCPS/TransientDurability/subscriber.cpp:

          Fixed memory leaks by assigning newly allocated type support
          servant to the appropriate "_var" type.

Wed Jun 18 14:05:20 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:

          Re-applied one Borland fix and extended it to the map type as well
          as the list.

Wed Jun 18 08:00:17 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:

          Added missing calls to ACE_Allocator::bind()/find().  They are
          necessary for retrieving persistent data from the backing
          store.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:

          Take into account LIFESPAN QoS policy value when reenqueuing
          data for TRANSIENT_LOCAL, TRANSIENT and PERSISTENT DURABILITY
          enabled writes.

        * tests/DCPS/PersistentDurability/run_test.pl:

          Unlink the durability backing store file before and after
          running the test so that stale data does not skew the results.

Tue Jun 17 23:59:42 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/DataDurabilityCache.h:

          Use an ACE_Hash_Map_With_Allocator_T<> map instead of the "_Ex"
          version just in case the allocator address changes between
          process runs.

          Allocate the map itself with the allocator so that its state
          (size, etc) is reflected in the backing store in the persistent
          case.

Tue Jun 17 22:22:25 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/PersistentDurability/Writer.cpp:
        * tests/DCPS/PersistentDurability/publisher.cpp:

          Applied TransientDurability test changes below to the
          PersistentDurability test.

Tue Jun 17 22:11:56 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/TransientDurability/Writer.cpp
          (num_instances_per_writer):

          Increased this constant from 1 to 2.  Increases concurrency in
          the test, and addresses subscriber waiting indefinitely for data
          to arrive.

        * tests/DCPS/TransientDurability/publisher.cpp:

          Increased publication match loop delay and iterations.
          Addresses a problem where the publisher would end prior to a
          subscription match.

Tue Jun 17 21:55:25 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp (fully_associated):

          Resend data for TRANSIENT and PERSISTENT durability, just like
          what is done for TRANSIENT_LOCAL.

Tue Jun 17 20:34:28 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * bin/dcps_tests.lst:

          Run TransientDurability and PersistentDurability tests in the
          nightly builds.

Tue Jun 17 18:39:13 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/Partition/Partition_Table.h (PartitionConfig):

          Added constructor to silence g++ 3.2 and Borland C++ warnings.

Tue Jun 17 16:05:57 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          Fixed a warning for Borland.

Tue Jun 17 07:41:11 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:

          Addressed crashes that were introduced during the memory
          management rewrite.

        * dds/DCPS/DataWriterImpl.cpp (enable):

          Retrieve data from the durability cache after the DataWriter is
          completely enabled.  Addresses a publication ID mismatch error.

        * tests/DCPS/PersistentDurability/publisher.cpp:
        * tests/DCPS/TransientDurability/publisher.cpp:

          Set the DURABILITY_SERVICE DataWriter QoS policy history_kind
          value to ::DDS::KEEP_ALL_HISTORY_QOS so that all samples are
          persisted, instead of the default (one).

Tue Jun 17 04:49:17 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:

          Updated some comments to avoid referring to unsent data.

        * dds/DCPS/PublisherImpl.cpp (delete_datawriter):

          Initiate durability related data caching prior to unregistering
          all samples.  Addresses problem where sample list was of zero
          size by the time durability caching occurred.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/WriteDataContainer.cpp (persist_data):
        * dds/DCPS/WriteDataContainer.h (persist_data):

          New method explicitly called by publisher servant to trigger
          durability related caching, as opposed to implicit caching at
          WriteDataContainer destruction-time.

Mon Jun 16 21:22:24 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:

          Added one more #include needed by Borland.

Mon Jun 16 08:47:45 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/DataDurabilityCache.h:

          Include domain ID as part of durability cache map key.  This
          must now be done explicitly since the durability cache resides
          within the Service_Participant, meaning we no longer get
          domain-specificness for free.

        * dds/DCPS/DataWriterImpl.cpp (enable):

          Get the data durability cache from the Service_Participant since
          it no longer resides in the publisher servant.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Moved data durability caches to the Service_Participant to
          better support the spec requirements.

        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:

          Added DomainId_t member.  Data durability caching operations now
          require the domain ID.

Sun Jun 15 22:29:02 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * tests/transport/dds_comparative/pub_main.cpp:
        * tests/transport/dds_comparative/sub_main.cpp:

          Added a few more #includes needed by Borland.

Sat Jun 14 21:43:49 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * performance-tests/DCPS/dummyTCP/DummyTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Added #includes that Borland requires, in just a few cases gcc332
          doesn't accept these, so they have been placed within #ifdef guards
          for __BORLANDC__.

        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mpc:

          Projects that create executables should not set any "dynamicflags".

        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:

          Added .in() in two instances where vars are passed to is_nil().

Fri Jun 13 23:00:50 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:

          Moved TransportImpl reference release from just right before exit
          from main to before transport release. This intended to fix the
          access violation during shutdown in some optimize build on linux.
          I think TransportImpl object cleanup may reference some resouces
          that already released.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/ViewState/main.cpp:
        * tests/DCPS/ZeroCopyRead/main.cpp:

          Made similar changes.

Fri Jun 13 22:04:01 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:

          Added some #includes that seem to be needed by Borland and have no
          ill effects on either VC 8 or GCC 4.1.1.

Fri Jun 13 20:51:03 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/ViewState/main.cpp:

          Fixed a timing issue in the test. The test case 2 should wait until
          dispose and data sample(from write() after dispose) are both received
          before verifying view state change in multiple generations. Current
          test just wait for new sample which may be just dispose sample. Now
          the dispose sample was read so the view state be NOT_NEW and sample
          state be READ before write() call and we can verify the new sample
          changed the states.

Fri Jun 13 16:31:33 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * 14a_README:

          Fixed a typo.

        * bin/DCPS/CPPTemplate.pm:

          Added a "using" statement which may help the Borland compiler.

        * examples/DCPS/IntroductionToOpenDDS/StockQuoterCommon_Export.h:

          Re-generated using the latest generate_export_file.pl script.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * performance-tests/DCPS/InfoRepo_population/SyncServer.cpp:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/Sync/SyncClient_i.cpp:
        * performance-tests/DCPS/Sync/SyncServer.cpp:
        * performance-tests/DCPS/Sync/SyncServer_i.cpp:

          Throw specs for the method definition need to use fully-qualified
          class names for exception classes nested within the method's class.

Thu Jun 12 22:35:11 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/Lifespan/Writer.cpp (write):

          Added a write() call after the bogus write_w_timestamp() calls
          to make sure valid data is demarshalled correctly after expired
          data is rejected.

        * tests/DCPS/Lifespan/subscriber.cpp (main):

          Verify that exactly one sample was received.  The first five
          with timestamps in the past should not have been read.

Thu Jun 12 22:13:29 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/PersistentDurability/publisher.cpp:
        * tests/DCPS/PersistentDurability/run_test.pl:
        * tests/DCPS/PersistentDurability/Writer.cpp:
        * tests/DCPS/PersistentDurability/Writer.h:

          Applied fixes from transient durability test.

        * tests/DCPS/TransientDurability/run_test.pl:

          Corrected method waiting for output into the file.

Thu Jun 12 22:06:42 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/TransientDurability/Writer.cpp (svc):

          Removed nil listener check that prevented writing from
          occuring.

Thu Jun 12 21:46:21 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/TransientDurability/Writer.cpp:
        * tests/DCPS/TransientDurability/Writer.h:
        * tests/DCPS/TransientDurability/publisher.cpp:

          Provide a means to explicitly control when to wait() for threads
          to exit so that we know exactly when data durability caching has
          completed.  Thanks to Trevor Fields for pointing out the
          problem.

Thu Jun 12 17:33:31 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/PersistentDurability/DataReaderListener.cpp:
        * tests/DCPS/PersistentDurability/DataReaderListener.h:
        * tests/DCPS/PersistentDurability/DataWriterListenerImpl.cpp:
        * tests/DCPS/PersistentDurability/DataWriterListenerImpl.h:
        * tests/DCPS/PersistentDurability/domain_ids:
        * tests/DCPS/PersistentDurability/Messenger.idl:
        * tests/DCPS/PersistentDurability/PersistentDurability.mpc:
        * tests/DCPS/PersistentDurability/pub.ini:
        * tests/DCPS/PersistentDurability/publisher.cpp:
        * tests/DCPS/PersistentDurability/README:
        * tests/DCPS/PersistentDurability/run_test.pl:
        * tests/DCPS/PersistentDurability/sub.ini:
        * tests/DCPS/PersistentDurability/subscriber.cpp:
        * tests/DCPS/PersistentDurability/tcp.conf:
        * tests/DCPS/PersistentDurability/Writer.cpp:
        * tests/DCPS/PersistentDurability/Writer.h:

          New PERSISTENT DURABILITY test.

Thu Jun 12 16:49:34 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/TransientDurability/publisher.cpp (ACE_TMAIN):

          Explicitly destroy the DataWriter that is meant to push unsent
          data in to the durability cache before creating a new
          DataWriter.  The goal is to force all references to the
          DataWriter held by OpenDDS to be removed before creating the new
          one.

Thu Jun 12 15:53:44 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/ZeroCopySeq_T.cpp:

          Attempting once again to fix Borland compile errors.

Thu Jun 12 09:23:26 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/TransientDurability/DataReaderListener.cpp:
        * tests/DCPS/TransientDurability/DataReaderListener.h:
        * tests/DCPS/TransientDurability/DataWriterListenerImpl.cpp:
        * tests/DCPS/TransientDurability/DataWriterListenerImpl.h:
        * tests/DCPS/TransientDurability/domain_ids:
        * tests/DCPS/TransientDurability/Messenger.idl:
        * tests/DCPS/TransientDurability/pub.ini:
        * tests/DCPS/TransientDurability/publisher.cpp:
        * tests/DCPS/TransientDurability/README:
        * tests/DCPS/TransientDurability/run_test.pl:
        * tests/DCPS/TransientDurability/sub.ini:
        * tests/DCPS/TransientDurability/subscriber.cpp:
        * tests/DCPS/TransientDurability/tcp.conf:
        * tests/DCPS/TransientDurability/TransientDurability.mpc:
        * tests/DCPS/TransientDurability/Writer.cpp:
        * tests/DCPS/TransientDurability/Writer.h:

          New TRANSIENT DURABILITY test.

Thu Jun 12 05:49:36 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Deadline/DataReaderListener.cpp:
        * tests/DCPS/Deadline/publisher.cpp:
        * tests/DCPS/Deadline/run_test.pl:
        * tests/DCPS/Deadline/subscriber.cpp:
        * tests/DCPS/Deadline/Writer.cpp:

          Correct synchronization issue between publisher and subscriber.

Thu Jun 12 04:38:01 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/Deadline/DataWriterListenerImpl.cpp
          (on_offered_deadline_missed):

          Fixed unused parameter warning.

Wed Jun 11 18:10:41 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * tests/DCPS/Lifespan/Lifespan.mpc:

          Added MPC file for this test.

Wed Jun 11 05:58:20 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/Lifespan/DataWriterListenerImpl.cpp:

          Fixed unused parameter warning.

Tue Jun 10 12:23:45 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp (data_expired):

          Corrected sense of data expiration check.  Future times were
          incorrectly checked instead of those in the past.

        * tests/DCPS/Lifespan:
        * tests/DCPS/Lifespan/DataReaderListener.cpp:
        * tests/DCPS/Lifespan/DataReaderListener.h:
        * tests/DCPS/Lifespan/DataWriterListenerImpl.cpp:
        * tests/DCPS/Lifespan/DataWriterListenerImpl.h:
        * tests/DCPS/Lifespan/domain_ids:
        * tests/DCPS/Lifespan/Messenger.idl:
        * tests/DCPS/Lifespan/pub.ini:
        * tests/DCPS/Lifespan/publisher.cpp:
        * tests/DCPS/Lifespan/README:
        * tests/DCPS/Lifespan/run_test.pl:
        * tests/DCPS/Lifespan/sub.ini:
        * tests/DCPS/Lifespan/subscriber.cpp:
        * tests/DCPS/Lifespan/tcp.conf:
        * tests/DCPS/Lifespan/Writer.cpp:
        * tests/DCPS/Lifespan/Writer.h:

          New LIFESPAN QoS policy test.

        * bin/dcps_tests.lst:

          Run LIFESPAN test in automated builds.

Tue Jun 10 10:58:34 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * tests/DCPS/Deadline/DataReaderListener.cpp:
        * tests/DCPS/Deadline/DataReaderListener.h:
        * tests/DCPS/Deadline/DataWriterListenerImpl.cpp:
        * tests/DCPS/Deadline/DataWriterListenerImpl.h:
        * tests/DCPS/Deadline/Deadline.mpc:
        * tests/DCPS/Deadline/domain_ids:
        * tests/DCPS/Deadline/Messenger.idl:
        * tests/DCPS/Deadline/pub.ini:
        * tests/DCPS/Deadline/publisher.cpp:
        * tests/DCPS/Deadline/README:
        * tests/DCPS/Deadline/run_test.pl:
        * tests/DCPS/Deadline/sub.ini:
        * tests/DCPS/Deadline/subscriber.cpp:
        * tests/DCPS/Deadline/tcp.conf:
        * tests/DCPS/Deadline/Writer.cpp:
        * tests/DCPS/Deadline/Writer.h:

          New DEADLINE QoS policy test.

        * bin/dcps_tests.lst:

          Run DEADLINE test in automated builds.

Tue Jun 10 00:22:02 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp (insert):

          Replaced call to std::distance() on pointer-based iterators with
          straight pointer arithmetic.  Addresses a Sun Studio 8 build
          error.

Mon Jun 09 22:34:24 UTC 2008  Trevor Fields  <fields_t@ociweb.com>

        * DDS_release_notes.txt:

          Fixed typo.

Fri Jun  6 19:56:11 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:

          Workaround lack of STL-style traits in ACE_Hash_Map_Manager_Ex<>
          and ACE_Array_Base<> in ACE 5.4a.

        * dds/DCPS/DataDurabilityCache.h:

          Include "ace/SStringfwd.h" to pull in ACE_CString typedef.

Fri Jun  6 08:27:23 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/DataDurabilityCache.h:

          Moved code out of TransientDataDurabilityCache.* to these files,
          and rewrote code to utilize allocators to allow the same code to
          be used by both TRANSIENT and PERSISTENT durability QoS
          configurations.

        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataSampleList.inl:

          Added source_timestamp field to simplify access of that value
          for each sample when transferring data to the durability cache.

        * dds/DCPS/DataReaderImpl.cpp:

          Delay start of requested deadline watchdog until first
          association is established.  There is no reason to start it
          before then.

        * dds/DCPS/DataWriterImpl.cpp:

          Delay start of offered deadline watchdog until the DataWriter is
          enabled.  There is no reason to start it  before then.

          Updated code to use new durability cache interface.

          Initialize the DataSampleListElement::source_timestamp field
          when writing.  That value will later be store in the durability
          cache.

        * dds/DCPS/OfferedDeadlineWatchdog.cpp (execute):
        * dds/DCPS/RequestedDeadlineWatchdog.cpp (execute):
        * dds/DCPS/RequestedDeadlineWatchdog.h:

          Only call back through the listener pointer if it is non-zero.

        * dds/DCPS/PublisherImpl.cpp (get_data_durability_cache):

          Updated code to use new durability cache interface.

          Enabled PERSISTENT durability code.

        * dds/DCPS/Qos_Helper.inl (valid):

          Enabled support for TRANSIENT and PERSISTENT durability QoS
          policies.

        * dds/DCPS/WriteDataContainer.cpp (send_durable_data):
        * dds/DCPS/WriteDataContainer.h (send_durable_data):

          Removed this method.  It is no longer needed.

        * dds/DCPS/TransientDataDurabilityCache.cpp:
        * dds/DCPS/TransientDataDurabilityCache.h:

          Removed these files.  All durability cache code is now in
          DataDurabilityCache.{h,cpp}.

        * tests/DCPS/Partition/Partition_Table.h:

          Corrected some comments.

Wed Jun  4 04:42:10 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Moved the datalink cleanup task shutdown to the begin of shutdown()
          function instead of the end of the function. This would fix access
          violation when transport_detached() wiped the TransportImpl reference
          in TransportInterface while datalink clean task is removing associations.

Tue Jun  3 09:28:37 UTC 2007  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/Qos_Helper.inl (operator==):

          Added equality check for DurabilityServiceQosPolicy member in
          TopicQos and DataWriterQos.

Fri May 30 23:10:43 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:

          Made script to calculate lost message based on the time between sub
          crash and restart instead of just fixed delay time. This expects to
          fix the reconnect sub test.

Fri May 30 19:45:24 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.h:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:

        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.h:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/run_test.pl:

        * tests/DCPS/FooTest3_2/PubDriver.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.h:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/run_test.pl:

          Added sub ready file to indicate the subscriber is ready accept
          connection. This would synchronize sub and pub to make the pub
          add_associations called after sub opened a port for listening.
          It should resolve the "Failed to connect" problem on publication
          side.

Fri May 30 02:59:53 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Partition/Publisher.cpp:

          Fixed compilation error of conversion from `char*' to
          TAO_String_Manager against TAO 1.4a.

Thu May 29 10:25:12 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/InfoRepo/DCPS_Utils.cpp (matching_partitions):

          Fixed problem where partitions of length greater than one were
          not matched correctly.

          Fixed problem where wildcards were not handled correctly.

          Match zero length partition name sequence (the default) to an
          explicitly specified empty string "" partition name.

        * tests/DCPS/Partition/DataReaderListener.cpp:
        * tests/DCPS/Partition/DataReaderListener.h:
        * tests/DCPS/Partition/DataWriterListener.cpp:
        * tests/DCPS/Partition/DataWriterListener.h:
        * tests/DCPS/Partition/domain_ids:
        * tests/DCPS/Partition/Partition.mpc:
        * tests/DCPS/Partition/Partition_Table.h:
        * tests/DCPS/Partition/pub.ini:
        * tests/DCPS/Partition/Publisher.cpp:
        * tests/DCPS/Partition/README:
        * tests/DCPS/Partition/run_test.pl:
        * tests/DCPS/Partition/sub.ini:
        * tests/DCPS/Partition/Subscriber.cpp:
        * tests/DCPS/Partition/tcp.conf:
        * tests/DCPS/Partition/Test.idl:

          New PARTITION QoS test.

        * bin/dcps_tests.lst:

          Added new Partition test to the list of tests to run.

Wed May 28 17:04:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Made fresh_link() ignore the nil connection(new datalink/connection) case.
          This would avoid nil connection error on SimpleTcpDataLink::reconnect().
          The connection could be nil in fresh_link() when the new connection is
          accepted before the connection is associated with the datalink in
          make_passive_connection.

        * tests/DCPS/sub_init_loop/subscriber.cpp:

          Added delay between getting matched publication and delete_datareader call.
          This would avoid the bit lookup timeout issue. The problem observed is the
          remove_associations for the same reader could be called before the
          fully_associted message is received on datawriter side. It has to have delay
          to ensure the DataWriter received fully_associated call before subscriber
          deletes datareader.

Fri May 23 17:12:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/UpdateManager.inl:
        * dds/InfoRepo/UpdateManager.cpp:

          Corrected qos memory allocation to use the consolidated message block
          length instead of total length of cdr stream and not use the same message
          block for multiple consolidations.

Fri May 23 10:12:12 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/Qos_Helper.inl (operator<):

          Corrected logic that prevented expected result of false when
          left operand was infinite.

        * tests/DCPS/FooTest5_0/main.cpp (main):
        * tests/DCPS/ZeroCopyRead/main.cpp (main):

          s/DDS::TRANSPORTTYPE/OpenDDS::TRANSPORTTYPE/g.  The
          OpenDDS-specific TRANSPORTTYPE_QOS_POLICY_ID constant is now in
          the OpenDDS namespace.

        * tests/DCPS/UnitTests/LivelinessCompatibility.cpp:
          (lease_greater_than):

          New convenience function introduced merely to minimize changes
          needed to address build errors caused by removed of
          OpenDDS::DCPS::Qos_Helper::lease_greater_than() method.

          (main):

          Dropped "OpenDDS::DCPS::Qos_Helper::" scope qualifier from all
          calls to lease_greater_than().  That function is now local to
          this file.

Fri May 23 06:02:44 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * DDS_release_notes.txt:

          Added note about TRANSPORTTYPE_QOS_POLICY_{NAME,ID} constant
          namespace change.

        * bin/DCPS/CPPTemplate.pm (get_type_name):

          Do not check for nil CORBA::String_var by comparing to NULL.
          Compare to zero instead since TAO's CORBA::String_var uses zero,
          not NULL.  The NULL constant is not guaranteed to be zero.

        * dds/DdsDcpsInfrastructure.idl (TRANSPORTTYPE_QOS_POLICY_NAME):
          (TRANSPORTTYPE_QOS_POLICY_ID):

          Moved these constants from DDS namespace to OpenDDS namespace
          since they are specific to OpenDDS.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/OfferedDeadlineWatchdog.cpp:
        * dds/DCPS/OfferedDeadlineWatchdog.h:
        * dds/DCPS/RequestedDeadlineWatchdog.cpp:
        * dds/DCPS/RequestedDeadlineWatchdog.h:

          Pass "this" pointer to Watchdog object.  The Watchdog object
          now dynamically retrieves the Listener object each time it times
          out the listener may be changed by the application.

        * dds/DCPS/DataSampleHeader.h (source_timestamp_nanosec_):

          Changed this field's type from ACE_INT32 to ACE_UINT32 to match
          corresponding type ::DDS::Time_t::nanosec field type,
          i.e. CORBA::ULong.

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

          (operator<):

          Handle the INFINITY case explicitly since the DDS spec does not
          define infinite nanosec value to be the maximum possible value
          for the underlying type.

          (operator<=):

          Tightened up operator<= implementation so that it is implemented
          in terms of operator< alone, instead of both operator< and
          operator==.

          (operator!=, operator>, operator>=):

          Added !=, > and >= operators for the DDS::Duration_t type.
          Allows for simplification of some Duration_t comparisons.

          Moved relational operators ahead of Qos_Helper methods that use
          them.  Some compilers require the inline definition to appear
          before its use.

          (lease_greater_than):

          Removed this method.  Use the new greater-than operator
          instead.

        * dds/InfoRepo/DCPS_Utils.cpp (compatibleQOS):

          The TRANSPORTTYPE_QOS_POLICY_ID constant is now in the OpenDDS
          namespace.

          Use operator>() instead of
          OpenDDS::Qos_Helper::lease_greater_than().  The latter no longer
          exists.

          Added missing DEADLINE compatibility check.  The DDS
          specification requires the offered deadline period to be less
          than or equal to the requested deadline period.

May 22 16:28:59 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>:

        * DDS_release_notes.txt:

          Added note about memory management and possible crashes on exit.

        * tests/DCPS/CompatibilityTest/README:
        * tests/DCPS/UnitTests/README:

          Improved documentation on these tests.

Thu May 22 14:26:24 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/README:
        * tests/DCPS/Federation/Subscriber.cpp:

          Corrected some pointer derefencing issues and added a note
          about the applicability of this test.

Wed May 21 15:50:14 UTC 2008  Steve Totten  <totten_s@ociweb.com>

        * DDS_release_notes.txt:

          Minor rewording and reformatting of some items.

Wed May 21 12:41:03 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/ZeroCopySeq_T.cpp:

          Committed a fix for unsupported Borland compilers.

Wed May 21 06:23:12 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:

          Do not push expired data to the application, where expiration is
          determined through the LIFESPAN QoS policy value.

        * dds/DCPS/Qos_Helper.inl (time_value_to_time):
          (time_value_to_duration):

          Reinstated use of truncate_cast<> instead of static_cast<> that
          was lost during the RT11951/trunk merge.

        * dds/InfoRepo/DCPS_IR_Domain.cpp (publish_topic_bit):
          (publish_publication_bit):

          Retrieve DURABILITY_SERVICE value from appropriate Qos type.

        * dds/InfoRepo/DCPS_Utils.cpp (compatibleQOS):

          Removed duplicate DURABILITY and LIVELINESS compatibility
          checks.

Wed May 21 06:17:31 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Added remove_handler call before disconnecting backpressure connection
          in notify_lost_on_backpressure_timeout(). This is to solve access
          violation on connection object when reactor cleanup the event handles
          during shutdown.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Removed connection reference in stop_i() to be consistent with send
          strategy.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Removed code to register/remove connection handle with reactor since
          the receive strategy already remove old connection handle and register
          new connection handle.

        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Used fixed port to test reconnect logic on both pub and sub.

Wed May 21 04:53:22 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * DDS_release_notes.txt:

          Removed "FIXES PENDING" comments.

Wed May 21 03:55:23 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:
          Add description for "-DCPSTransportDebugLevel" option.

Tue May 20 23:26:50 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * DDS_release_notes.txt:

          Added Yan's comments about dispose() and unregister() notifications.

Tue May 20 22:09:50 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Updated for default multicast address.

        * dds/InfoRepo/PersistenceUpdater.cpp:

          Fixed a memory leak that the old qos data should be deleted when new qos data
          is added to the hash map.

Tue May 20 20:04:28 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/OfferedDeadlineWatchdog.cpp:
        * dds/DCPS/RequestedDeadlineWatchdog.cpp:
        * dds/InfoRepo/DCPS_Utils.cpp:

          Resolved compilation errors on 1.4a, gcc, no-inlining.
          Updated comments.

        * bin/DCPS/CPPTemplate.pm:
        * tests/DCPS/FooTest4_0/main.cpp:

          Resolved warnings on gcc 4.1.1.

Tue May 20 18:27:01 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

          Refactored DDS::Duration_t value validation code.

          Added missing DURABILITY_SERVICE QoS validation code.

          Refactored HISTORY and RESOURCE_LIMITS QoS validation code so
          that it may be leveraged by DURABILITY_SERVICE validation code.

          Code clean-up.

Tue May 20 16:08:09 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/DataSampleList.h:

          Changed TransportSendElementAllocator to use ACE_Thread_Mutex instead of ACE_Null_Mutex.
          Previously malloc and free did not have locked access.

Mon May 19 22:23:58 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Made listener address use ACE_IPV6_LOCALHOST for IPv6 build.

Mon May 19 21:55:23 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Fixed a bug in add_associations() that called
          subscriber_servant_->add_associations() twice.

Mon May 19 20:04:23 UTC 2008  Ossama Othman  <othmano@ociweb.com>

        Merge of RT11951 branch to trunk.  Full ChangeLog entries in
        history/ChangeLog-RT11951.

        * dds/DCPS/DataDurabilityCache.cpp:
        * dds/DCPS/DataDurabilityCache.h:
        * dds/DCPS/OfferedDeadlineWatchdog.cpp:
        * dds/DCPS/OfferedDeadlineWatchdog.h:
        * dds/DCPS/RequestedDeadlineWatchdog.cpp:
        * dds/DCPS/RequestedDeadlineWatchdog.h:
        * dds/DCPS/TransientDataDurabilityCache.cpp:
        * dds/DCPS/TransientDataDurabilityCache.h:
        * dds/DCPS/Watchdog.cpp:
        * dds/DCPS/Watchdog.h:
        * dds/DCPS/WatchdogTimer.cpp:
        * dds/DCPS/WatchdogTimer.h:
        * dds/InfoRepo/UpdateListener_T.cpp:
        * dds/InfoRepo/UpdateListener_T.h:
        * docs/design/deadline.txt:
        * docs/design/durability.txt:
        * docs/design/federation.txt:
        * docs/design/lifespan.txt:
        * docs/design/partition.txt:
        * history/ChangeLog-RT11951:
        * tests/DCPS/Federation/DataReaderListener.cpp:
        * tests/DCPS/Federation/DataReaderListener.h:
        * tests/DCPS/Federation/Federation.mpc:
        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/Publisher.h:
        * tests/DCPS/Federation/README:
        * tests/DCPS/Federation/Subscriber.cpp:
        * tests/DCPS/Federation/Subscriber.h:
        * tests/DCPS/Federation/TestConfig.cpp:
        * tests/DCPS/Federation/TestConfig.h:
        * tests/DCPS/Federation/TestException.h:
        * tests/DCPS/Federation/domain1_ids:
        * tests/DCPS/Federation/domain2_ids:
        * tests/DCPS/Federation/publisher_main.cpp:
        * tests/DCPS/Federation/run_test.pl:
        * tests/DCPS/Federation/subscriber_main.cpp:
        * tests/DCPS/Federation:
        * tests/DCPS/NotifyTest/DataReaderListener.cpp:
        * tests/DCPS/NotifyTest/DataReaderListener.h:
        * tests/DCPS/NotifyTest/Messenger.idl:
        * tests/DCPS/NotifyTest/NotifyTest.mpc:
        * tests/DCPS/NotifyTest/Writer.cpp:
        * tests/DCPS/NotifyTest/Writer.h:
        * tests/DCPS/NotifyTest/domain_ids:
        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/NotifyTest/publisher.cpp:
        * tests/DCPS/NotifyTest/run_test.pl:
        * tests/DCPS/NotifyTest/sub.ini:
        * tests/DCPS/NotifyTest/subscriber.cpp:
        * tests/DCPS/NotifyTest/tcp.conf:
        * tests/DCPS/NotifyTest:
        * tests/DCPS/README:

          Newly added files.

        * DDS_release_notes.txt:

          Updated release notes with RT11951 branch-specific items.

        * AUTHORS:
        * LICENSE:
        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * bin/DCPS/IDLTemplate.pm:
        * bin/dcps_tests.lst:
        * dds/DCPS/BuiltInTopicUtils.cpp:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataSampleList.cpp:
        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/Definitions.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/InstanceState.h:
        * dds/DCPS/InstanceState.inl:
        * dds/DCPS/Marked_Default_Qos.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:
        * dds/DCPS/RcHandle_T.h:
        * dds/DCPS/Serializer.inl:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DdsDcpsInfrastructure.idl:
        * dds/InfoRepo/ArrDelAdapter.h:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/DCPS_Utils.cpp:
        * dds/InfoRepo/DCPS_Utils.h:
        * docs/DomainRepoConfig.html:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/ViewState/main.cpp:

          Files modified in RT11951 branch.

Fri May 16 11:45:42 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * DDS_release_notes.txt:

          Updated release version information.

Thu May 15 16:33:51 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * examples/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * examples/DCPS/Messenger_Imr/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:

          Made endpoint port to be randomly picked instead of a fixed
          number. This avoids nightly build test failure because the port
          may be used by other tests.

Thu May 15 14:52:24 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Reduced the time it takes to complete test on a failure.

        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:

          Fixed to only count publishers that went from active to inactive
          as missed.

Thu May 15 06:59:20 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Moved the DataLinkCleanupTask close to shutdown() instead of in
          destructor. This makes the thread exit upon shutdown and not impacted
          by whether the TransportImpl destructor is called or not.

Wed May 14 20:14:17 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added ipv6 support feature and other features and bug fixes.

Wed May 14 03:23:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          - Fixed a problem that the re-established connection failed state
          check when send strategy resume send. The problem is an active
          disconnect due to the peer graceful disconnect did not terminate
          send.

          - Added new method active_connect which is thread protected and
          moved non-thread protected version active_establishment() to be
          private. This would avoid the same connection connect multiple
          times when add_associations() related to same datalink be handled
          simalteneously.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Replaced connection active_establishment() call with active_connect().

Tue May 13 16:37:06 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:

          Corrected last on_liveliness_change call status verification.

        * tests/DCPS/LivelinessTimeout/DataReaderListener.h:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:

          Removed inactive_count_ and test_failed() method as they are not
          needed.

        * tests/DCPS/LivelinessTimeout/subscriber.cpp:

          Removed test_failed() verification from listener.

Tue May 13 14:26:10 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * examples/DCPS/DistributedContent/AbstractionLayer.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * tests/DCPS/MultiRepoTest/ForwardingListener.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
          Fix minor scoreboard warnings.

Tue May 13 00:09:18 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Fixed remove_association to not try to remove same writer/reader
          multiple times.
          Corrected the liveliness implementation to make consistent active
          count and inactive count changes. The active count is increased when
          writer became active and is decreased when it became dead from ACTIVE
          state or remove_association is called. The inactive count is increased
          when the writer became dead from ACTIVE state and is decreased when
          it became active from DEAD state or remove_association is called.

        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:

          Corrected the test result verification based on current implementation.

Mon May 12 20:52:01 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:

          Moved condition signal to the end of the Writer::svc function, to
          avoid race condition.

Mon May 12 19:02:53 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * dds/DCPS/Service_Participant.cpp:
          Option TransportDebugLevel renamed to DCPSTransportDebugLevel.

Mon May 12 18:41:29 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/FooTest5/publisher.cpp:

          Close the writers_completed file as soon as possible, so changes are
          flushed to the disk.

        * tests/DCPS/FooTest5/run_test.pl:

          For udp and (unreliable) multicast, pass a -y 50 to the publisher so
          that it sleeps for 50 ms between writes.

Mon May 12 16:03:40 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/Sync/SyncServer_i.cpp:
          Fix type conversion warning.

Sun May 11 07:12:25 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/SyncServer.cpp:
          Bump up ref count to bypass ORB memory management.

        * performance-tests/DCPS/Sync/SyncServer_i.h:
        * performance-tests/DCPS/Sync/SyncServer_i.cpp:
          Fix incorrect ID assignment.

Fri May  9 21:37:04 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Making sure the ReactorTask doesn't get destroyed till everything else is shutdown.

        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.cpp:

          Making sure the ReactorTask isn't destroyed till the socket is destroyed.

        * dds/InfoRepo/DCPSInfo_i.cpp:

          This code went in to fix a memory leak, but exercises infrastructure code that
          isn't valid while we are going down.  Removing the code since currently this is
          only at shutdown.

Fri May  9 15:15:29 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          Unlock the sample_lock_ during callbacks to the data reader
          (or subscriber) listener.

Fri May  9 00:16:55 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.inl:

          Used ACE_DEFAULT_MULTICASTV6_ADDR as default multicast IPv6 address.

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed an access violation in exist() method.

        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.h:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:

          Replaced empty address string with "localhost:0". This fixed some test failures
          on IPV6 build since ACE think an ACE_INET_Addr constructed from an empty address string
          is an IPV4 address.

Thu May  8 21:47:59 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/SyncServer.cpp:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/Sync/SyncClient_i.cpp:
        * performance-tests/DCPS/Sync/SyncServer_i.h:
        * performance-tests/DCPS/Sync/SyncServer_i.cpp:
          Moved away from fixed port to using ephemeral port. Simplidfied
          usage.

Thu May  8 19:44:26 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Removed the unreliable forms of Messenger from the list of tests run
          in automated builds.  See comments in the lst file for details.

Thu May  8 19:08:59 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/MultiRepoTest/ForwardingListener.h:
        * tests/DCPS/MultiRepoTest/ForwardingListener.cpp:

          Added a state variable (bool complete_) for use in waitForCompletion.
          Use of condition variables without external state is dangerous.

Thu May  8 15:13:10 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/StackDataReaderListener.h:

          Changed to inherit from LocalObject_NoRefCount to fix problem with DOC release making
          the default be to reference count local objects.

        * dds/DCPS/LocalObject.h:

          Added a LocalObject_NoRefCount to fix problem with DOC release making the default be
          to reference count local objects.

        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.inl:

          Removed incorrect _add_ref.  When the object is allocated, it starts with a refcount of 1, so
          the ref count is correct after storing in _rch.

Thu May  8 06:24:39 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/SubscriberImpl.cpp:

          Fixed a warning because of a not used variable.

Wed May  7 19:04:50 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:

          Made PortableServer::ServantBase_var to make sure DataWriterRemoteImpl reference gets removed.

        * dds/DCPS/SubscriberImpl.cpp:

          Made PortableServer::ServantBase_var to make sure DataReaderRemoteImpl reference gets removed.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.cpp:

          Use RcHandle CTOR to _add_ref rather than doing explicitly.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastRcHandles.h:

          Added ReliableMulticastTransportConfiguration_rch.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.cpp:

          Changed to use ReliableMulticastTransportConfiguration_rch to fix a memory leak.

        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Added guard to make sure array memory gets deleted.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:

          Use RcHandle CTOR to _add_ref rather than doing explicitly.

Tue May  6 22:04:43 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/MultiRepoTest/TestConfig.cpp:

          For static builds, explicitly include the SimpleTcp header so the
          linker doesn't discard all references to SimpleTcp.

Tue May  6 20:41:21 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * dds/DCPS/transport/framework/NetworkAddress.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Improve log messages.

Tue May  6 20:37:31 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Removed servant_to_reference, reference_to_servant, and deactivate_object.

        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/stack_subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/subscriber.cpp:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicImpl.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * examples/DCPS/DistributedContent/AbstractionLayer.cpp:
        * examples/DCPS/IntroductionToOpenDDS/publisher.cpp:
        * examples/DCPS/IntroductionToOpenDDS/subscriber.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * examples/DCPS/Messenger_Imr/publisher.cpp:
        * examples/DCPS/Messenger_Imr/subscriber.cpp:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:
        * performance-tests/DCPS/TCPProfilingTest/publisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:
        * performance-tests/DCPS/TransportLatency/publisher.cpp:
        * performance-tests/DCPS/TransportLatency/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/CompatibilityTest/DataReaderListener.cpp:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:
        * tests/DCPS/CorbaSeq/publisher.cpp:
        * tests/DCPS/CorbaSeq/subscriber.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiRepoTest/ForwardingListener.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/TransientLocalTest/Writer.cpp:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/ViewState/main.cpp:
        * tests/DCPS/ZeroCopyRead/main.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/DCPS/unit/Main.cpp:

          Removed all calls to deactivate_object.  Removed calls to servant_to_reference and changed _var creation
          to containment of allocated memory where I could.  Replaced calls to reference_to_servant with dynamic_cast.

Tue May  6 19:54:11 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/NetworkAddress.h:
        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Fixed problem in get_fully_qualified_hostname() that returns the loopback
          address resolved name without checking the non-loopback network interfaces.
          The get_fully_qualified_hostname() will return the name in the order whoever
          is found first - FQDN, short hostname, name resolved from loopback address.
          In the case using short hostname or name resolved from loopback address, a
          warning is logged. If there is no any name discovered from network interfaces,
          an error is logged and an empty string is returned.

Tue May  6 15:19:37 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/FooTest5_0/run_test.pl:

          This script was passing the same -ORBSvcConf argument twice on the
          DCPSInfoRepo command line, causing failures on some platforms.

Mon May  5 23:19:57 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/NetworkAddress.h:
        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Embeded the byte order to CDR stream for serialization and de-serialization
          of the NetworkAddress.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.cpp:

          Updated find_or_create_datalink() to check return value from NetworkAddress
          deserialize.

Mon May  5 22:18:38 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/sub_ipv6.ini:

          Added the example configuration that used by IPV6 specific DevGuideExample.
          The local_address is configured with IPV6 format localhost address.

        * DevGuideExamples/DCPS/Messenger/run_test.pl:

          Added the IPV6 specific test case.

        * bin/dcps_tests.lst:

          Added IPV6 specific DevGuideExample test.

Mon May  5 20:11:51 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Group all of the TCPListenerTest variants together.

        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Don't pass -ORBSvcConf twice with the same service conf file.  This
          fails on DOC ACE+TAO on Win32.

Mon May  5 19:15:05 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/ZeroCopyAllocator_T.cpp:

          Adding patch from Jim Chappell that corrects "not supported"
          error message generation problems with newer compilers (gcc 4.3+).

Mon May  5 19:03:27 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/Messenger.mpc:

          Added a StackSubscriber project w/ stack_subscriber.cpp, StackDataReaderListener.h, and
          StackDataReaderListener.cpp

        * DevGuideExamples/DCPS/Messenger/StackDataReaderListener.h:
        * DevGuideExamples/DCPS/Messenger/StackDataReaderListener.cpp:

          The implementation for DataReaderListener that doesn't inherit from LocalObject<...>,
          so no reference counting is performed

        * DevGuideExamples/DCPS/Messenger/run_test.pl:

          Added code to run the stack based example when "stack" is passed to the perl script.

        * DevGuideExamples/DCPS/Messenger/stack_subscriber.cpp:

          Exactly the same code as subscriber.cpp, except that StackDataReaderListener is created on the stack.

        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:

          Cleaned up unnecessary template parameter.

        * bin/dcps_tests.lst:

          Added new stack test.

Mon May  5 18:47:14 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/TransientLocalTest/README:

          Added PublisherImpl.cpp patch needed for reproducing the deadlock and
          testing the fix.

Mon May  5 14:38:27 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * tests/DCPS/TransientLocalTest/Writer.cpp:

          Fixed a no-EOL warning with this file.

Thu May  5 06:04:05 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Fixed a deadlock situation that happens between fully_associated()
          thread and write()/register() thread when using
          TRANSIENT_LOCAL_DURABILITY_QOS. The two threads acquire writer
          container lock and publisher lock in reverse order. Making
          fully_associated() to acquire the write container lock before calling
          PublisherImpl::data_available() would resolve the deadlock.

        * tests/DCPS/TransientLocalTest/DataWriterListenerImpl.h:
        * tests/DCPS/TransientLocalTest/DataWriterListenerImpl.cpp:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/TransientLocalTest/Writer.h:
        * tests/DCPS/TransientLocalTest/Writer.cpp:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/README:

          Added the test case for the deadlock fix.
          To simulate the test scenario, the PublisherImpl::data_availabe()
          need be modified to have sleep for 2 seconds before send(list) if
          resend is true. Without the fix, a deadlock happened in this test.
          With the fix, the test should pass.

Fri May  2 16:22:15 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for qos compatibility (RT# 12054) and memory management
          (RT# 12161).

        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Needed to delete[] buf.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Needed to delete[] buf not delete.

Thu May  1 23:50:20 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/NetworkAddress.h:
        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Allowed the short host name discoved via ACE::get_fqdn() to be used if fully qualified
          hostname is not found and print warning when it happens.

Thu May  1 20:34:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.inl:

          Made default mcast_group_address to be ACE_DEFAULT_MULTICAST_PORT:ACE_DEFAULT_MULTICAST_ADDR.
          This made reliable mcast to support default configuration to be consistent with unreliable
          mcast.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:

          Removed error returns when local_address and mcast_group_address are not configured in
          the configuration file. The code default values are used when the addresses are not
          configured.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.cpp:

          Added debug logging for advertisement address.

        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:

          Added default_reliable_mcast test case.

        * bin/dcps_tests.lst:

          Added default_reliable_mcast test case.

Wed Apr 30 00:17:58 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        Continued the effort to support IPv6 (RT11158).

        * dds/DCPS/Service_Participant.cpp:

          Used set_port_number() instead of creating an ACE_INET_Addr with port number.
          It fixed the problem that ipv4 address was introduced by the constructor in IPv6 build.

        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Updated the get_fully_qualified_hostname() function to work for both ipv4 and ipv6
          builds on current DDS supported platforms.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Removed code to set the local_address with port 0 and INADDR_ANY which should
          only apply to ipv4. Leave it use the default constructor. This would fix ipv4
          address used in ipv6 build problem.

Tue Apr 29 19:35:38 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Deactivating remote object DataReaderRemoteImpl with the poa.

        * dds/DCPS/DataWriterImpl.cpp:

          Deactivating remote object DataWriterRemoteImpl with the poa.

        * dds/DCPS/DomainParticipantImpl.cpp:

          Storing allocated TypeSupportImpls in _vars so that they get
          cleaned up.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Making the code clearer by creating a _var, rather than a
          temporary variable.

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Deleting AssociationInfoList in pending_association_sub_map_.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Was previously using an auto_ptr to manage a reference counted
          object.  Changed to use a ServantBase_var

        * dds/InfoRepo/DCPSInfo_i.cpp:

          Removing all DCPS_IR_Domains stored in the map on destruction.

Mon Apr 28 18:54:44 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * performance-tests/DCPS/Sync/SyncServer_i.cpp:

          Memory was being lost since the memory returned by object_to_string was
          only being copied (std::string ctor), so changed to CORBA::String_var.

Mon Apr 28 15:06:59 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Moved code for adding new memory to a var, to avoid potential memory leak.

        * dds/DCPS/PublisherImpl.cpp:

          Moved call to detatch_transport back to destructor, until I can look at its
          effects. Removed wrong function comment. Put dw_servant->get_publisher()
          inside a var, since the function duplicates the ptr.

        * dds/DCPS/SubscriberImpl.cpp:

          Put dw_servant->get_publisher() inside a var, since the function duplicates
          the ptr.
          For RT#12161.

Mon Apr 28 05:16:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Fixed a compilation warning.

Sun Apr 27 06:49:34 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        The main changes are using the address string instead of IP and port for
        pub/sub endpoint addresss advertisement and fixed problem that default
        local_address configurations do not work when hostname is resolved as loopback
        ip address. (See RT12134).

        The address string advertisement changes were made to support the IPv6 as well,
        but more tests need be done. e.g. test on pure ipv6 machine.

        * dds/DCPS/transport/framework/NetworkAddress.h:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/NetworkAddress.cpp:

          Made NetworkAddress struct a wrapper of the stringified address and added
          serialize and deserialize methods. A reserved byte is added for the version
          support in the future.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.cpp:

          Added local_address_str_ data member for address advertisement. The address string
          is either from the configuration or uses code default. The acceptor defaults to
          listening on INADDR_ANY if the local_address_ is not configured, but the fully
          qualified hostname with the port number randomly picked by OS is sent to
          DCPSInfoRepo for endpoint advertisement. This would fix the problem that default
          local_address configurations do not work when hostname is resolved as loopback
          ip address.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Made connection send local address string instead of whole NetworkAddress after
          connection establishment. This simplifies the implementation which does not need
          serialize and deserialize the NetworkAddress.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:

          Added multicast_group_address_str_ which is either from configuration file or
          uses code default. The default multicast group address is
          ACE_DEFAULT_MULTICAST_ADDR:ACE_DEFAULT_MULTICAST_PORT.

        * performance-tests/DCPS/dummyTCP/DummyTcpConfiguration.h:
        * performance-tests/DCPS/dummyTCP/DummyTcpConfiguration.cpp:
        * performance-tests/DCPS/dummyTCP/DummyTcpConnection.cpp:
        * performance-tests/DCPS/dummyTCP/DummyTcpTransport.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.h:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.h:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.h:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/transport/dds_comparative/Pub.h:
        * tests/transport/dds_comparative/Pub.cpp:
        * tests/transport/dds_comparative/PubDriver.h:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/Sub.h:
        * tests/transport/dds_comparative/Sub.cpp:
        * tests/transport/dds_comparative/SubDriver.h:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/mcast_simple/PubDriver.h:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.h:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.h:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.h:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/simple/PubDriver.h:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.h:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.h:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.h:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.h:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.h:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.h:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.h:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.h:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.h:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.h:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Updated these tests which have configuration setup in the code to configure
          the local_address_str_ and multicast_group_address_str_.

Fri Apr 25 13:14:29 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Removed passing in participant obj ref to publisher and subscriber.  Also
          fixed problem where I missed protecting code that wasn't defined for MIN
          BIT.

        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:

          Remove unneeded object ref to participant and removed manual
          reference counting, since the DomainParticipant always exists
          while the PublisherImpl does.

        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:

          Remove unneeded object ref to participant and removed manual
          reference counting, since the DomainParticipant always exists
          while the SubscriberImpl does.
          For RT#12161.

Thu Apr 24 20:16:41 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Removed unneeded parameter for init function and cleaned up.

        * dds/DCPS/DataReaderImpl.h:

          Removed unneeded parameter for init function and unneeded
          class parameters. Made get_subscriber_servant() to be protected.

        * dds/DCPS/DataReaderImpl.cpp:

          Changed to only hold a pointer to parents (DomainParticipant and
          SubscriberImpl) and not participate in ownership of them.

        * dds/DCPS/DataWriterImpl.h:

          Removed unneeded parameter for init function and unneeded
          class parameters. Made get_publisher_servant() to be protected.

        * dds/DCPS/DataWriterImpl.cpp:

          Changed to only hold a pointer to parents (DomainParticipant and
          PublisherImpl) and not participate in ownership of them.

        * dds/DCPS/DomainParticipantImpl.cpp:

          No longer passing object ref to Pub/Sub Impl.

        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:

          Removed unneeded object ref and function to set.

        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed unneeded object ref and function to set.
          For RT#12161.

Thu Apr 24 17:10:00 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Changed to set _vars to _nil() instead of missusing the out() function.
          Also added setting the data reader/writer remote to _nil() in cleanup.

        * dds/DCPS/DomainParticipantImpl.cpp:

          Added cleanup of bit objects (subscriber, topics, data readers) to
          delete_contained_entities.

        * dds/DCPS/PublisherImpl.cpp:

          Changed to set _vars to _nil() instead of missusing the out() function.

        * dds/DCPS/SubscriberImpl.cpp:

          Changed to set _vars to _nil() instead of missusing the out() function.
          For RT#12161.

Thu Apr 24 14:23:53 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:
          Fix scoreboard warnings.

Thu Apr 24 02:56:07 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:

          Removed debug statement.

Wed Apr 23 21:32:04 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/Reconnect/run_test.pl:
          Put a delay for InfoRepo to stabilize state.

Wed Apr 23 17:14:58 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * bin/ProcessFactory.pm:

          Cleaning up print statement;

Wed Apr 23 17:01:55 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/Prst_delayed_subscriber/pub.ini:
        * tests/DCPS/Prst_delayed_subscriber/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/sub_init_loop/pub.ini:
        * tests/DCPS/sub_init_loop/sub.ini:
          Use transient ports instead of fixed ports. Fixed ports can
          produce bogus errors.

Wed Apr 23 16:50:26 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * Changelog

          I missed commiting  the Changelog.

Wed Apr 23 16:44:57 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/subscriber.cpp:
        * examples/DCPS/IntroductionToOpenDDS/subscriber.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * examples/DCPS/Messenger_Imr/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TransportLatency/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:
        * tests/DCPS/CorbaSeq/subscriber.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.h:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:

          Change to store off servant right after storing off allocated
          memory.
          For RT#12161.

Wed Apr 23 16:31:39 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
          Switch to using random ports. Using hardcoded ports can
          potentially cause bogus test failures.

Wed Apr 23 15:18:45 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/framework/BasicQueueVisitor_T.h:
        * dds/DCPS/transport/framework/BasicQueue_T.h:
        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/RemoveAllVisitor.h:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.h:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.cpp:

          Fixed C++ virtual method hiding issues for some compilers.

Wed Apr 23 14:04:10 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:

          Added a #include that Microsoft didn't complain about.

        * tests/DCPS/Reconnect/subscriber.cpp:

          A change I made while reveiwing but didn't compile, this it the
          fix.

Wed Apr 23 12:13:42 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Remove servant_to_reference from template.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Changed _var to self to release in cleanup phase rather than
          destruction.  Also moved topic_var release into cleanup, but
          still need to for Participant and Publisher.

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:

          Removed unneeded _add_ref and _remove_ref for domain
          participant.  Also cleaned up commented out code.

        * dds/DCPS/DomainParticipantImpl.cpp:

          Removed unneeded _add_ref and _remove_ref for topic, pub and
          sub, and added call to cleanup the registered typeSupport for
          this participant.  Also cleaned up commented out code.

        * dds/DCPS/PublisherImpl.cpp:

          Chaned _var to self to release in cleanup phase rather than
          destruction.  Also moved releasing the participant and detaching
          the transport to the cleanup phase, rather than destruction.

        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/Registered_Data_Types.cpp:

          Added unregister_participant to unregister all the typeSupports
          for that participant.

        * dds/DCPS/Service_Participant.h:

          Made servant_to_reference a noop, since the reference should be
          taking ownership of the memory.

        * dds/DCPS/SubscriberImpl.cpp:

          Changed _var to release in cleanup phase rather than
          destruction.

        * examples/DCPS/Messenger_Imr/subscriber.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/subscriber.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/TransportLatency/subscriber.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/FooTest4_0/Reader.h:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/CorbaSeq/subscriber.cpp:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:

          Changed from putting stacked based objects in a _var, to using
          heap based objects.


        * examples/DCPS/DistributedContent/AbstractionLayer.cpp:
        * examples/DCPS/IntroductionToOpenDDS/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.h:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:

          Removed servant to listeners and making it clearer that the _var
          was in control of the heap allocated object.
          For RT#12161.

Tue Apr 22 17:09:24 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/FooTest5_0/run_test.pl:
          Remove duplicate identical service configurator options. Causes
          test failure in DOC builds.

Tue Apr 22 16:26:41 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/CompatibilityTest/subscriber.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:
        * tests/DCPS/UnitTests/LivelinessCompatibility.cpp:
          Fix scoreboard warnings. Get rid of unused vars.

Mon Apr 21 18:19:56 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/LocalObject.h:

          Fixed a comment that was wrong due to search-and-replace.

        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.h:

          Added an #include to pick up the defintion of size_t.  Thanks to
          "RTP Techie" <rtp dot techie at gmail dot com> for pointing this
          out.

Fri Apr 18 16:42:58 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * bin/ProcessFactory.pm:

          Fixed coverage portion to run non-DDS applications correctly.

        * tests/transport/reliable_multicast/reliable_multicast.mpc:

          Added dependency on coverage_optional.mpb feature.

Wed Apr 16 14:40:16 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * MPC/config/coverage_optional.mpb:

          Added to turn on coverage feature.  RT#12130

        * MPC/config/dcps.mpb:
        * dds/DdsDcps.mpc:

          Added inheritance of coverage_optional.mpb.

Wed Apr 16 14:20:40 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/run_test.pl:
        * bin/auto_run_tests.pl:
        * examples/DCPS/DistributedContent/run_test.pl:
        * examples/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * examples/DCPS/Messenger_Imr/run_test.pl:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/run_test_1x1.pl:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/split_pub.pl:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_1x1.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_1xn.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_nx1.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_nxn.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:
        * performance-tests/DCPS/TransportLatency/run_corbaloc_test.pl:
        * performance-tests/DCPS/TransportLatency/run_ns_test.pl:
        * performance-tests/DCPS/TransportLatency/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/CompatibilityTest/run_test.pl:
        * tests/DCPS/Compiler/idl_test3_main/run_test.pl:
        * tests/DCPS/CorbaSeq/run_test.pl:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTimeout/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Serializer/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/UnitTests/run_test.pl:
        * tests/DCPS/ViewState/run_test.pl:
        * tests/DCPS/ZeroCopyRead/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Changed tests to use the DDS_Run_Test.pm, (DDS) Process.pm, and ProcessFactory.pm to
          allow the capturing of Coverage data (and running all test components on VxWorks).
          RT#12130

Tue Apr 15 13:39:41 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/Compiler/idl_test1_main/run_test.pl:
        * tests/transport/mcast_simple_n/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:

          Changed sampling of tests to change to use the new PerlDDS perl module functions
          for handling coverage.

          NOTE: this Changelog entry was for revision 1070

Mon Apr 14 14:30:46 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
          Set trace messages log level to 6. By default this gets compiled out.

Fri Apr 11 21:58:15 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:
          Add entry for command-line option "-TransportDebugLevel".

Fri Apr 11 21:45:54 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * dds/DCPS/Service_Participant.cpp:
          New command-line option "-TransportDebugLevel" for specifying
          Transport debug level.

        * dds/DCPS/transport/framework/EntryExit.h:
          Add 6th log level exclusively for trace messages.

        * dds/DCPS/transport/framework/TransportDebug.h:
          Simplified Transport Debug logging and changed default log build
          level to 5.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.cpp:
        * dds/DCPS/transport/framework/BuildChainVisitor.inl:
        * dds/DCPS/transport/framework/BuildChainVisitor.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/NullSynch.inl:
        * dds/DCPS/transport/framework/NullSynch.cpp:
        * dds/DCPS/transport/framework/NullSynchStrategy.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynch.inl:
        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.inl:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.cpp:
        * dds/DCPS/transport/framework/PoolSynch.inl:
        * dds/DCPS/transport/framework/PoolSynch.cpp:
        * dds/DCPS/transport/framework/PoolSynchStrategy.inl:
        * dds/DCPS/transport/framework/PoolSynchStrategy.cpp:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.inl:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ReceivedDataSample.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.cpp:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.inl:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.cpp:
        * dds/DCPS/transport/framework/ThreadSynchWorker.inl:
        * dds/DCPS/transport/framework/ThreadSynchWorker.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportHeader.inl:
        * dds/DCPS/transport/framework/TransportHeader.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImplFactory.inl:
        * dds/DCPS/transport/framework/TransportImplFactory.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportReactorTask.inl:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * dds/DCPS/transport/framework/TransportReceiveListener.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSynchResource.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.cpp:
          Set trace messages log level to 6. By default this gets compiled out.

Fri Apr 11 16:09:28 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Added a signal handler for clean shutdown.

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Added dependency on svc_util.

Fri Apr 11 14:53:58 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/UnitTests/run_test.pl:

          Fixing test for auto test errors on particular platforms.

Thu Apr 10 21:45:04 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * bin/DDS_Run_Test.pm:
        * bin/Process.pm:
        * bin/ProcessFactory.pm:
        * tests/DCPS/UnitTests/run_test_coverage.pl:
        * tests/DCPS/ZeroCopyRead/run_test_coverage.pl:

          Further changes for coverage testing.

Wed Apr  9 18:57:38 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * bin/DDS_Run_Test.pm:
        * bin/Process.pm:
        * bin/ProcessFactory.pm:

          Changes to make coverage the local process and all
          others remote.

Wed Apr  9 15:53:00 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/DDS_Run_Test.pm:

          Changed name and added ProcessFactory.

        * bin/Process.pm:
        * bin/ProcessFactory.pm:

          Split out Process and ProcessFactory.  Process inherits from PerlACE::Process
          ProcessFactory handles creating the correct Process (PerlACE::Process,
          PerlACE:ProcessVX, or PerlDDS::Process)  RT#12130

        * tests/DCPS/ZeroCopyRead/run_test_coverage.pl:

          Changed for refactoring.

        * bin/Run_Test.pm:

          Removed this file.

Wed Apr  9 14:27:10 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/Process.pm:
        * bin/Run_Test.pm:

          Added perl modules to DDS to handle starting remote processes for VxWorks
          and Test Coverage.  RT#12130

        * tests/DCPS/UnitTests/run_test.pl:

          Cleaned up test.

        * tests/DCPS/UnitTests/run_test_coverage.pl:
        * tests/DCPS/ZeroCopyRead/run_test_coverage.pl:

          Examples of how tests will change to encorporate new perl modules.

Mon Mar 31 18:12:38 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/CompatibilityTest/CompatibilityTest.mpc:
        * tests/DCPS/CompatibilityTest/common.h:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:

          Cleaning up unneeded dependency on UDP.

        * tests/DCPS/LivelinessTimeout/LivelinessTimeout.mpc:
        * tests/DCPS/LivelinessTimeout/common.h:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:

          Cleaning up unneeded dependency on UDP.

Mon Mar 31 15:59:22 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * AUTHORS:

          Added Brian Johnson of OCI.

        * DDS_TAO.mwc:

          Updated to work with recent changes to the DCPSInfoRepo -- it now uses
          the TAO ImR (optionally).  Thanks to Jonathan Pollack for reporting
          this problem.

Mon Mar 31 15:44:17 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/CompatibilityTest/CompatibilityTest.mpc:
        * tests/DCPS/CompatibilityTest/common.h:
        * tests/DCPS/CompatibilityTest/common.cpp:

          Cleanup quick mistake and remove a warning.

Mon Mar 31 14:51:48 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/CompatibilityTest/CompatibilityTest.mpc:

          Fixing problem with static builds.

Fri Mar 28 14:07:13 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/CompatibilityTest/README:
        * tests/DCPS/UnitTests/README:

          Change from .txt.

        * tests/DCPS/CompatibilityTest/README.txt:

        * tests/DCPS/UnitTests/README.txt:

          Removed these files.

Fri Mar 28 14:02:55 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/CompatibilityTest/README.txt:

          Added description for the test.

        * tests/DCPS/UnitTests/README.txt:

          Added description for the test.

Fri Mar 28 13:45:53 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/dcps_tests.lst:

          Added a UnitTests and CompatibilityTest to the nightly build.

        * tests/DCPS/CompatibilityTest:
        * tests/DCPS/CompatibilityTest/CompatibilityTest.mpc:
        * tests/DCPS/CompatibilityTest/DataReaderListener.h:
        * tests/DCPS/CompatibilityTest/DataReaderListener.cpp:
        * tests/DCPS/CompatibilityTest/DataWriterListenerImpl.h:
        * tests/DCPS/CompatibilityTest/DataWriterListenerImpl.cpp:
        * tests/DCPS/CompatibilityTest/Writer.h:
        * tests/DCPS/CompatibilityTest/Writer.cpp:
        * tests/DCPS/CompatibilityTest/common.h:
        * tests/DCPS/CompatibilityTest/common.cpp:
        * tests/DCPS/CompatibilityTest/domain_ids:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/CompatibilityTest/run_test.pl:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:

          Added test to verify that compatibleQOS correctly implemented
          the DDS spec.

Fri Mar 28 13:39:29 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * tests/DCPS/UnitTests:
        * tests/DCPS/UnitTests/UnitTests.mpc:
        * tests/DCPS/UnitTests/run_test.pl:

          Added directory for simple Unit Tests.

        * tests/DCPS/UnitTests/LivelinessCompatibility.cpp:

          Added code to test out new Qos_Helper function.

Fri Mar 28 13:12:01 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          In add_associations(...) I moved the call to
          subscriber_servant_->add_associations before the timeout timer
          is started.

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

          Added function to identify if a liveliness lease duration is
          greater than another, to be used for determining compatibility.

        * dds/InfoRepo/DCPS_Utils.cpp:

          Added compatibility checks for durability.kind, liveliness.kind,
          and liveliness.lease_duration.

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

        * tests/DCPS/CompatibilityTest:
        * tests/DCPS/CompatibilityTest/CompatibilityTest.mpc:
        * tests/DCPS/CompatibilityTest/DataReaderListener.h:
        * tests/DCPS/CompatibilityTest/DataReaderListener.cpp:
        * tests/DCPS/CompatibilityTest/DataWriterListenerImpl.h:
        * tests/DCPS/CompatibilityTest/DataWriterListenerImpl.cpp:
        * tests/DCPS/CompatibilityTest/README:
        * tests/DCPS/CompatibilityTest/Writer.h:
        * tests/DCPS/CompatibilityTest/Writer.cpp:
        * tests/DCPS/CompatibilityTest/common.h:
        * tests/DCPS/CompatibilityTest/common.cpp:
        * tests/DCPS/CompatibilityTest/domain_ids:
        * tests/DCPS/CompatibilityTest/publisher.cpp:
        * tests/DCPS/CompatibilityTest/run_test.pl:
        * tests/DCPS/CompatibilityTest/subscriber.cpp:

        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/run_test.pl:

          Changed test to have the same QOS liveliness lease_duration for pub
          and sub and used the liveliness factor to make the liveliness timeout.

        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTimeout/DataWriterListenerImpl.cpp:
        * tests/DCPS/LivelinessTimeout/README:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/LivelinessTimeout/run_test.pl:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:

          Cleaned up excess debug statements and changed test to use the
          liveliness factor to cause the liveliness timeout.

Mon Mar 24 22:14:25 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:

          Fixed "String literal converted to char* in initialization" warnings.

        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:

          Minor change - remove info.pr after test finishes.

Mon Mar 24 19:53:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/UpdateManager.inl:
        * dds/InfoRepo/UpdateManager.cpp:

          Replaced the ACE_OutputCDR::consolidate() with ACE_CDR::consolidate()
          to fix compilation errors on 1.4a due to consolidate() not defined
          in ACE_OutputCDR.

        * tests/DCPS/BuiltInTopicTest/mySvc.conf:

          Added file missed in previous commit.

Fri Mar 21 17:42:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.inl:

          Fixed bugs in duration_to_time_value() and time_to_time_value()
          that incorrectly convert nanoseconds to microseconds.

Fri Mar 21 17:06:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added qos propagation to persistent repository test.

        * DDS_release_notes.txt:

          Added qos propagation changes.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.inl:
        * dds/InfoRepo/UpdateManager.cpp:

          - Implemented feature to update qos to persistent repository.

          - Fixed incorrect actor type and qos type for subscriber/datareader
            problem in UpdateManager::add(const UA& actor). This bug causes the
            reloading from persistent file maps the subscriber/datareader as
            publisher/datawriter.

          - Fixed a bug in qos serialization. The TAO_OutputCDR stream was not
            fully copied to buffer when the qos contains sequence data. The
            TAO_OutputCDR stream needs be consolidated before memcpy.

        * dds/DCPS/SubscriberImpl.cpp:

          Removed a debug logging.

        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/prst_repo_run_test.pl:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          Added test for qos propagation to persistent repository.

Tue Mar 18 18:46:36 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DCPS/Messenger/Writer.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/InstanceState.inl:
        * dds/DdsDcpsInfrastructure.idl:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/ViewState/main.cpp:

          Rolled back the last two commits for dispose notification feature.
          These changes were moved to RT11951 branch.

Tue Mar 18 17:24:37 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Moved instance state update for dispose before listener callback
          instead after so the dispose notification SampleInfo has the
          correct instance state - NOT_ALIVE_DISPOSED_INSTANCE_STATE.

        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:

          Added debug logging for the instance state.

Tue Mar 18 07:21:00 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Implemented datareader dispose notification. The datareader
          adds an entry for dispose message to the instance
          ReceivedDataElementList. The ReceivedDataElement has the
          registered_data_ member set to be 0 and the corresponding
          SampleInfo is marked with valid_data false. The subscriber
          checks the valid_data flag in SampleInfo before looking the
          data.

        * dds/DCPS/InstanceState.inl:

          Setup SampleInfo valid_data flag in sample_info() function.

        * dds/DdsDcpsInfrastructure.idl:

          Added publication_handle and valid_data to the SampleInfo
          according to the DDS spec 1.2.

        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DCPS/Messenger/Writer.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:

          Added explicit dispose () call on publisher side and valid_data
          flag check on subscriber side. These are used to test dispose
          notification via on_data_available() callback.

        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/ViewState/main.cpp:

          Accommodated to the changes of dispose notification support.
          The sample_rank and expected samples were changed to count
          the dispose notification as well.

        * dds/DCPS/SubscriberImpl.cpp:

          Used the datareader_map_ instead of datareader_set_ to get
          the list of datareaders for subscriber qos propagation.
          This would fix the timing issue that subscriber qos does
          not propagate when the subscriber set_qos is called before
          datareaders receive any messages.

        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Removed "my" declarations for process variables to resolve
          the "an undefined value" error.

Fri Mar 14 19:07:28 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/dcps_tests.lst:

          Added LivelinessTimeout test.

        * dds/DCPS/DataReaderImpl.cpp:

          Fixed error where we were using the last deadline for all publishers
          instead of the next (smallest) deadline we would encounter.

        * tests/DCPS/LivelinessTimeout:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.h:
        * tests/DCPS/LivelinessTimeout/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTimeout/DataWriterListenerImpl.h:
        * tests/DCPS/LivelinessTimeout/DataWriterListenerImpl.cpp:
        * tests/DCPS/LivelinessTimeout/LivelinessTimeout.mpc:
        * tests/DCPS/LivelinessTimeout/README:
        * tests/DCPS/LivelinessTimeout/Writer.h:
        * tests/DCPS/LivelinessTimeout/Writer.cpp:
        * tests/DCPS/LivelinessTimeout/common.h:
        * tests/DCPS/LivelinessTimeout/common.cpp:
        * tests/DCPS/LivelinessTimeout/domain_ids:
        * tests/DCPS/LivelinessTimeout/publisher.cpp:
        * tests/DCPS/LivelinessTimeout/run_test.pl:
        * tests/DCPS/LivelinessTimeout/subscriber.cpp:

          Test to epose and then verify the DataReaderImpl.cpp error.

Tue Mar 11 15:32:03 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * dds/DdsDcpsDomain.idl:

          Improved formatting of this file and removed tabs.

Mon Mar 10 19:35:19 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        Added qos propagation feature (see RT 11023)

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

        Added changeable () methods for all supported and non-supported qos.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicImpl.cpp:

        Updated set_qos () to check if qos is changeable and pass updated
        qos to DCPSInfoRepo.

        * dds/DdsDcpsInfo.idl:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

        Added methods to update qos.

        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:

        Added methods to support qos propogation.

        * dds/InfoRepo/DCPS_Utils.h:
        * dds/InfoRepo/DCPS_Utils.cpp:

        Removed Duration_t operator== overload function which
        is defined in Qos_Helper.h.

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

        Added qos propagation test cases.

Sat Mar  8 02:17:54 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/Serializer/run_test.pl:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:

          Fixed "undefined value" issue that was caused by the commit below.

Wed Mar  5 20:30:55 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/Compiler/idl_test1_main/run_test.pl:
        * tests/DCPS/Compiler/idl_test3_main/run_test.pl:
        * tests/DCPS/CorbaSeq/run_test.pl:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Serializer/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/ViewState/run_test.pl:
        * tests/DCPS/ZeroCopyRead/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Initial attempt at making OpenDDS tests run under VxWorks. More
          works needs to be done.

Wed Mar  5 19:15:31 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/ZeroCopySeq_T.cpp:

          Added a const_cast required by Borland (and the C++ spec, but none of
          the other compilers complained).  Thanks to Johnny Willemsen for
          testing OpenDDS with the Borland compiler.

Tue Mar  4 23:41:52 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * bin/dcps_tests.lst:

          Added a new test configuration ("nobits") that verifies that built-in
          topics can be disabled at runtime.  See the FAQ on opendds.org.

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Restored the ability to turn off BITs at runtime by passing -NOBITS
          on the DCPSInfoRepo command line.  This seems to have been lost in
          the recent (post-1.0) commits.

        * docs/INSTALL:

          Fixed some formatting.

Tue Feb 26 15:17:41 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Added #if to prevent non-existent TAO1.4a file from being included.

Mon Feb 25 20:29:36 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/dcps_tests.lst:

          Added restrictions to not run ImR test on CORBA_E_COMPACT and CORBA_E_MICRO.

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Added dependency on imr_client.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Added #include line for STATIC include of imr_client.

        * examples/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * examples/DCPS/Messenger_Imr/publisher.cpp:
        * examples/DCPS/Messenger_Imr/run_test.pl:
        * examples/DCPS/Messenger_Imr/subscriber.cpp:

          Changes to be able to run a static build.

Fri Feb 22 19:45:32 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/dcps_tests.lst:

          Removed static limitation on Imr test.

Fri Feb 22 15:36:05 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * bin/dcps_tests.lst:

          Changed test to only run for certain builds.

Wed Feb 20 22:50:41 UTC 2008  Brian Johnson  <johnson_b@ociweb.com>

        * bin/dcps_tests.lst:

          Added Messenger_Imr test to nightly builds.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Changed _narrow of info repo object to an _unchecked_narrow
          since in the case where we are using an Imr, the call goes
          to the Imr and back to us, which is wasteful and was currently
          causing an exception since the POAManager wasn't yet activated.

        * examples/DCPS/Messenger_Imr/run_test.pl:

          Made a change to the location that the tcp.conf file is
          expected at.  Also added passing in the conf file to the
          Info repo.

Mon Feb 18 16:28:55 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/ZeroCopyAllocator_T.cpp:
          Eliminated a warning from gcc in asserts.

Mon Feb 18 14:41:52 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * dds/DCPS/Util.h:
          Added a typedef to compile the code with BCB and GCC.

Mon Feb 18 14:29:52 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * dds/DCPS/Util.h:
          Removed not needed typename which is causing problems with BCB.
          Thanks to Adam Mitz for noticing this typename

Mon Feb 18 14:13:52 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.h:
          Added missing include of iterator that is needed to get
          std::back_inserter

Tue Feb 12 19:10:52 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * docs/design/UML/DDS.xmi:

          XMI version 1.1 file of the model DDS.uml.

        * docs/design/UML/readme.txt:

          Added note about this new file.

Thu Feb  7 19:10:42 UTC 2008  Brian Johnson  <johnsonb@ociweb.com>

        * docs/design/UML:
        * docs/design/UML/DDS.uml:
        * docs/design/UML/Analysis.unt:
        * docs/design/UML/InDepthOverview.unt:
        * docs/design/UML/Overview.unt:

          Added UML model files generated from StarUML.  Provides
          a simple and more in depth Use Case view of Pub-Sub
          operations.

        * docs/design/UML/Create_DataReader_Detail.jpg:
        * docs/design/UML/Create_DataWriter_Detail.jpg:
        * docs/design/UML/Register_Sample_Detail.jpg:
        * docs/design/UML/Repo_Pub_Sub_Detail.jpg:
        * docs/design/UML/Send_Remote_Detail.jpg:
        * docs/design/UML/Write_Data_Detail.jpg:

          Jpgs generated from the more in depth Use Case view.

        * docs/design/UML/Create_DataReader_Simple.jpg:
        * docs/design/UML/Create_DataWriter_Simple.jpg:
        * docs/design/UML/Register_Sample_Simple.jpg:
        * docs/design/UML/Repo_Pub_Sub_Simple.jpg:
        * docs/design/UML/Send_Remote_Simple.jpg:
        * docs/design/UML/Write_Data_Simple.jpg:

          Jpgs generated from the simple Use Case view.

        * docs/design/UML/readme.txt:

          Description of what these files are and to use StarUML.

Mon Feb  4 20:24:40 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Explicitly do not use an argument when not implementing
          BuiltinTopics.

        * tests/DCPS/MultiRepoTest/TestSystem.cpp:

          Comparisons between _var.in() rather than _var.

Thu Jan 31 20:22:48 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/MultiRepoTest/TestConfig.cpp:

          Prefixed anonymous-namespace constant names with TC_ (Test Config)
          since DEFAULT_TYPE was conflicting with a macro on gcc 3.3/solaris.

Thu Jan 31 20:15:18 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Always run Perl scripts as "perl scriptname.pl", since that works on
          all platforms.
          Check return values against != 0 instead of > 0.

        * dds/DCPS/Service_Participant.cpp:

          Changed bit_transport_impl signature to match header file.

Thu Jan 31 17:31:22 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * tests/DCPS/MultiRepoTest/TestConfig.cpp:
          Explicit include for ACE_OS::atoi().

        * tests/DCPS/MultiRepoTest/run_test.pl:
          Removed extraneous command line option.

Wed Jan 30 19:51:02 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/MultiRepoTest/ForwardingListener.cpp:

          Need to lock the mutex before waiting on the condition variable.

        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:

          Fixed floating point conversion warnings, added some logging.

        * tests/DCPS/MultiRepoTest/monitor.cpp:
        * tests/DCPS/MultiRepoTest/system.cpp:

          The third arg to main (envp) is not supported by ACE on all
          platforms.

Wed Jan 30 15:56:10 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        Merging the RT11836_mult_repo branch (-r 952:958) back to trunk.

        Wed Jan 30 15:41:17 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * docs/DomainRepoConfig.html:
          Added table of key/value pairs for sections.

        Wed Jan 30 00:19:21 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * DDS_release_notes.txt:
        * docs/DomainRepoConfig.html:
        * docs/design/multirepo.txt:
          Added some documentation describing the changes and how they
          can be configured.

        Tue Jan 29 21:53:13 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * tests/DCPS/ZeroCopyRead/run_test.pl:
          Made this script executable so that the test will execute on
          *nix systems.

        Tue Jan 29 21:11:41 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * tests/DCPS/CorbaSeq/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/ViewState/run_test.pl:
        * tests/DCPS/ZeroCopyRead/run_test.pl:
          Use service configurator when needed.

        Tue Jan 29 18:52:51 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/Service_Participant.cpp:
          get_repository(): removed const qualification and extended to
                            resolve default repository IOR if none has
                            been specified by the time this method has
                            been called.

        * tests/DCPS/LivelinessTest/run_test.pl:
          Added explicit specification of domain file to InfoRepo.

        Mon Jan 21 20:45:48 UTC 2008  martinezm  <martinezm@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/Service_Participant.cpp:
          load_configuration()
            Added domain and repository sections.
          load_domain_configuration()
          load_repo_configuration()
            New methods.
            New section processing implementation.
          domain_to_repo()
          set_repo_domain()
            New methods.
            Establish and examine mappings between repositories and
            domains.
          init_bit_transport_impl()
          bit_transport_impl()
          bit_transport_port()
            Added repository key to parameters.
            Added separate transport for each individual repostory's
            Builtin Topics.
          get_repository()
          set_repo_ior()
            Added repository key to parameters.

          Added a map to store object references to more than one
          repository and the infrastructure to manage the map and its
          usage.

        * dds/DCPS/transport/framework/TransportFactory.cpp:
          Changed semantics from throwing Transport::NotFound to
          returning nil() when an implementation is not available.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
          Added some additional diagnostics above level 4.  Demoted not
          finding a subscription to delete from error to warning.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Use new set_repo_ior() signature.  Done after initialization
          as well since we create a reference at this time now.

        * dds/DCPS/DomainParticipantImpl.cpp:
          Use new get_repository() signature.
          Use new bit_transport_impl() signature.

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
          Use new get_repository() signature.

        * tests/DCPS/MultiRepoTest/DataWriterListenerImpl.h:
        * tests/DCPS/MultiRepoTest/DataWriterListenerImpl.cpp:
        * tests/DCPS/MultiRepoTest/ForwardingListener.h:
        * tests/DCPS/MultiRepoTest/ForwardingListener.cpp:
        * tests/DCPS/MultiRepoTest/MultiRepoTest.mpc:
        * tests/DCPS/MultiRepoTest/README:
        * tests/DCPS/MultiRepoTest/TestConfig.h:
        * tests/DCPS/MultiRepoTest/TestConfig.cpp:
        * tests/DCPS/MultiRepoTest/TestException.h:
        * tests/DCPS/MultiRepoTest/TestMonitor.h:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.h:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/DCPS/MultiRepoTest/domain1_ids:
        * tests/DCPS/MultiRepoTest/domain2_ids:
        * tests/DCPS/MultiRepoTest/domain3_ids:
        * tests/DCPS/MultiRepoTest/monitor.cpp:
        * tests/DCPS/MultiRepoTest/monitor.ini:
        * tests/DCPS/MultiRepoTest/run_test.pl:
        * tests/DCPS/MultiRepoTest/system.cpp:
        * tests/DCPS/MultiRepoTest/system1.ini:
        * tests/DCPS/MultiRepoTest/system2.ini:
        * tests/DCPS/MultiRepoTest/system3.ini:
        * bin/dcps_tests.lst:
          Add new MultiRepoTest test cases.  This can be used as an
          example of how an application can use the new feature.

Wed Dec 12 19:28:46 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * rules.dds.GNU:

          Find OpenDDS libraries in $(DDS_ROOT)/lib, not $(DDS_ROOT)/dds.
          Also added a comment regarding when MPC features need to be listed in
          this file.

Tue Dec 11 00:00:56 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/ZeroCopyAllocator_T.cpp:

          Resolved warnings from VC8 warning level 4.  Thanks to Charles
          Calkins <calkinsc at ociweb dot com> for sending the patches.

Fri Dec  7 16:05:54 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.cpp:

          Added byte ordering to the serialized stream.

Wed Nov 21 22:23:07 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/cross_tests.lst:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
          Extend test to test various transport configurations (tcp, udp,
          mcast, reliable mcast & default mcast).

Mon Nov 12 22:58:14 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:

          Changed integer counters to ACE_Atomic_Op's.  These track the number
          of allocations and frees from the allocator for debugging purposes
          only.  Thanks to Wilfried Moritz
          <wilfried dot moritz at ila dot uni-stuttgart dot de> for the
          contribution.

Mon Oct  1 16:53:45 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/CrossSync.pm:
          Bail out upon timeout.
          Delete temporary config files.

Thu Sep 13 17:42:09 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/CrossSyncDDS.pm:
          Add method to construct uniqid.

Wed Sep 12 20:48:30 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/cross_tests.lst:
          New list of crossplatform tests.

        * bin/dcps_tests.lst:
          Remove CrossPlatform test from general tests list.

        * tests/DCPS/Crossplatform/test_list.txt:
          Adding build configuration info.

Mon Sep 10 16:48:59 UTC 2007  Scott Harris <harris_s at ociweb dot com>

        * tests/DCPS/LivelinessTest/README

          RT 11603 - removed comments about test failure because the it was fixed
          by Fri Jun  1 19:56:29 UTC 2007  Yan Dai  <dai_y@ociweb.com>.

Tue Aug 28 19:00:59 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DevGuideExamples/DCPS/Messenger_ZeroCopy/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/subscriber.cpp:
          Add wide-char support.

        * dds/DCPS/transport/framework/EntryExit.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.cpp:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
          Bumping up log level. Slight performance boost in ordinary
          builds.

Tue Aug 21 17:56:14 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/CrossSync.pm:
        * bin/CrossSyncDDS.pm:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/Crossplatform/test_list.txt:
          Add wide char support to DDS core. Currently only compatible
          with DOC TAO release. Haven't yet tested InfoRepo persistence.

        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
          Add wide char support to example.

Mon Aug 20 22:39:51 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/dcps_tests.lst:
          Suspending CrossPlatform test.

Fri Aug 17 14:12:44 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/Crossplatform/test_list.txt:
          Add involved build names to the schedule file.

Tue Aug 14 16:32:55 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/CrossSync.pm:
        * bin/CrossSyncDDS.pm:
          Simple framework for crossplatform testing.

        * bin/dcps_tests.lst:
        * tests/DCPS/Crossplatform:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/Crossplatform/README:
        * tests/DCPS/Crossplatform/test_list.txt:
          New crossplatform test piggybacking on the DevGuide Messenger
          test. This directory is intended to hold test scripts that drive
          other concrete tests across the network.

Wed Jul 18 21:30:21 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/set-eol.cmd:

          Fixed a bug in the regexp that was detecting text files that ended
          with no line ending as if they had the wrong sort of line ending.

Wed Jul 18 20:09:31 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Revert to the default LF Wait Strategy. The RW startegy doesn't
          detect server side connection closures when using oneway
          invocations (outbound OpenDDS invocations are mostly oneways).

Fri Jul 13 15:48:59 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:
          minor layout changes.

        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
          Use default Topic and DataWriter QOS indentifiers instead of
          explicitly creating default QOS objects. This simplifies code.

        * dds/DCPS/Service_Participant.cpp:
          minor wide-char related modifications.

Tue Jul 10 17:07:05 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * examples/DCPS/DistributedContent/ApplicationLevel.cpp:
        * examples/DCPS/DistributedContent/ApplicationLevel.h:
        * examples/DCPS/DistributedContent/main.cpp:

          Added ability to make the example user interactive.
          Define the DDS_DISTRIBUTEDCONTENT_REQUIRES_USER macro to
          build the user interaction code.

Mon Jul  9 21:28:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mwc:

          Fixed typo in comment.

Mon Jul  9 20:52:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/set-eol.cmd:

          Added a script to fix files that show up with Unix line endings on
          Windows systems.

Mon Jul  9 19:37:59 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * examples/DCPS/IntroductionToOpenDDS:

        * examples/DCPS/IntroductionToOpenDDS/AAA_README.txt:
        * examples/DCPS/IntroductionToOpenDDS/ExchangeEventDataReaderListenerImpl.h:
        * examples/DCPS/IntroductionToOpenDDS/ExchangeEventDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/QuoteDataReaderListenerImpl.h:
        * examples/DCPS/IntroductionToOpenDDS/QuoteDataReaderListenerImpl.cpp:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.idl:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mpc:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoter.mwc:
        * examples/DCPS/IntroductionToOpenDDS/StockQuoterCommon_Export.h:
        * examples/DCPS/IntroductionToOpenDDS/dds_tcp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/domain_ids:
        * examples/DCPS/IntroductionToOpenDDS/pub_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/publisher.cpp:
        * examples/DCPS/IntroductionToOpenDDS/run_tcp.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_tcp_bit_off.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_udp.bat:
        * examples/DCPS/IntroductionToOpenDDS/run_udp_bit_off.bat:
        * examples/DCPS/IntroductionToOpenDDS/sub2_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/sub_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/subscriber.cpp:
        * examples/DCPS/IntroductionToOpenDDS/tcp.conf:
        * examples/DCPS/IntroductionToOpenDDS/udp.conf:

          Added the source code to the "introduction" article example from the
          website.  This will ensure that that we keep the code up-to-date
          since it will be compiled in the nightly builds.

Mon Jul  9 15:49:20 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Bumped version number to 1.01 in preparation for next release.  The
          actual version number may change before the release.

Mon Jul  9 14:58:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * OpenDDS version 1.0 released.

Mon Jul  9 14:46:38 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:

          Added info on ActiveState Perl.

Sun Jul  8 16:10:37 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/Sync/Sync.mpc:

          Added "libpaths += " for new location of the library.

Sun Jul  8 15:39:28 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/ZeroCopySeq_T.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.cpp:

          Added #pragma warning disable for VC8.  std::copy is not used here in
          a way that could lead to buffer overflow.

Fri Jul  6 21:04:37 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:

          Fixed incorrect description of the Perl dependency.

Fri Jul  6 19:19:30 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * docs/Configuration_Settings.html:

          Documented the DCPSBitTransportIPAddress setting.

Fri Jul  6 18:06:18 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Built-In Topic topic for Participant was being stored into wrong
          variable.

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:

          Fixed Built-In Topic transport only using localhost.

          Added new configuration variable "DCPSBitTransportIPAddress"
          to set the ip address (not port) for the Built-In Topic
          transport.

Fri Jul  6 17:33:43 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:
        * docs/INSTALL:

          Added more information on which platforms are tested, etc.

Thu Jul  5 22:21:50 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These changes intended to fix the bugs and work around limitations
        observered during sub_init_loop test debugging.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Updated logging message to provide more detail infos.

        * dds/DCPS/WriteDataContainer.cpp:

          Added locking in unregister_all function to access the sending_data_
          list since the function may be called from the thread calling
          delete_datawriter which does not hold the lock in advance.

        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:

          Made the send_start() and remove_links() also acquire the
          lock in the provided DataLinkSet. This would fix the access
          violation when send_start is using the link while the link
          is removed from the DataLinkSet.

        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:

          Fixed a bug in visit_element() that should pass true( data
          dropping is triggered by transport) to data_dropped () call
          instead of passing false (data dropping is triggered
          by datawriter via remove_sample() call).

        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:

          Added get_keys() and exist() function to avoid the map iteration
          outside ReceiveListenerSet class scope.
          Added lock to protect the internal map to fix the access violation
          on the ReceiveListener object.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:

          Applied the new functions defined in ReceiveListenerSet.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Made the reconnect() function check if the send/receive strategy
          are reset to nil or not to avoid the access violation. If strategies
          are reset, a new strategy will be created.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made the strategy hold a reference of the connection while
          receiving/sending to avoid the problem that the connection
          is destroyed while receiving/sending samples.
          Updated some logging messages to provide the function name.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Added friendship with SimpleTcpDataLink so the
          connect_datalink() can be called in
          SimpleTcpDataLink::reconnect().

        * tests/DCPS/sub_init_loop/pub.ini:

          Made the publisher not try to reconnect to reduce the time
          period between connection tear down by the reconnect thread
          and association removing by the cleanup task thread.

        * tests/DCPS/sub_init_loop/run_test.pl:

          Extended the publisher timeout since the unregistering the
          datawriter may take longer.

        * tests/DCPS/sub_init_loop/subscriber.cpp:

          Added time delay for the datareader restart. This is a
          work around of the problem that the cleanup task removes
          the newly added associations and cause the datareader
          timeout on waiting for new connection. The real solution
          is to get a snapshot of the associations in the datalink
          at the time the reconnect attempt failed and the cleanup
          task should remove the associations based on the snapshot
          of the associations.

Thu Jul  5 22:21:49 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:

          Updated download URL.

        * docs/Configuration_Settings.html:
        * docs/DDS_info.txt:

          Moved these files from the root to docs/.

        * Configuration_Settings.html:
        * DDS_info.txt:

          Removed these files.  They are now in docs/.

Thu Jul  5 21:15:23 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:

          Added libpaths assignment to find the Sync library in $DDS_ROOT/lib.

Thu Jul  5 20:30:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/Sync/Sync.mpc:

          Added libout assignments so the libraries end up in $DDS_ROOT/lib.

Thu Jul  5 20:12:54 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          Changed project name to OpenDDS.

Thu Jul  5 18:03:29 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * history:
        * history/ChangeLog-01:

          Adding old ChangeLog entries to a file in the history directory.

Thu Jul  5 16:27:10 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * 14a_README:
        * AUTHORS:
        * DDS_release_notes.txt:
        * README:
        * docs/INSTALL:

          Updated for the forthcoming OpenDDS 1.0 release

        * ***ALL FILES***:

          This product is now known as OpenDDS.  Removed references to TAO DDS
          in text files, comments, and as namespace/module names.  Made other
          fixes as necessary to make it all build and pass tests.

Tue Jul  3 19:55:32 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/ZeroCopySeq_T.h:
        * dds/DCPS/ZeroCopySeq_T.cpp:

          Added comments regarding the zero-copy sequence implementation.

Tue Jul 03 00:50:18 UTC 2007  Scott Harris  <harris_s@ociweb.com>

       *  DDS_release_notes.txt:

          Add a clarification.

        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:

          Update the example per DDS_release_notes.txt recommondations
          for switch from remote to local interfaces.

Mon Jul  2 22:36:05 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/DcpsIntegration/topic.cpp:

          Added sleep for 2 seconds to wait for all built in
          datareaders to receive the add_associations from InfoRepo
          before delete the subscriber. Otherwise the add_associations
          will not add the remote_id to the transport mapping
          and the remove_associations will fail to find the remote id.

Mon Jul  2 22:05:48 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataReaderImpl.cpp:

          Added logging to help debugging association change.

Mon Jul  2 20:59:30 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest4_0/main.cpp:

          Corrected the view state to accommodate the view state changes
          for RT 10955.

        * tests/DCPS/FooTest4_0/run_test.pl:

          Made test DCPSInfoRepo default to not turn on ORBDebugLevel.

Sun Jul  1 20:46:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Updated to reflect new location of DevGuideExamples tests.

Sat Jun 30 16:28:26 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/ViewState/main.cpp:

          Removed unused local variable.

Fri Jun 29 21:51:45 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DevGuideExamples/DCPS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DCPS/Messenger/DataReaderListener.cpp:
          Removed unrequired methods.

        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
          Change variable name to generic transport type.

Fri Jun 29 21:14:07 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These changes are made to fix the view state.(See RT 10955)

        * bin/DCPS/CPPTemplate.pm:

          Updated the read/take operations to update the view state
          after finishing read one instance instead of reading first
          sample and update the view state only when the most recent
          generation samples in the instance are read. The samples
          of same instance returned from single read() should have
          same view state.

        * dds/DCPS/InstanceState.h:
        * dds/DCPS/InstanceState.inl:

          Added method to check if a received sample belongs to current
          generation.

        * tests/DCPS/ViewState/README:
        * tests/DCPS/ViewState/Simple.idl:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ViewState/domain_ids:
        * tests/DCPS/ViewState/main.cpp:
        * tests/DCPS/ViewState/run_test.pl:

          Added view state test.

        * tests/DCPS/ZeroCopyRead/main.cpp:

          Uncommented the code to verify the view state.

        * bin/dcps_tests.lst:

          Added view state test to list.

Fri Jun 29 18:41:25 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DevGuideExamples/DCPS:
        * DevGuideExamples/DDS:
          The current DevGuide examples are all for DCPS. Renaming
          directory 'DDS' to 'DCPS'.

Thu Jun 28 17:01:23 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Util.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Made a number of fixes for Sun's CC.

Wed Jun 27 21:22:25 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/TransientLocalTest/run_test.pl:

          Made subscriber start 2 seconds after publisher send all samples to avoid
          the timing issue that the subscriber may start and finish in 1 second while
          the publisher is waiting for it to start until timeout. This should fix the
          TransientLocalTest test failure occassionally.

Wed Jun 27 20:25:51 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/Util.h:

          More std::map and std::set replacements for ACE equivalents.

Wed Jun 27 19:41:00 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:

          More std::map replacements for ACE equivalents.

Wed Jun 27 18:48:54 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          More std::map replacements for ACE equivalents.

Wed Jun 27 16:20:33 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:

          More std::map replacements for ACE equivalents.

Wed Jun 27 15:13:03 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          More std::map replacements for ACE equivalents.

Wed Jun 27 14:18:41 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:

          More std::map replacements for ACE equivalents.

Tue Jun 26 23:21:57 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:

          More std::map replacements for ACE equivalents.

Tue Jun 26 21:57:56 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          One more attempt at getting Doxygen to understand ACE_THROW_SPEC().

Tue Jun 26 21:34:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:

          Removed and unused local variable.

Tue Jun 26 20:00:19 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          No portable way to reference TAO (i.e. $TAO_ROOT) inside the doxygen
          file, so we can't reference it.  In the future we should support
          linking to ACE+TAO documentation via the use of doxytag and
          installdox.

Tue Jun 26 19:47:51 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/Serializer.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/InfoRepo/UpdateManager.h:

          Fixed comments that were causing Doxygen to emit errors/warnings.

        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/transport/mcast_simple/pub_main.cpp:
        * tests/transport/mcast_simple/sub_main.cpp:

          Fixed typo which was including a .cpp instead of a header.

        * tests/transport/mcast_simple/mcast.conf:
        * tests/transport/mcast_simple/run_test.pl:

          Changed this test to dynamically load the transport library, unless
          it's a static build.

Tue Jun 26 19:10:03 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:

          More std::map and std::set replacements for ACE equivalents.

Tue Jun 26 17:37:02 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/WriteDataContainer.h:

          Added a space to resolve errors like:
          error: `<::' cannot begin a template-argument list

Tue Jun 26 18:28:14 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:

          Made the counter in file scope instead of in the function scope so
          the set_base_*_id will set the same counter as get_*_id. This would
          fix the Prst_delayed_subscriber test failure.

Tue Jun 26 15:56:16 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/run_test.pl:

          Fixed the logic for loading transports in the subscriber process and
          some typos in the Perl script.

Tue Jun 26 15:35:26 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/WriteDataContainer.cpp:

          More std::map and std::set replacements for ACE equivalents.

Mon Jun 25 22:00:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_info.txt:
        * docs/design/IDL_compiler.txt:

          Removed characters that were outside of the standard ASCII range.

Mon Jun 25 20:20:39 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/Util.h:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:

          More std::map and std::set replacements for ACE equivalents.

Mon Jun 25 16:24:29 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/Definitions.h:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/Util.h:

          More std::map and std::set replacements for ACE equivalents.

Mon Jun 25 15:53:22 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/run_test.pl:

          Fixed a typo that stopped this test from running.

Mon Jun 25 15:47:59 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Fixing spacing error that prevented tests from running.

Fri Jun 22 20:44:44 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.h:

          Removed unneeded typedefs.

Fri Jun 22 20:21:59 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:

          Clarified discussion of the InstanceHandles when BIT is disabled,
          based on email from Scott Harris.

Fri Jun 22 19:40:29 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * tests/DCPS/CorbaSeq/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/pub_main.cpp:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest3_2/sub_main.cpp:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:
        * tests/DCPS/ZeroCopyRead/main.cpp:
        * tests/DCPS/ZeroCopyRead/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/mcast_simple/mcast.conf:
        * tests/transport/mcast_simple_n/mcast.conf:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/udp.conf:
        * tests/transport/udp_simple_n/pub_main.cpp:
        * tests/transport/udp_simple_n/sub_main.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Continued making tests compatible with static builds, especially with
          the old (1.4a) ACE svc config behavior where processing "dynamic"
          directives will yield an error when the dynamic library is not found,
          even if the service object is already in the ACE service repository.

Fri Jun 22 18:58:47 USMST 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Made the DataWriter/DataReader remove_all_association() calls
          before the un-registering from transport, otherwise some
          callbacks resulted from the un-registration will be lost.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Made send strategy not try to send the graceful disconnect message
          when the terminate_send() is called due to a non-graceful disconnect
          before a graceful link shutdown.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Added send strategy and receive strategy nil value checking to avoid
          access violation since the reconnect and handle_timeout may be
          called after connection is re-established and the send/recv strategies
          are reset to nil.

        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Reconnect/subscriber.cpp:

          Added a new option to indicate if the on_subscription_lost callback
          needs be verified. Whether the listener receives the callback depends
          on the timing of remove_association and the handle_timeout call
          on the passive connection. The bp_timeout test will not verify
          on_subscription_lost callback since the listener receives the
          callback randomly.

Fri Jun 22 14:55:35 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Converted more hash maps to std::map.

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Fixed a bug that resulted in test failures on Windows.

Fri Jun 22 00:04:37 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:

          Updated comments.

Thu Jun 21 21:05:06 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.cpp:

          Allow these transport libraries to be used in a static build.

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/LivelinessTest/LivelinessTest.mpc:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/transport/mcast_simple/DDS_transport_mcast_simple.mpc:
        * tests/transport/mcast_simple/pub_main.cpp:
        * tests/transport/mcast_simple/sub_main.cpp:

          Continued enabling tests for static builds.  These are the tests that
          use transports other than TCP, plus some that use TCP that I forgot
          to fix yesterday.

Thu Jun 21 20:47:18 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataSampleList.inl:

          Fixed a bug that copy constructor incorrectly copied num_subs_.

        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Made the sub/pub repo id (participant id and topic id) generator
          in DCPSInfoRepo to generate unique id per DCPSInfoRepo instance
          instead of per domain. This would allow multiple domains in the
          same process(connect to the same DCPSInfoRepo instance) share the
          same transport.

        * DDS_release_notes.txt:

          Added notes for repo id generation scheme change.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Removed some old TBD comments.

        * tests/DCPS/BuiltInTopic/main.cpp:

          Reverted back the built-in topic checking participant data.

Thu Jun 21 16:22:05 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Util.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Converted ACE_Hash_Map_Manager_Ex to std::map.

Thu Jun 21 14:05:56 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * performance-tests/DCPS/TransportLatency/DataReaderListener.cpp:
        * performance-tests/DCPS/TransportLatency/Writer.cpp:
        * performance-tests/DCPS/TransportLatency/subscriber.cpp:

        * performance-tests/DCPS/dummyTCP/DummyTcpReceiveStrategy.cpp:
        * performance-tests/DCPS/dummyTCP/DummyTcpSendStrategy.cpp:
        * performance-tests/DCPS/dummyTCP/PerformanceTest.h:
        * performance-tests/DCPS/dummyTCP/PerformanceTest.cpp:

          Changes to finish transport framework performance test on
          the subscriber side.

Wed Jun 20 21:28:50 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Augmented the existing MPC note for the MPC change directly below
          this one, and clarified the default BIT setting note in the current
          version.

Wed Jun 20 21:16:46 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_reliable_multicast.mpb:
        * MPC/config/dcps_tcp.mpb:
        * MPC/config/dcps_unreliable_dgram.mpb:
        * MPC/config/dcpsexe_with_reliable_multicast.mpb:
        * MPC/config/dcpsexe_with_tcp.mpb:
        * MPC/config/dcpsexe_with_unreliable_dgram.mpb:

          Added base projects for the three transport libraries, refactored the
          dcpsexe_with_* base projects to use these new base projects.

Wed Jun 20 21:11:25 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:
          Moved my note from
          Wed Jun  6 15:16:42 UTC 2007  Ciju John  <johnc at ociweb dot
          com>
          to its correct chronological position (under V 0.12 notes).

Wed Jun 20 20:32:01 UTC 2007  Jonathan S. Pollack  <pollack_j@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Converted ACE_Hash_Map_Manager_Ex to std::map.

Wed Jun 20 19:28:34 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          Doxygen appears to be confused by ACE_THROW_SPEC((...)), attempting
          to fix this.

Wed Jun 20 18:42:11 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Removed !STATIC from the majority of tests.  The changes below allow
          the tests to use SimpleTCP in a static build.  Later I'll go back and
          enable the other transports where needed.
          Also uncommented the tests/DCPS/BuiltInTopic/run_test.pl ignore_*
          tests since BuiltInTopics are now supported.  There is a bug with
          ignore_part but Yan will fix that shortly so for now we will see it
          as red on the scoreboard.

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/TCPListener.mpc:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * tests/DCPS/CorbaSeq/CorbaSeq.mpc:
        * tests/DCPS/CorbaSeq/publisher.cpp:
        * tests/DCPS/CorbaSeq/subscriber.cpp:
        * tests/DCPS/DcpsIntegration/dcps_integration.mpc:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest3_0/FooTest3_0.mpc:
        * tests/DCPS/FooTest3_0/pub_main.cpp:
        * tests/DCPS/FooTest3_0/sub_main.cpp:
        * tests/DCPS/FooTest3_1/FooTest3_1.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * tests/DCPS/FooTest3_1/pub_main.cpp:
        * tests/DCPS/FooTest3_1/sub_main.cpp:
        * tests/DCPS/FooTest3_2/FooTest3_2.mpc:
        * tests/DCPS/FooTest4/FooTest4.mpc:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/FooTest4_0.mpc:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/LivelinessTest/LivelinessTest.mpc:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/MultiDPTest.mpc:
        * tests/DCPS/MultiDPTest/common.cpp:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/UnitTest.mpc:
        * tests/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * tests/transport/simple_bp/pub_main.cpp:
        * tests/transport/simple_bp/sub_main.cpp:
        * tests/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * tests/transport/simple_bp_rm/pub_main.cpp:
        * tests/transport/simple_bp_rm/sub_main.cpp:
        * tests/transport/simple_n/DDS_transport_simple_n.mpc:
        * tests/transport/simple_n/pub_main.cpp:
        * tests/transport/simple_n/sub_main.cpp:

          Enabled SimpleTCP in static builds on most tests that are run for the
          scoreboard.  tests/DCPS/FooTest5_0 is left as runtime-loading so that
          this functionality is tested too.

Mon Jun 18 21:40:30 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/dummyTCP/PerformanceTest.h:
        * performance-tests/DCPS/dummyTCP/PerformanceTest.cpp:

          Moved "using namespace std" to the cpp file.  This can't go in the h
          file because it has unwanted side-effects in other compilation units
          that include the header.

Mon Jun 18 19:12:58 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * DDS_TAO.mwc:

          Added the MPC/config to the include path.
          Use ace.mpc since it is the only library
          we want to use from ace directory.

Mon Jun 18 17:37:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/transport/reliable_multicast/reliable_multicast.mpc:

          Changed an "includes =" to "includes +=".  This was a typo from last
          Thursday's commit.

Mon Jun 18 15:25:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/TransportLatency/TransportLatency.mpc:

          Added an 'after' for the DummyTcp library.

Mon Jun 18 15:10:50 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * performance-tests/DCPS/TransportLatency/Messenger.idl:
        * performance-tests/DCPS/TransportLatency/Writer.cpp:

          Defined the time_t struct in the idl instead of using
          DDS::Time_t to resolve the compile errors in the
          built_in_topics=0 build.

Mon Jun 18 14:56:51 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * examples/DCPS/DistributedContent/DistributedContent.mpc:

          Added back the IDL_Files section, this is needed after all.

Mon Jun 18 14:11:11 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * examples/DCPS/DistributedContent/DistributedContent.mpc:

          Simplified the mpc file and added 'requires += built_in_topics'.

        * examples/DCPS/DistributedContent/run_test.pl:

          Removed a stray '-' on a line by itself.

Sat Jun 16 17:36:10 MST 2007  Trevor Fields  <fields_t@ociweb.com>

        * examples/DCPS/DistributedContent/main.cpp:

          Fixed warning about no end of line.

Fri Jun 15 21:39:34 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * examples/DCPS/DistributedContent/AbstractionLayer.cpp:
        * examples/DCPS/DistributedContent/AbstractionLayer.h:
        * examples/DCPS/DistributedContent/ApplicationLevel.cpp:
        * examples/DCPS/DistributedContent/ApplicationLevel.h:
        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * examples/DCPS/DistributedContent/domain_ids:
        * examples/DCPS/DistributedContent/FileInfo.idl:
        * examples/DCPS/DistributedContent/FileInfoListener.cpp:
        * examples/DCPS/DistributedContent/FileInfoListener.h:
        * examples/DCPS/DistributedContent/main.cpp:
        * examples/DCPS/DistributedContent/README:
        * examples/DCPS/DistributedContent/run_test.pl:
        * examples/DCPS/DistributedContent/simple_tcp.conf:

          Added an example that mimics a simple distributed content system.
          The code demonstrates using a class to abstract DDS logic
          from application logic and using a publisher and subscriber
          to reference to the same topic but not associate with each other.

Fri Jun 15 21:23:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/dummyTCP/PerformanceTest.cpp:

          Added the required pre-compiler header include.

Fri Jun 15 19:17:20 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * performance-tests/DCPS/dummyTCP/PerformanceTest.h:

          Added the missing export macro to fix compile errors.

Fri Jun 15 16:39:05 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * performance-tests/DCPS/TransportLatency/TransportLatency.mpc:

          Renamed file.

        * performance-tests/DCPS/dummyTCP/PerformanceTest.h:
        * performance-tests/DCPS/dummyTCP/PerformanceTest.cpp:

          Added the missing files.

        * performance-tests/DCPS/TransportLatency/Messenger.mpc:

          Removed this file. Renamed.


Fri Jun 15 16:19:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/ZeroCopyRead/main.cpp:

          Fixed scoreboard warnings.

Fri Jun 15 14:39:31 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * performance-tests/DCPS/TransportLatency:

        * performance-tests/DCPS/TransportLatency/DataReaderListener.h:
        * performance-tests/DCPS/TransportLatency/DataReaderListener.cpp:
        * performance-tests/DCPS/TransportLatency/Messenger.idl:
        * performance-tests/DCPS/TransportLatency/Messenger.mpc:
        * performance-tests/DCPS/TransportLatency/README:
        * performance-tests/DCPS/TransportLatency/Writer.h:
        * performance-tests/DCPS/TransportLatency/Writer.cpp:
        * performance-tests/DCPS/TransportLatency/domain_ids:
        * performance-tests/DCPS/TransportLatency/mcast.conf:
        * performance-tests/DCPS/TransportLatency/pub.ini:
        * performance-tests/DCPS/TransportLatency/pub_mcast.ini:
        * performance-tests/DCPS/TransportLatency/pub_reliable_mcast.ini:
        * performance-tests/DCPS/TransportLatency/pub_udp.ini:
        * performance-tests/DCPS/TransportLatency/publisher.cpp:
        * performance-tests/DCPS/TransportLatency/reliable_mcast.conf:
        * performance-tests/DCPS/TransportLatency/run_corbaloc_test.pl:
        * performance-tests/DCPS/TransportLatency/run_ns_test.pl:
        * performance-tests/DCPS/TransportLatency/run_test.pl:
        * performance-tests/DCPS/TransportLatency/sub.ini:
        * performance-tests/DCPS/TransportLatency/sub_mcast.ini:
        * performance-tests/DCPS/TransportLatency/sub_reliable_mcast.ini:
        * performance-tests/DCPS/TransportLatency/sub_udp.ini:
        * performance-tests/DCPS/TransportLatency/subscriber.cpp:
        * performance-tests/DCPS/TransportLatency/tcp.conf:
        * performance-tests/DCPS/TransportLatency/udp.conf:

          Added a new test for the current Transport Framework.
          This test currently only test the latency on the publisher side.
          I will add the corresponding test on the subscriber side later.


        * performance-tests/DCPS/dummyTCP/DummyTcpSendStrategy.cpp:

          Inserted the test stopping point at send_bytes_i.

Fri Jun 15 13:48:39 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/ZeroCopyAllocator_T.h:
        * dds/DCPS/ZeroCopyAllocator_T.inl:
        * dds/DCPS/ZeroCopyAllocator_T.cpp:
        * dds/DCPS/ZeroCopyInfoSeq_T.h:
        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
        * dds/DCPS/ZeroCopySeq_T.h:
        * dds/DCPS/ZeroCopySeq_T.inl:
        * dds/DCPS/ZeroCopySeq_T.cpp:

          Fixed build errors on scoreboard and some whitespace normalization.

Thu Jun 14 21:00:22 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/transport/reliable_multicast/reliable_multicast.mpc:

          Removed dependencies on TAO and the core DDS library, now it just
          links against the ReliableMulticast transport lib and ACE.

Thu Jun 14 19:55:48 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/ZeroCopyAllocator_T.h:
        * dds/DCPS/ZeroCopyAllocator_T.inl:
        * dds/DCPS/ZeroCopyInfoSeq_T.h:
        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
        * dds/DCPS/ZeroCopySeqBase.h:
        * dds/DCPS/ZeroCopySeq_T.h:
        * dds/DCPS/ZeroCopySeq_T.inl:
        * dds/DCPS/ZeroCopySeq_T.cpp:

          Adapted the ZeroCopy sequence implementation be compatible with the
          requirements of the CORBA/C++ mapping for unbounded value sequences.

        * tests/DCPS/ZeroCopyRead/Simple.idl:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:
        * tests/DCPS/ZeroCopyRead/main.cpp:
        * tests/DCPS/ZeroCopyRead/run_test.pl:

          Extended this test to cover new functionality in ZeroCopy sequences.

        * tests/DCPS/unit/MyTypeSupportImpl.h:

          This test doesn't use the generated FooDataReaderImpl so it needed to
          be augmented to have the additional virtual function.

        * dds/DCPS/ZeroCopySeqBase.inl:
        * dds/DCPS/ZeroCopySeqBase.cpp:

          Removed these files.  They are no longer needed.

        * performance-tests/DCPS/Sync/SyncServer_i.cpp:

          Logic error fixed, unrelated to Zero-Copy but found during testing.

Wed Jun 13 14:52:59 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * performance-tests/DCPS/dummyTCP:
          Moved the dummyTCP to here, because the dds/DCPS/transport
          directory is for the core code of the middleware like
          $TAO_ROOT/tao.  It's not for testing code. Thanks to Adam
          for this suggestion.

        * dds/DCPS/transport/dummyTCP:
        * dds/DCPS/transport/dummyTCP/DummyTcp.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp.mpc:
        * dds/DCPS/transport/dummyTCP/DummyTcp.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpAcceptor.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpAcceptor.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnectionReplaceTask.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpFactory.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpFactory.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpFactory.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpGenerator.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpGenerator.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpLoader.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpLoader.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpReceiveStrategy.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpReceiveStrategy.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpReconnectTask.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpReconnectTask.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpSendStrategy.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpSendStrategy.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpSendStrategy_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpSynchResource.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpSynchResource.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpTransport.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpTransport.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpTransport_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp_export.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp_pch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp_pch.cpp:

          Removed these files.

Tue Jun 12 20:30:05 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * dds/DCPS/transport/dummyTCP:
        * dds/DCPS/transport/dummyTCP/DummyTcp.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp.mpc:
        * dds/DCPS/transport/dummyTCP/DummyTcp.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpAcceptor.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpAcceptor.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConfiguration_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnectionReplaceTask.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpConnection_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpDataLink_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpFactory.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpFactory.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpFactory.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpGenerator.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpGenerator.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpLoader.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpLoader.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpReceiveStrategy.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpReceiveStrategy.inl:
        * dds/DCPS/transport/dummyTCP/DummyTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpReconnectTask.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpReconnectTask.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpSendStrategy.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpSendStrategy.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpSendStrategy_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpSynchResource.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpSynchResource.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpTransport.h:
        * dds/DCPS/transport/dummyTCP/DummyTcpTransport.cpp:
        * dds/DCPS/transport/dummyTCP/DummyTcpTransport_rch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp_export.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp_pch.h:
        * dds/DCPS/transport/dummyTCP/DummyTcp_pch.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Added the DummyTcp transport skeleton for testing
          the performance of current transport implementation.

Tue Jun 12 19:06:13 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Check the mode status before calling resume_send.
          This avoids some unnecessary calls when the send mode is
          "direct".

Thu Jun  7 19:53:50 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          Method comments improvements for Doxygen.

Thu Jun  7 19:58:30 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/dcps_tests.lst:
          Don't run InfoRepo_Populate test in minimum_corba builds.

        * performance-tests/DCPS/InfoRepo_population/SyncServer.cpp:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
          Wait for SychServer to fully initialize before starting test.

Wed Jun  6 22:36:50 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:

          Added an "after" to relate this file's *Idl project to the Sync_Idl
          project in ../Sync/Sync.mpc.  This is needed so that the SyncExtC.cpp
          and SyncC.h files have the correct relative timestamps in incremental
          builds.

Wed Jun  6 20:21:36 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

        * tests/DCPS/Reconnect/Writer.cpp:

          Various changes to fix the reconnect problem when publisher is
          getting restarted. Three are three problems identified and fixed.
          1. The test itself needs to call get_matched_subscriptions() to
             make sure the writer has correct handle before sending data.
          2. SendStrategy needs a reset function which resets the connection.
          3. The orb thread needs to check the connection before sending
             the FULLY_ASSOCIATED message to the publisher.

Wed Jun  6 17:47:15 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
        * dds/DCPS/ZeroCopySeq_T.cpp:

          Fixed a warning that should explicitly initialize the base
          template in the sequence copy constructor.

Wed Jun  6 15:16:42 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:
          Add note regards participants BIT support default setting.

Mon Jun 04 23:06:56 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Moved the read* & take* precondition checks to a common function.
          Made sure to set owns(false) when zero-copy read/take is done.
          I also fixed that take_instance did not delete the sample when it
          took it -- Yan did this on Friday but I had not updated.

        * bin/dcps_tests.lst:
        * tests/DCPS/ZeroCopyRead/main.cpp:
        * tests/DCPS/ZeroCopyRead/run_test.pl:

          Added the -i option to run with read_instance and take_instance
          methods. Cleaned up the test a bit.

Mon Jun  4 18:29:18 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/ZeroCopyInfoSeq_T.h:
        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:

          Added copy constructor to ZeroCopyInfoSeq template.

        * dds/DCPS/ZeroCopySeq_T.h:
        * dds/DCPS/ZeroCopySeq_T.cpp:

          Added copy constructor to ZeroCopySeq template.

        * tests/DCPS/ZeroCopyRead/main.cpp:

          Added zero-copy sequence copy constructor test to test case 9.

        * tests/DCPS/ZeroCopyRead/run_test.pl:

          Removed a duplicate option from InfoRepo command line.

Fri Jun  1 23:31:01 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed the problem that take_instance() implementation did not remove
          the sample from instance after read.
          Basically I rolled back the *DataReaderImpl::take_instance()
          implementation to the version before
          "Wed May 30 19:19:38 UTC 2007  Scott Harris  <harris_s@ociweb.com>"
          and merged the changes needed for zero copy.

        * tests/DCPS/FooTest4/run_test.pl:

          Turned off ORBDebugLevel for InfoRepo and removed duplicated command
          line options.

Fri Jun  1 21:45:29 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Renamed FooDataWriter::marshal() to dds_marshal() since marshal()
          conflicts with a method inherited from the stub (due to the local-
          interface implementation).

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          To maintain symmetry with dds_marhsal(), renamed demarshal() to
          dds_demarshal() and made it pure-virtual.

        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Added dds_demarshal() since it's now pure-virtual in the base.

Fri Jun  1 19:56:29 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Added new virtual method release_instance to DCPS type
          DataReaderImpl that removes the instance with the provided
          handle from the instance - handle map.

        * bin/dcps_tests.lst:

          Added Liveliness tests.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/InstanceState.h:
        * dds/DCPS/InstanceState.inl:
        * dds/DCPS/InstanceState.cpp:

          Corrected the DataReader liveliness implementation as stated
          in spec.
          Made the datareader check if an instance has no samples when
          it receives the dispose message or liveliness detection finds
          the writer is dead. If it is then the instance/handle will be
          removed from internal maps in DataReader.

        * tests/DCPS/LivelinessTest/run_test.pl:

          Fixed test to run with current DDS.

        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Added implementation for pure virtual function
          release_instance_i() to avoid compilation error.

Fri Jun  1 17:54:02 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:

          Reverted back to the old version since the previous friendship
          hack makes test fail on nil DataWriterRemote and DataReaderRemote
          object reference.

        * tests/DCPS/DCPSInfoRepo/test_helper.h:
        * tests/DCPS/DCPSInfoRepo/test_helper.cpp:

          Removed these files since they are not needed.

Fri Jun  1 17:25:24 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/FooTest3_2/FooTest3_2.mpc:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/test_helper.h:
        * tests/DCPS/FooTest3_2/test_helper.cpp:

          Same change as below but for FooTest3_2.

Fri Jun  1 16:16:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/FooTest3_1/FooTest3_1.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/test_helper.h:
        * tests/DCPS/FooTest3_1/test_helper.cpp:

          The test was failing trying to narrow DataWriter to DataWriterRemote,
          which is no longer possible.  Changed to use the "test_helper" to get
          the DataWriterRemote from the DataWriter.

Thu May 31 22:45:53 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * MPC/config/dcps.mpb:

          Older versions of TAO need an explicit base project - taoidldefaults
          for IDL support so that the idlflags addition is recognized.

Thu May 31 21:13:27 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * DevGuideExamples/DDS/Messenger_ZeroCopy/Messenger_ZeroCopy.mpc:
        * MPC/config/dcps.mpb:
        * MPC/config/dcpsexe.mpb:
        * MPC/config/dcpsexe_with_reliable_multicast.mpb:
        * dds/DdsDcps.mpc:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * examples/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * examples/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/McastListenerTest/McastListener.mpc:
        * performance-tests/DCPS/SimpleE2ETest/SimpleE2E.mpc:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/TCPListenerTest/TCPListener.mpc:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * performance-tests/DCPS/UDPListenerTest/UDPListener.mpc:
        * performance-tests/DCPS/UDPNoKeyTest/UDPNoKey.mpc:
        * tests/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/Compiler/idl_test1_lib/idl_test1_lib.mpc:
        * tests/DCPS/Compiler/idl_test1_main/idl_test1_main.mpc:
        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * tests/DCPS/Compiler/idl_test3_lib/idl_test3_lib.mpc:
        * tests/DCPS/Compiler/idl_test3_main/idl_test3_main.mpc:
        * tests/DCPS/CorbaSeq/CorbaSeq.mpc:
        * tests/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * tests/DCPS/DcpsIntegration/dcps_integration.mpc:
        * tests/DCPS/FooTest3/FooTest3.mpc:
        * tests/DCPS/FooTest3NoKey/FooTest3NoKey.mpc:
        * tests/DCPS/FooTest3_0/FooTest3_0.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * tests/DCPS/FooTest3_2/FooTest3_2.mpc:
        * tests/DCPS/FooTest4/FooTest4.mpc:
        * tests/DCPS/FooTest4_0/FooTest4_0.mpc:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5_0/FooTest5_0.mpc:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/FooType3/DcpsFooType3.mpc:
        * tests/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * tests/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * tests/DCPS/FooType4/DcpsFooType4.mpc:
        * tests/DCPS/FooType5/DcpsFooType5.mpc:
        * tests/DCPS/LivelinessTest/LivelinessTest.mpc:
        * tests/DCPS/MultiDPTest/MultiDPTest.mpc:
        * tests/DCPS/MultiTopicTest/MultiTopicTest.mpc:
        * tests/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/SimpleFooTest/SimpleFooTest.mpc:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:
        * tests/DCPS/common/common.mpc:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:
        * tests/DCPS/unit/UnitTest.mpc:
        * tests/transport/dds_comparative/dds_transport_comparative.mpc:
        * tests/transport/mcast_simple/DDS_transport_mcast_simple.mpc:
        * tests/transport/mcast_simple_n/DDS_transport_mcast_simple_n.mpc:
        * tests/transport/simple/DDS_transport_simple.mpc:
        * tests/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * tests/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * tests/transport/simple_n/DDS_transport_simple_n.mpc:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Simplified mpb and mpc files in the following ways:
            - don't refer to "orbsvcs" unless we really need it
            - "project(*)" becomes "project"
            - inhert "portableserver" in the base projects so not every user
                mpc file needs to mention it
            - "taoexe, dcps" becomes "dcpsexe"

Thu May 31 17:51:57 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.h:
        * tests/DCPS/DCPSInfoRepo/test_helper.h:

          Further fixes for the friendship hack.

Thu May 31 16:21:04 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * docs/design/configuration_design.txt:
        * docs/design/fully_established_connection.txt:
        * docs/design/IDL_compiler.txt:
        * docs/design/README:
        * docs/design/transport_hooks.txt:
        * docs/design/transport_reconnect.txt:

          Added these existing design notes.

Thu May 31 15:53:55 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/dcpsinfo_test.mpc:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:
        * tests/DCPS/DCPSInfoRepo/test_helper.h:
        * tests/DCPS/DCPSInfoRepo/test_helper.cpp:

          Re-worked the way the tests get access (via friendship) to the
          private "remote" objects in the Data{Reader,Writer}Impls.  These
          tests should now compile on all platforms but will need more work to
          run successfully.

Thu May 31 14:49:10 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/Sync/Sync.mpc:

          Older versions of TAO need an explicit base project with IDL support
          so that the IDL_Files {...} section is recognized.

        * performance-tests/DCPS/Sync/SyncClient_i.cpp:

          Use the root_poa_ member variable instead of local.

Wed May 30 23:50:53 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:

          Fix gcc build errors.

Wed May 30 22:41:10 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/CorbaSeq/DataReaderListener.h:
        * tests/DCPS/CorbaSeq/DataReaderListener.cpp:
        * tests/DCPS/CorbaSeq/Writer.cpp:
        * tests/DCPS/CorbaSeq/publisher.cpp:
        * tests/DCPS/CorbaSeq/subscriber.cpp:

          Adapted for the new local interfaces changes.

Wed May 30 22:34:15 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          Made auto_return_loan() pure-virtual.

        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Implemented a stub auto_return_loan() method.

Wed May 30 21:47:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * performance-tests/DCPS/Sync/Sync.mpc:

          Adjusted IDL_Files and TypeSupport_Files sections so that IDL is only
          compiled by one MPC project and extraneous information in the .mpc
          files is minimized.

        * bin/dcps_ts.pl:

          Fixed a bug where if there are two or more DCPS_DATA_TYPE structs in
          one IDL file the module of the first is applied to the subsequent
          structs that are not in modules.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.h:

          Expose the Data{Reader,Writer}Remote object via friendship to a
          special "test" class.  Tests can implement this class in order to
          test the InfoRepo behavior directly.

        * tests/DCPS/Compiler/idl_test1_lib/FooDef.idl:
        * tests/DCPS/Compiler/idl_test2_lib/FooDef.idl:
        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:

          Added a DCPS_DATA_TYPE struct that's outside of an IDL module so we
          have test coverage for this.

        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:

          Changes to make it work with the local interfaces and their
          consequences (DataReaderRemote is distinct from DataReaderImpl, etc).

        * tests/DCPS/FooType/FooType.idl:
        * tests/DCPS/FooType/FooType.mpc:

          Now use dcps_ts.pl to generate the Type Support and related code.

        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataReaderImpl.cpp:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:

          Removed these files from SVN.  They are now generated at build time
          by dcps_ts.pl.

        * tests/DCPS/FooType5/DcpsFooType5.mpc:

          Whitespace fix.

        * tests/DCPS/unit/MyTypeSupport.idl:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:

          Changes to make it work with local interfaces.

Wed May 30 21:04:26 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/CorbaSeq/BooleanSeq.idl:
        * dds/CorbaSeq/CharSeq.idl:
        * dds/CorbaSeq/DoubleSeq.idl:
        * dds/CorbaSeq/FloatSeq.idl:
        * dds/CorbaSeq/LongDoubleSeq.idl:
        * dds/CorbaSeq/LongLongSeq.idl:
        * dds/CorbaSeq/LongSeq.idl:
        * dds/CorbaSeq/OctetSeq.idl:
        * dds/CorbaSeq/ShortSeq.idl:
        * dds/CorbaSeq/StringSeq.idl:
        * dds/CorbaSeq/ULongLongSeq.idl:
        * dds/CorbaSeq/ULongSeq.idl:
        * dds/CorbaSeq/UShortSeq.idl:
        * dds/CorbaSeq/WCharSeq.idl:
        * dds/CorbaSeq/WStringSeq.idl:

          Copied tao/*Seq.pidl files and renamed to idl files.
          These idl files will be compiled with -Gdcpsonly and
          the generated code just build with dds specific code.
          The generated code will be compiled to TAO_DdsDcps lib.

        * dds/DdsDcps.mpc:

          Updated mpc to compile the built in sequence idls.

        * dds/DdsDcpsInfrastructure.idl:

          Added "tao/LongSeq.pidl" include to bypass a vc71/vc8/intel
          c++ bug dealing with base template exports.

        * tests/DCPS/CorbaSeq/CorbaSeq.mpc:
        * tests/DCPS/CorbaSeq/DataReaderListener.h:
        * tests/DCPS/CorbaSeq/DataReaderListener.cpp:
        * tests/DCPS/CorbaSeq/Messenger.idl:
        * tests/DCPS/CorbaSeq/Messenger2.idl:
        * tests/DCPS/CorbaSeq/README:
        * tests/DCPS/CorbaSeq/Writer.h:
        * tests/DCPS/CorbaSeq/Writer.cpp:
        * tests/DCPS/CorbaSeq/domain_ids:
        * tests/DCPS/CorbaSeq/publisher.cpp:
        * tests/DCPS/CorbaSeq/run_test.pl:
        * tests/DCPS/CorbaSeq/subscriber.cpp:

         Added simple test for built in sequence support in DDS.
         It also covered other test cases:
           - Multiple DCPS types with built in sequences.
             This is to verify no link problem with built in
             sequences support.
           - DCPS struct contains sequence types defined
             in other module.

        * DDS_release_notes.txt:

          Updated release notes for built in sequences support.

        * bin/dcps_tests.lst:

          Added CorbaSeq test.

Wed May 30 19:19:38 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/DataReaderRemoteImpl.cpp:
        * dds/DCPS/DataReaderRemoteImpl.h:
        * dds/DCPS/DataWriterRemoteImpl.cpp:
        * dds/DCPS/DataWriterRemoteImpl.h:
        * dds/DCPS/LocalObject.h:

          Added by merge of
          https://svn.dre.vanderbilt.edu/DOC/DDS/branches/20070426_no_CORBA

          !!!See the DDS_release_notes.txt for impacts on user code!!!!

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * bin/DCPS/IDLTemplate.pm:
        * bin/dcps_ts.pl:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/TopicDescriptionImpl.cpp:
        * dds/DCPS/TopicDescriptionImpl.h:
        * dds/DCPS/TopicImpl.cpp:
        * dds/DCPS/TopicImpl.h:
        * dds/DCPS/ZeroCopyAllocator_T.h:
        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
        * dds/DCPS/ZeroCopyInfoSeq_T.h:
        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
        * dds/DCPS/ZeroCopySeq_T.cpp:
        * dds/DCPS/ZeroCopySeq_T.h:
        * dds/DCPS/ZeroCopySeq_T.inl:
        * dds/dcps_bits.mpb:
        * dds/DdsDcps.mpc:
        * dds/DdsDcpsDataReaderRemote.idl:
        * dds/DdsDcpsDataWriterRemote.idl:
        * dds/DdsDcpsDomain.idl:
        * dds/DdsDcpsInfrastructure.idl:
        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:
        * dds/DdsDcpsTopic.idl:
        * dds/DdsDcpsTypeSupportTao.idl:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DomainParticipantListener_i.h:
        * DDS_release_notes.txt:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/Writer.cpp:
        * DevGuideExamples/DDS/Messenger_ZeroCopy/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger_ZeroCopy/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger_ZeroCopy/publisher.cpp:
        * DevGuideExamples/DDS/Messenger_ZeroCopy/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger_ZeroCopy/Writer.cpp:
        * examples/DCPS/Messenger_Imr/DataReaderListener.cpp:
        * examples/DCPS/Messenger_Imr/DataReaderListener.h:
        * examples/DCPS/Messenger_Imr/publisher.cpp:
        * examples/DCPS/Messenger_Imr/subscriber.cpp:
        * examples/DCPS/Messenger_Imr/Writer.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.h:
        * examples/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * examples/DCPS/Messenger_IOGR_Imr/Writer.cpp:
        * performance-tests/DCPS/InfoRepo_population/DataReaderListener.cpp:
        * performance-tests/DCPS/InfoRepo_population/DataReaderListener.h:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/InfoRepo_population/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPProfilingTest/publisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:
        * performance-tests/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.cpp:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.h:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/DcpsIntegration/TopicListener.h:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PublisherListener.h:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.h:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/Writer.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType3/DcpsFooType3.mpc:
        * tests/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
        * tests/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
        * tests/DCPS/FooType4/DcpsFooType4.mpc:
        * tests/DCPS/FooType5/DcpsFooType5.mpc:
        * tests/DCPS/FooType/FooType.idl:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.h:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.cpp:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.h:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Prst_delayed_subscriber/Writer.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/DCPS/sub_init_loop/Writer.cpp:
        * tests/DCPS/TransientLocalTest/DataReaderListener.cpp:
        * tests/DCPS/TransientLocalTest/DataReaderListener.h:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/Writer.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/ZeroCopyRead/main.cpp:

          Changed by merge of
          https://svn.dre.vanderbilt.edu/DOC/DDS/branches/20070426_no_CORBA
          and resolved conflicts and compliation errors.

          The following, indented comments are from the 20070426_no_CORBA
          branch.

        Tue May 29 22:24:35 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopyAllocator_T.h:

                        Build with TAO 1.4a.

        Tue May 29 21:23:54 UTC 2007  Adam Mitz  <mitza@ociweb.com>

                        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
                        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
                        * DevGuideExamples/DDS/Messenger/Writer.cpp:
                        * DevGuideExamples/DDS/Messenger/publisher.cpp:
                        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.h:
                        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/Writer.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/publisher.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
                        * examples/DCPS/Messenger_Imr/DataReaderListener.h:
                        * examples/DCPS/Messenger_Imr/DataReaderListener.cpp:
                        * examples/DCPS/Messenger_Imr/Writer.cpp:
                        * examples/DCPS/Messenger_Imr/publisher.cpp:
                        * examples/DCPS/Messenger_Imr/subscriber.cpp:
                        * performance-tests/DCPS/McastListenerTest/DataReaderListener.h:
                        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
                        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
                        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
                        * performance-tests/DCPS/SimpleLatency/PubListener.h:
                        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
                        * performance-tests/DCPS/SimpleLatency/SubListener.h:
                        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
                        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
                        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
                        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.h:
                        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
                        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
                        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
                        * tests/DCPS/FooTest3_0/PubDriver.cpp:
                        * tests/DCPS/unit/MyTypeSupportImpl.h:

                        Updated tests, examples, and performance tests to the new changes in
                        DDS, including using local interfaces for listeners and dealing with
                        generated code being in the same namespace as the DCPS struct type.
                        The only tests that won't compile after these changes are those tests
                        that use handcrafted "type support" code instead of the generated
                        code or use internal library classes directly.  Those tests are
                        (by MPC project name): dcps_integration_infrastructure,
                        dcps_integration_topic, DcpsFooType, dcpsinfo_test_publisher,
                        dcpsinfo_test_subscriber, DcpsSimpleFooTest, and DdsDcps_UnitTest.

        Fri May 25 15:58:15 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * tests/DCPS/BuiltInTopic/common.cpp:
                        * tests/DCPS/FooTest4_0/Writer.cpp:
                        * tests/DCPS/FooTest4/Reader.cpp:
                        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:

                        Added a space to resolve errors like:
                                error: `<::' cannot begin a template-argument list

        Thu May 24 00:30:59 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * dds/DCPS/Service_Participant.h:

                        Changed TAO::DCPS::servant_to_reference() to increment the reference
                        count as it did before we switched to local interfaces.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:

                        Removed #if code used to allow build
                        with old style <type>SZSeq type.

        Wed May 23 22:25:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

                        * dds/DCPS/LocalObject.h:

                        Reverted the change directly below this one.

        Wed May 23 21:00:59 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * dds/DCPS/LocalObject.h:

                        Resolved a problem with reference counting.

                        * DDS_release_notes.txt:

                        Added more notes about servants vs object references.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Changed the tests to not use servants for the write and read calls.
                        There is no longer a performance benefit (thanks to local interfaces).
                        Added comments to that effect.

        Wed May 23 17:19:02 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * DevGuideExamples/DDS/Messenger/publisher.cpp:
                        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
                        * examples/DCPS/Messenger_Imr/publisher.cpp:
                        * examples/DCPS/Messenger_Imr/subscriber.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/publisher.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
                        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
                        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
                        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
                        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
                        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
                        * tests/DCPS/FooTest2/main.cpp:
                        * tests/DCPS/LivelinessTest/publisher.cpp:
                        * tests/DCPS/SimpleFooTest/main.cpp:
                        * tests/DCPS/unit/Main.cpp:

                        Changed all
                                                        PortableServer::ServantBase_var safe_servant = fts_servant;
                                        to
                                                TAO::DCPS::LocalObject_var safe_servant
                                        where appropriate.

                                        No others should be changed because they are POA servants
                                        and not local objects.

        Wed May 23 17:01:27 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * bin/dcps_ts.pl:
                        * dds/dcps_bits.mpb:
                        * DDS_release_notes.txt:

                        Removed support for --Module option from dcps_ts.pl.

                        * tests/DCPS/BuiltInTopic/main.cpp:

                        Adjusted the type specific interfaces from --Module Mine to
                        the type scope of Xyz to get this test to build.

        Wed May 23 16:36:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataWriterImpl.cpp:
                        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
                        * dds/DCPS/DomainParticipantImpl.cpp:
                        * dds/DCPS/PublisherImpl.cpp:
                        * dds/DCPS/SubscriberImpl.cpp:
                        * dds/DCPS/TopicImpl.cpp:
                        * dds/InfoRepo/DCPS_IR_Domain.cpp:

                        Cleaned up use of the reference_to_servant<SERVANT>() function
                        template.  The second template argument should never be used at the
                        call site.

                        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
                        * DevGuideExamples/DDS/Messenger/publisher.cpp:
                        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/publisher.cpp:
                        * examples/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
                        * examples/DCPS/Messenger_Imr/DataReaderListener.cpp:
                        * examples/DCPS/Messenger_Imr/publisher.cpp:
                        * examples/DCPS/Messenger_Imr/subscriber.cpp:
                        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
                        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
                        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
                        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
                        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
                        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
                        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
                        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
                        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
                        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
                        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
                        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
                        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
                        * tests/DCPS/BuiltInTopic/common.cpp:
                        * tests/DCPS/BuiltInTopic/main.cpp:
                        * tests/DCPS/Compiler/idl_test2_lib/idl_test2_lib.mpc:
                        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
                        * tests/DCPS/DcpsIntegration/TopicListener.h:
                        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
                        * tests/DCPS/DcpsIntegration/topic.cpp:
                        * tests/DCPS/FooTest3/Writer.cpp:
                        * tests/DCPS/FooTest3/main.cpp:
                        * tests/DCPS/FooTest3NoKey/Writer.h:
                        * tests/DCPS/FooTest3NoKey/Writer.cpp:
                        * tests/DCPS/FooTest3NoKey/main.cpp:
                        * tests/DCPS/FooTest3_0/DataWriterListener.h:
                        * tests/DCPS/FooTest3_0/DomainParticipantListener.h:
                        * tests/DCPS/FooTest3_0/PubDriver.h:
                        * tests/DCPS/FooTest3_0/PubDriver.cpp:
                        * tests/DCPS/FooTest3_0/PublisherListener.h:
                        * tests/DCPS/FooTest3_1/PubDriver.cpp:
                        * tests/DCPS/FooTest3_1/Writer.cpp:
                        * tests/DCPS/FooTest3_2/PubDriver.cpp:
                        * tests/DCPS/FooTest3_2/Writer.cpp:
                        * tests/DCPS/FooTest4/Reader.cpp:
                        * tests/DCPS/FooTest4/Writer.cpp:
                        * tests/DCPS/FooTest4/main.cpp:
                        * tests/DCPS/FooTest4_0/Reader.cpp:
                        * tests/DCPS/FooTest4_0/Writer.cpp:
                        * tests/DCPS/FooTest5/DataReaderListener.cpp:
                        * tests/DCPS/FooTest5/publisher.cpp:
                        * tests/DCPS/FooTest5/subscriber.cpp:
                        * tests/DCPS/FooTest5_0/main.cpp:
                        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
                        * tests/DCPS/LivelinessTest/publisher.cpp:
                        * tests/DCPS/LivelinessTest/subscriber.cpp:
                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.h:
                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:
                        * tests/DCPS/Messenger_ZeroCopy/Writer.cpp:
                        * tests/DCPS/Messenger_ZeroCopy/publisher.cpp:
                        * tests/DCPS/Messenger_ZeroCopy/subscriber.cpp:
                        * tests/DCPS/MultiDPTest/DataReaderListener.h:
                        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
                        * tests/DCPS/MultiDPTest/Writer.cpp:
                        * tests/DCPS/MultiDPTest/publisher.cpp:
                        * tests/DCPS/MultiDPTest/subscriber.cpp:
                        * tests/DCPS/MultiTopicTest/DataReaderListener.h:
                        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
                        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
                        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
                        * tests/DCPS/MultiTopicTest/Writer.cpp:
                        * tests/DCPS/MultiTopicTest/publisher.cpp:
                        * tests/DCPS/MultiTopicTest/subscriber.cpp:
                        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.h:
                        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.cpp:
                        * tests/DCPS/Prst_delayed_subscriber/Writer.cpp:
                        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
                        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
                        * tests/DCPS/Reconnect/DataReaderListener.cpp:
                        * tests/DCPS/Reconnect/publisher.cpp:
                        * tests/DCPS/Reconnect/subscriber.cpp:
                        * tests/DCPS/SimpleFooTest/main.cpp:
                        * tests/DCPS/TransientLocalTest/DataReaderListener.h:
                        * tests/DCPS/TransientLocalTest/DataReaderListener.cpp:
                        * tests/DCPS/TransientLocalTest/Writer.cpp:
                        * tests/DCPS/TransientLocalTest/publisher.cpp:
                        * tests/DCPS/TransientLocalTest/subscriber.cpp:
                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/sub_init_loop/Writer.cpp:
                        * tests/DCPS/sub_init_loop/publisher.cpp:
                        * tests/DCPS/sub_init_loop/subscriber.cpp:
                        * tests/DCPS/unit/Main.cpp:

                        Same reference_to_servant change noted above, and began the process
                        of changing all tests and examples to work with the new local
                        interfaces and change in module for type-support, etc.

        Wed May 23 16:20:56 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * DDS_release_notes.txt:

                        Added the "user impacts" to the DDS_release_notes.txt.

                        * dds/DCPS/LocalObject.h:
                        * tests/DCPS/FooTest5/publisher.cpp:
                        * tests/DCPS/FooTest5/subscriber.cpp:
                        * tests/DCPS/Reconnect/publisher.cpp:
                        * tests/DCPS/Reconnect/subscriber.cpp:
                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Replaced lines like:
                                PortableServer::ServantBase_var safe_servant = fts_servant
                        with:
                                TAO::DCPS::LocalObject_var safe_servant = fts_servant;

        Tue May 22 20:26:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

                        * dds/DCPS/LocalObject.h:

                        Eliminated build warnings.

                        * dds/DCPS/Service_Participant.h:

                        Whitespace formatting and removed ACE_dynamic_cast since it's
                        deprecated.

        Tue May 22 19:04:06 UTC 2007  Adam Mitz  <mitza@ociweb.com>

                        * DDS_no_CORBA.mwc:

                        Added more tests that now compile on this branch.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
                        * tests/DCPS/Reconnect/DataWriterListener.h:
                        * tests/DCPS/FooTest4_0/DataReaderListener.h:
                        * tests/DCPS/FooTest5/DataReaderListener.h:

                        Changed to use new LocalObject class template.

                        * tests/DCPS/FooType4/DcpsFooType4.mpc:
                        * tests/DCPS/BuiltInTopic/common.cpp:
                        * tests/DCPS/FooTest4/main.cpp:
                        * tests/DCPS/FooTest4/Reader.cpp:
                        * tests/DCPS/FooTest4_0/main.cpp:
                        * tests/DCPS/FooTest4_0/Writer.cpp:
                        * tests/DCPS/FooTest4_0/Writer.h:
                        * tests/DCPS/FooTest4_0/Reader.cpp:
                        * tests/DCPS/FooTest5_0/main.cpp:

                        Removed the --module switch from dcps_ts.pl, changed all uses of the
                        "Mine" namespace to "Xyz".

                        * tests/DCPS/FooType/FooType.idl:

                        Change to use local IDL interfaces.

                        * tests/DCPS/FooType3/DcpsFooType3.mpc:
                        * tests/DCPS/FooType3NoKey/DcpsFooType3NoKey.mpc:
                        * tests/DCPS/FooType3Unbounded/DcpsFooType3Unbounded.mpc:
                        * tests/DCPS/FooType5/DcpsFooType5.mpc:
                        * tests/DCPS/MultiTopicTypes/MultiTopicTypes.mpc:

                        Removed the --module switch from dcps_ts.pl.  Test code that uses the
                        "Mine" namespace still needs to be updated.

                        * tests/DCPS/TransientLocalTest/MessageTypeSupport.idl:
                        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.h:
                        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.cpp:

                        Removed these files.  They should never have been in SVN.

        Tue May 22 16:12:50 UTC 2007  Adam Mitz  <mitza@ociweb.com>

                        * DDS_no_CORBA.mwc:

                        Added some tests that now compile with local interfaces.

                        * tests/DCPS/FooType4/DcpsFooType4.mpc:

                        Removed the --module from the dcps_ts.pl command line.  Not sure if
                        this change should be part of the merge back to trunk or if we should
                        change the code or if more changes need to be made to the --module
                        support.

                        * dds/DCPS/LocalObject.h:

                        Made TAO::DCPS::LocalObject into a class template so it can
                        disambiguate the multiply-inherited _ptr_type and _narrow members.

                        * bin/DCPS/HTemplate.pm:
                        * dds/DCPS/DomainParticipantFactoryImpl.h:
                        * dds/DCPS/DomainParticipantImpl.h:
                        * dds/DCPS/EntityImpl.h:
                        * dds/DCPS/PublisherImpl.h:
                        * dds/DCPS/Service_Participant.h:
                        * dds/DCPS/SubscriberImpl.h:
                        * dds/DCPS/TopicDescriptionImpl.h:
                        * dds/DCPS/TopicImpl.h:

                        Made use of the new TAO::DCPS::LocalObject class template.

                        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
                        * dds/DCPS/DomainParticipantImpl.cpp:
                        * dds/DCPS/PublisherImpl.cpp:
                        * dds/DCPS/SubscriberImpl.cpp:

                        Fixed reference counting bugs in cases where the code assumed there
                        was a POA involved (what used to be non-local interfaces).

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
                        * tests/DCPS/FooTest5/DataReaderListener.h:
                        * tests/DCPS/LivelinessTest/DataReaderListener.h:
                        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
                        * tests/DCPS/LivelinessTest/Writer.cpp:
                        * tests/DCPS/LivelinessTest/publisher.cpp:
                        * tests/DCPS/LivelinessTest/subscriber.cpp:
                        * tests/DCPS/Reconnect/DataReaderListener.h:
                        * tests/DCPS/Reconnect/DataWriterListener.h:
                        * tests/DCPS/TransientLocalTest/MessageTypeSupport.idl:
                        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.h:
                        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.cpp:

                        Updated the tests referenced by DDS_no_CORBA.mwc to compile with
                        these latest changes.

        Mon May 21 23:51:16 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * bin/DCPS/HTemplate.pm:
                        * dds/DCPS/DomainParticipantFactoryImpl.h:
                        * dds/DCPS/EntityImpl.h:
                        * dds/DCPS/LocalObject.h:
                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
                        * tests/DCPS/FooTest5/DataReaderListener.h:
                        * tests/DCPS/Reconnect/DataReaderListener.h:
                        * tests/DCPS/Reconnect/DataWriterListener.h:

                        Change fron using TAO_Local_RefCounted_Object to a typedef
                        of it named TAO::DCPS::LocalObject in case we wish to
                        extend its functionallity in the future.

        Mon May 21 22:12:46 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * bin/DCPS/IDLTemplate.pm:
                        * dds/DCPS/Service_Participant.h:

                        Updates per Adam's code review posted Fri May 18 17:07:25 2007 CDT.

                        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Created the InfoSeq assignment operator and tested
                        the zero-copy Seq assignment operator.

                        * DDS_no_CORBA.mwc:
                        * tests/DCPS/Reconnect/DataReaderListener.cpp:
                        * tests/DCPS/Reconnect/DataReaderListener.h:
                        * tests/DCPS/Reconnect/DataWriterListener.h:
                        * tests/DCPS/Reconnect/publisher.cpp:
                        * tests/DCPS/Reconnect/subscriber.cpp:
                        * tests/DCPS/Reconnect/Writer.cpp:

                        Updated the reconnection test to verify that the TAO DDS specific
                        reconnection listener callbacks are made.

        Sat May 19 00:02:15 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * dds/DCPS/BuiltInTopicUtils.h:
                        * dds/DCPS/DataReaderImpl.cpp:

                        Resolve build errors and warnings from gcc.

        Fri May 18 20:32:11 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * bin/DCPS/IDLTemplate.pm:
                        * dds/DCPS/BuiltInTopicUtils.h:
                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DdsDcps.mpc:
                        * dds/DdsDcpsInfrastructure.idl:

                        Support moving ZeroCopyDataSeq instantiation from FooC.h
                        to FooTypeSupportC.h (where it was when it was sequence<Foo>)
                        by adding #PRAGMA DCPS*ZERO_COPY* and resolving circular includes.

                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeq_T.inl:

                        Support the assignment operator -- needed for BIT.

        Thu May 17 20:07:21 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * performance-tests/DCPS/TypeNoKeyBounded/TypeNoKeyBounded.mpc:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
                        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
                        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

                        Removed --Module Mine and its impacts.
                        Made other remote to local interface changes.

        Mon May 14 20:23:33 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopySeq_T.h:

                        Fix test build issue.

        Mon May 14 19:14:12 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * tests/DCPS/FooType5/DcpsFooType5.mpc:
                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/FooTest5/DataReaderListener.cpp:
                        * tests/DCPS/FooTest5/subscriber.cpp:
                        * tests/DCPS/FooTest5/DataReaderListener.h:
                        * tests/DCPS/FooTest5/Writer.cpp:
                        * tests/DCPS/FooTest5/publisher.cpp:

                        Removed --Module and changes related to that.
                        Changed the listener to be a local interface.

                        * bin/DCPS/IDLTemplate.pm:
                        * dds/DdsDcpsInfrastructure.idl:

                        Added #pragma DCPS_ZUPPORT_ZERO_COPY_READ to IDLTemplate.pm.

                        * bin/DCPS/CPPTemplate.pm:
                        * dds/DCPS/SubscriberImpl.cpp:

                        Avoid warnings from gcc.

                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/DataReaderImpl.h:

                        Moved DDS::SampleInfoSeq from DataReaderImpl.h to
                        DdsDcpsInfrastructureC.h (also TAO_IDL changes).

        Fri May 11 23:36:56 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * dds/DCPS/DataReaderRemoteImpl.cpp:
                        * dds/DCPS/DataReaderRemoteImpl.h:
                        * dds/DCPS/DataWriterRemoteImpl.cpp:
                        * dds/DCPS/DataWriterRemoteImpl.h:

                        Oops - forgot to add these.

        Thu May 10 18:06:58 UTC 2007  Scott Harris  <harris_s@ociweb.com>

                        * DDS_no_CORBA.mwc:

                        Temporary addition.

                        * bin/DCPS/CPPTemplate.pm:
                        * bin/DCPS/HTemplate.pm:
                        * bin/DCPS/IDLTemplate.pm:
                        * bin/dcps_ts.pl:
                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/DataReaderImpl.inl:
                        * dds/DCPS/DataWriterImpl.cpp:
                        * dds/DCPS/DataWriterImpl.h:
                        * dds/DCPS/DomainParticipantFactoryImpl.h:
                        * dds/DCPS/DomainParticipantImpl.cpp:
                        * dds/DCPS/DomainParticipantImpl.h:
                        * dds/DCPS/EntityImpl.h:
                        * dds/DCPS/PublisherImpl.cpp:
                        * dds/DCPS/PublisherImpl.h:
                        * dds/DCPS/Registered_Data_Types.cpp:
                        * dds/DCPS/Registered_Data_Types.h:
                        * dds/DCPS/Service_Participant.cpp:
                        * dds/DCPS/Service_Participant.h:
                        * dds/DCPS/SubscriberImpl.cpp:
                        * dds/DCPS/SubscriberImpl.h:
                        * dds/DCPS/TopicDescriptionImpl.cpp:
                        * dds/DCPS/TopicDescriptionImpl.h:
                        * dds/DCPS/TopicImpl.cpp:
                        * dds/DCPS/TopicImpl.h:
                        * dds/DdsDcps.mpc:
                        * dds/DdsDcpsDataReaderRemote.idl:
                        * dds/DdsDcpsDataWriterRemote.idl:
                        * dds/DdsDcpsDomain.idl:
                        * dds/DdsDcpsInfrastructure.idl:
                        * dds/DdsDcpsPublication.idl:
                        * dds/DdsDcpsSubscription.idl:
                        * dds/DdsDcpsTopic.idl:
                        * dds/DdsDcpsTypeSupportTao.idl:
                        * dds/InfoRepo/DomainParticipantListener_i.h:
                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        First round of making the entity interfaces local
                        and merging the sample sequence types.

Wed May 30 15:14:21 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:

          Added 'avoids' for minimum_corba.

        * performance-tests/DCPS/Sync/SyncClient_i.cpp:
        * performance-tests/DCPS/Sync/SyncServer.cpp:

          Added #includes for "ace/String_Base.h".  These are needed to build
          against some older versions of ACE.

Tue May 29 20:40:20 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/Sync/Sync.mpc:
          Additional visibility related fixes.

Tue May 29 20:10:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/InfoRepo_population/SyncClientExt_i.cpp:

          Removed unused variable to get rid of scoreboard warnings.

Tue May 29 15:49:08 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/DCPS/Sync/SyncClient_i.cpp:

          Removed unused variable to get rid of scoreboard warnings.

        * performance-tests/DCPS/Sync/SyncServer_i.cpp:

          Added #include of ace/String_Base.h.  Some versions of ACE+TAO need
          this include for the ACE_String_Base class.

Fri May 25 17:10:53 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
          Fixed incorrect project dependencies.

Fri May 25 17:10:53 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
          Fixed incorrect project dependencies.

Fri May 25 16:46:08 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
          Rename project to better reflect role.

        * performance-tests/DCPS/Sync/Sync.mpc:
          Fix visibility issues.

        * performance-tests/DCPS/Sync/SyncServer_i.cpp:
          Remove unused parameter.

Fri May 25 14:45:55 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
          The publisher & subscribers need the SyncClient library. Using
          the 'after' MPC option to order the builds.

Thu May 24 16:31:08 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/Sync/Sync.mpc:
          This library shouldn't be built as part of a minimum_corba
          build. Using the MPC 'avoids' clause to add restriction.

Thu May 24 16:16:54 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/Sync/Sync.mpc:
        * performance-tests/DCPS/Sync/SyncClient_i.h:
        * performance-tests/DCPS/Sync/SyncServer_i.h:
        * performance-tests/DCPS/Sync/Sync_export.h:
          Fix for visibility related issue. The generated proxy classes
          don't have the export macros and therefore aren't visibile
          outside the Sync library. Fixed by adding dependency directly
          upon the idl file which pulls in the object files directly
          getting around the visibility restriction.

Wed May 23 15:42:48 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
          This project is dependent upon the ../Sync libraries. Add
          dependency to serialize build.

Tue May 22 21:52:14 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * performance-tests/DCPS/Sync:
        * performance-tests/DCPS/Sync/InitError.h:
        * performance-tests/DCPS/Sync/InitError.cpp:
        * performance-tests/DCPS/Sync/README:
        * performance-tests/DCPS/Sync/Sync.idl:
        * performance-tests/DCPS/Sync/Sync.mpc:
        * performance-tests/DCPS/Sync/SyncClient_i.h:
        * performance-tests/DCPS/Sync/SyncClient_i.cpp:
        * performance-tests/DCPS/Sync/SyncServer.cpp:
        * performance-tests/DCPS/Sync/SyncServer_i.h:
        * performance-tests/DCPS/Sync/SyncServer_i.cpp:
          Framework for pub-sub synchronization.

        * performance-tests/DCPS/InfoRepo_population:
        * performance-tests/DCPS/InfoRepo_population/DataReaderListener.h:
        * performance-tests/DCPS/InfoRepo_population/DataReaderListener.cpp:
        * performance-tests/DCPS/InfoRepo_population/InfoRepo_population.mpc:
        * performance-tests/DCPS/InfoRepo_population/Messenger.idl:
        * performance-tests/DCPS/InfoRepo_population/SyncClientExt_i.h:
        * performance-tests/DCPS/InfoRepo_population/SyncClientExt_i.cpp:
        * performance-tests/DCPS/InfoRepo_population/SyncExt.idl:
        * performance-tests/DCPS/InfoRepo_population/SyncExt_i.h:
        * performance-tests/DCPS/InfoRepo_population/SyncExt_i.cpp:
        * performance-tests/DCPS/InfoRepo_population/SyncServer.cpp:
        * performance-tests/DCPS/InfoRepo_population/Writer.h:
        * performance-tests/DCPS/InfoRepo_population/Writer.cpp:
        * performance-tests/DCPS/InfoRepo_population/domain_ids:
        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_udp.ini:
        * performance-tests/DCPS/InfoRepo_population/publisher.cpp:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/InfoRepo_population/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_udp.ini:
        * performance-tests/DCPS/InfoRepo_population/subscriber.cpp:
        * performance-tests/DCPS/InfoRepo_population/tcp.conf:
          Stress test for InfoRepo.

        * bin/dcps_tests.lst:
          Turn on InfoRepo_population in nightly builds.

Mon May 21 18:24:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          Updated for Doxygen 1.5.  Thanks to Scott Harris for doing this.

Mon May 21 15:50:14 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:

          Added const to get rid of warnings on the scoreboard.

Fri May 18 19:47:13 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Updated version numbers to reflect the forthcoming 0.13 release.

Fri May 18 19:26:02 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS version 0_12 released.

Fri May 18 18:05:41 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/reliable_mcast.conf:

          Fixed config file.

Fri May 18 16:14:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub_reliable_mcast.ini:
        * DevGuideExamples/DDS/Messenger/reliable_mcast.conf:
        * DevGuideExamples/DDS/Messenger/sub_reliable_mcast.ini:

          Added configuration files for reliable multicast.

Fri May 18 15:08:29 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added DevGuideExamples/DDS/Messenger using reliable multicast.

Fri May 18 14:51:25 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Extended the DevGuideExample to work with reliable multicast.  Thanks
          to Ciju for actually doing this work.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:

          Read the configuration from the transport section of the ini file.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:
          Just like UDP, always report the transport as "acked" because the
          acknowledgement for connection establishment doesn't actually happen
          in reliable multicast.

Thu May 17 19:16:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Added a note on a work-around needed to properly build the tests with
          TAO 1.5a patch level "0".

Thu May 17 18:40:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Minor clarifications and removed contact info (email addrs) since
          it's now in README.

Thu May 17 18:17:51 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * ChangeLog:

          Fixed a reference to the previous ChangeLog.

        * DDS_info.txt:

          Added an example of using -DCPSInfoRepo.

        * DDS_release_notes.txt:
        * README:

          Corrected spelling errors.

Thu May 17 18:16:18 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:

          Add note regards reliable multicast default configuration
          status.

Thu May 17 15:28:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * README:

          Documented the current state of the tests.

Thu May 17 14:15:30 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/vc8_warnings.mpb:

          Moved vc8_warnings.mpb here instead of having it in config-legacy.

        * MPC/config-legacy:
        * MPC/config-legacy/README.txt:
        * MPC/config-legacy/vc8_warnings.mpb:

          Removed these files.

        * docs/INSTALL:

          Documented this change.

Thu May 17 13:55:59 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * DDS_release_notes.txt:
          Add entry about InfoRepo persistence mechanism.

Wed May 16 21:39:59 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp(unregister_all):

          Added a check for a NULL DataSampleListElement in sending_data_.  The
          sub_init_loop stress test has shown a segfault here.

Wed May 16 20:05:37 UTC 2007  Byron Harris  <harris_b@ociweb.com>

        * README:

          Removed spell checker content brought over from the release notes.

Wed May 16 19:27:14 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:

          When -Config STATIC is used, don't use -ORBSvcConf tcp.conf since it
          uses dynamic loading.

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:

          Linked with SimpleTCP so that static builds can work too.

Wed May 16 19:24:12 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Removed obsolete notes and made other improvements.

Wed May 16 18:09:17 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Increased timeout to be more tolerant of slow machines, fixed logic
          errors in the perl script (using an uninitialized variable).

Wed May 16 17:46:01 UTC 2007  Byron Harris  <harris_b@ociweb.com>

        * DDS_release_notes.txt:
        * README:

          Moved content in the release notes not related to changes
          between releases to the README.

Wed May 16 17:42:27 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/debug.cpp:

          Added newline at end of file to avoid warning from gcc.

Wed May 16 16:01:30 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/sub_init_loop/Writer.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
          Layout changes. Remove comments.

Wed May 16 15:09:05 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/debug.cpp:
        * dds/DCPS/debug.h:
        * dds/DCPS/Service_Participant.cpp:

          Create a function to set the DCPS_debug_level.

Tue May 15 19:39:55 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Rename variables to descriptive names.

        * dds/InfoRepo/PersistenceUpdater.cpp:
          removed couple of debug messages.

Tue May 15 15:47:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Removed redirection of STDOUT and STDERR streams in Perl.  This turns
          out to be incompatible with a Perl process in Windows that itself has
          its output or error streams redirected to files.  Instead we now use
          -ORBLogFile to redirect test error/log messages to a file.

Tue May 15 04:01:27 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger_ZeroCopy/DataReaderListener.cpp:

          Update per updates to the Dev. Guide.

Mon May 14 18:55:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/unit/Main.cpp:

          Use ACE_Time_Value to compare times in order to hide platform
          differences in signed/unsigned time values.

Mon May 14 17:57:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Reinstated a corrected version of the change that was reverted in...
          Sun May 13 21:53:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * docs/INSTALL:

          Updated installation instructions.

Sun May 13 21:53:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Partially reverted the change from...
          Fri May 11 14:01:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>
          ...since even though it worked for static builds, it broke many of
          the shared-library builds.

Sun May 13 21:10:38 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc/dds.doxygen:

          Fixed the Doxygen config to pick up all library source files.

Fri May 11 16:25:43 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * etc:
        * etc/dds.doxygen:

          Added a Doxygen configuration file for DDS.

Fri May 11 14:41:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Re-enabled the Reconnect test.

        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Reverted some of my changes from...
          Thu May 10 14:50:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>
          ...it turns out that the redirected STDERR or STDOUT needs to be
          closed before STDERR or STDOUT is re-opened.  The part of yesterday's
          change that remains is that the "saved" streams are not closed.

Fri May 11 14:01:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        Changes to allow BIT functionality in static builds (for now anyway,
        BIT always uses SimpleTCP as its transport implementation).

        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:

          Initialize the Loader object in the ACE Service Configurator.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepo_bits.mpb:

          Link the SimpleTCP library and initialize it as long as the MPC
          feature built_in_topics = 1.

        * tests/DCPS/BuiltInTopic/BuiltInTopic.mpc:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Modified to work in static builds.

Thu May 10 14:50:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Test scripts that redirect stdout or stderr need to not close the
          file handles after the redirection is done.  This prevents the
          remainder of the script from producing output.

Wed May 09 22:46:51 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * DDS_release_notes.txt:

          Cleanup of zero-copy implementation per review.

        * DDS_info.txt:

          Add note on what it looks like when the TCP transport library is unavailable.

        * tests/DCPS/Messenger_ZeroCopy:
        * bin/dcps_tests.lst:

          Moved tets/DCPS/Messenger_ZeroCopy to
              DevGuideExamples/DDS/Messenger_ZeroCopy.
          And removed it from the nightly build tests because it
          is an example and the ZeroCopyRead test is a true test.

        * DDS_zero-copy.mwc:

          Removed DDS_zero-copy.mwc becuase it was temporary.

Wed May  9 15:52:21 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Continued documenting changes since 0.11 was released.

Wed May  9 15:23:33 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Pass -NOBITS on the DCPSInfoRepo command line since this test doesn't
          use BITS.  This makes the test compatible with static builds.

Wed May  9 14:02:02 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/monitor.cpp:

          Use unsigned ints to eliminated signed/unsigned mismatch warnings.

Wed May  9 13:48:26 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * docs/INSTALL:

          Added some information on supported platforms and building DDS.

Tue May 08 23:41:25 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/TCPProfilingTest/common.h:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:

          Added option to use Zero copy read.

        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:

          Changed to disable Built In Topic usage.

Tue May  8 19:12:09 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/WriteDataContainer.cpp:

          Removed ACE_THROW_SPEC(()) clauses from functions that aren't
          overrides of skeleton functions.  ACE_THROW_SPEC is not necessary and
          causes problems on platforms that check exceptions against the
          throw() clause.  In this case, we saw test failures because
          servant_to_reference didn't declare CORBA::UserException even though,
          as the comments indicated, it can throw POA::ObjectNotActive and
          other user exceptions.  The common C++ point of view these days is
          that throw() clauses are more trouble than they're worth.

Tue May  8 16:09:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * rules.dds.GNU:

          Added the default value (1) for built_in_topics.

Mon May  7 22:18:31 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS_release_notes.txt:

          Updated release notes to summarize some of the work that's been done
          since the 0.11 release.  This isn't complete yet.

Fri May 04 21:39:50 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/README:

          Added information about new tests.

        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/main.cpp:

          Fixed unreferenced variable warning.

        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/raw_tcp_latency_publisher.mpc:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/raw_tcp_latency_subscriber.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/raw_tcp_publisher.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/raw_tcp_subscriber.mpc:

          Replaced deprecated command

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.h:

          Fixed warnings and removed commented out code.

        * performance-tests/DCPS/TCPProfilingTest/repo.conf:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:

          Removed unnecessary config file.

        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:

          Removed old vc6 code.

Fri May  4 16:07:37 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/unit/Main.cpp:
          explicit cast to clear scoreboard warnings.

Fri May  4 15:38:40 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.cpp:

        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:

          Renamed methods that were overriding inherited virtual methods.
          This fixes warnings from Borland and SunCC.

Thu May 03 23:50:40 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/raw_tcp/common/TestData.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/common/TestException.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/raw_tcp_latency_publisher.mpc:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TcpPublisher.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/run_test_1x1.pl:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/split_pub.pl:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/main.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/raw_tcp_latency_subscriber.mpc:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestDriver.h:
        * performance-tests/DCPS/SimpleLatency/raw_tcp/subscriber/TestStats.h:

         Added a raw tcp latency test to allow for comparison.

        * performance-tests/DCPS/TCPProfilingTest/common.h:
        * performance-tests/DCPS/TCPProfilingTest/conf.ini:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPProfilingTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPProfilingTest/domain_ids:
        * performance-tests/DCPS/TCPProfilingTest/publisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/common:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/common/TestData.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/common/TestException.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/raw_tcp_publisher.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TcpPublisher.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TcpPublisher.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/publisher/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_1x1.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_1xn.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_nx1.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/run_test_nxn.pl:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/main.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/raw_tcp_subscriber.mpc:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TcpSubscriber.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.cpp:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestDriver.h:
        * performance-tests/DCPS/TCPProfilingTest/raw_tcp/subscriber/TestStats.h:
        * performance-tests/DCPS/TCPProfilingTest/README:
        * performance-tests/DCPS/TCPProfilingTest/repo.conf:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPProfilingTest/run_test-4p1s.pl:
        * performance-tests/DCPS/TCPProfilingTest/subscriber.cpp:
        * performance-tests/DCPS/TCPProfilingTest/TCPProfiling.mpc:
        * performance-tests/DCPS/TCPProfilingTest/testMessage.idl:
        * performance-tests/DCPS/TCPProfilingTest/TestStats.h:
        * performance-tests/DCPS/TCPProfilingTest/Writer.cpp:
        * performance-tests/DCPS/TCPProfilingTest/Writer.h:

          Adding a throughput test that uses SimpleTcp transport.
          The best comparison is to change the idl to a bounded sequence.

Wed May  2 22:03:56 UTC 2007  Scott Harris <harris_s@ociweb.com>

      Merged https://svn.dre.vanderbilt.edu/DOC/DDS/branches/20070501_zero_copy_take
      branch (from 644 to 654) with changes indented below.

        Wed May  2 19:43:20 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/SubscriberImpl.cpp:
                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/README:

                        Add no existing loans precondition check to delete_datawriter.
                        And test for it.

                        * dds/DCPS/ZeroCopyAllocator_T.cpp:
                        * dds/DCPS/ZeroCopyAllocator_T.h:
                        * dds/DCPS/ZeroCopyAllocator_T.inl:
                        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeqBase.h:

                        Code cleanup.

        Tue May  1 23:32:14 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Avoid build warnings.

        Tue May  1 23:22:14 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * DDS_zero-copy.mwc:
                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:

                        Cleanup/simplify this zero-copy example.

                        * tests/DCPS/ZeroCopyRead/main.cpp:

                        Add test of providing an allocator.


        Tue May  1 22:08:44 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:

                        Support zero-copy take.

                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/README:

                        Update test to cover zero-copy take.

                        * tests/DCPS/ZeroCopyRead/run_test.pl:

                        Remove unneeded code.

Wed May  2 14:32:44 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
          Removed unused parameters to cleanup scoreboard warnings.

        * tests/DCPS/FooTest5/run_test.pl:
          minor cleanup.

        * tests/DCPS/ZeroCopyRead/main.cpp:
          Remove unused variables to cleanup scoreboard warnings.

Mon Apr 30 16:00:52 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * bin/DCPS/CPPTemplate.pm:
          Modify ULong to Long to get rid of scoreboard warnings.

Sat Apr 28 19:04:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:

          Added a 'requires' for the built_in_topics MPC feature.

Fri Apr 27 15:07:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:

          Fixed the case of "monitor.cpp" in the mpc file.

Thu Apr 26 23:18:51 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Enabled the builtintopic unit test and added the new
          builtintopic test.

        * tests/DCPS/BuiltInTopic/main.cpp:

          Uncommented some debugging message.

        * tests/DCPS/BuiltInTopicTest/BuiltInTopicTest.mpc:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.h:
        * tests/DCPS/BuiltInTopicTest/DataReaderListener.cpp:
        * tests/DCPS/BuiltInTopicTest/Messenger.idl:
        * tests/DCPS/BuiltInTopicTest/README:
        * tests/DCPS/BuiltInTopicTest/Writer.h:
        * tests/DCPS/BuiltInTopicTest/Writer.cpp:
        * tests/DCPS/BuiltInTopicTest/domain_ids:
        * tests/DCPS/BuiltInTopicTest/monitor.cpp:
        * tests/DCPS/BuiltInTopicTest/pub.ini:
        * tests/DCPS/BuiltInTopicTest/publisher.cpp:
        * tests/DCPS/BuiltInTopicTest/run_test.pl:
        * tests/DCPS/BuiltInTopicTest/sub.ini:
        * tests/DCPS/BuiltInTopicTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopicTest/tcp.conf:

          Added the built-in-topic test to verify if a new
          participant or old participant receive the same
          built-in-topic data.

        * tests/DCPS/TransientLocalTest/pub.ini:
        * tests/DCPS/TransientLocalTest/sub.ini:

          Added missing files.

        * tests/DCPS/TransientLocalTest/MessageTypeSupport.idl:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.h:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.cpp:

          Removed these files since it's idl and template generated
          code.

Thu Apr 26 19:14:04 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DdsDcpsInfrastructure.idl:

          Removed process_id and hostname from ParticipantBuiltinTopicData
          struct. These fields are accidently added during previous commit.

Thu Apr 26 16:01:23 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * bin/dcps_tests.lst:

          Added zero-copy functional test, tests/DCPS/ZeroCopyRead/run_test.pl

Thu Apr 26 14:44:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/HTemplate.pm:

          Method declarations within the class definition should not have the
          class's scope resolution prepended.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:

          Added an export macro on this class.  Thanks to Wallace Zhang for
          reporting this one.

Thu Apr 26 14:25:09 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.h:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.cpp:

          Fixed bug in transport and DCPS layer that remove_association()
          removes all assoications related to the remote id provided by
          the DCPSInfoRepo. It should just remove the association of
          the remote id and local id and the link only used by them.

        * bin/dcps_tests.lst:

          Added TransientLocalTest test.

        * tests/DCPS/TransientLocalTest/DataReaderListener.h:
        * tests/DCPS/TransientLocalTest/DataReaderListener.cpp:
        * tests/DCPS/TransientLocalTest/MessageTypeSupport.idl:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.h:
        * tests/DCPS/TransientLocalTest/MessageTypeSupportImpl.cpp:
        * tests/DCPS/TransientLocalTest/Messenger.idl:
        * tests/DCPS/TransientLocalTest/README:
        * tests/DCPS/TransientLocalTest/TransientLocalTest.mpc:
        * tests/DCPS/TransientLocalTest/Writer.h:
        * tests/DCPS/TransientLocalTest/Writer.cpp:
        * tests/DCPS/TransientLocalTest/domain_ids:
        * tests/DCPS/TransientLocalTest/publisher.cpp:
        * tests/DCPS/TransientLocalTest/run_test.pl:
        * tests/DCPS/TransientLocalTest/subscriber.cpp:
        * tests/DCPS/TransientLocalTest/tcp.conf:

          Added new test to test DataWriter with TRANSIENT_LOCAL durability
          will resend samples in sent list and sending list to the new
          associated datareaders.

Wed Apr 25 23:31:31 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * tests/DCPS/ZeroCopyRead/run_test.pl:

          Turn off BIT on the client side (since it is off on the InfoRepo).

Wed Apr 25 23:11:43 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

          Tell Subversion that these are resolved -- svn novice.

Wed Apr 25 22:38:56 UTC 2007  Scott Harris <harris_s@ociweb.com>

          Merge RT10633_zero_copy_read_branch from start, 564, to revision 625.
          "start is defined by tags/RT10633_zero_copy_read.

        * bin/dcps_tests.lst:

          Make performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl run
          both with zero-copy read (the default) and single-copy read.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          The following unit test projects: DcpsFooType, DdsDcps_UnitTest,
          and dcpsinfo_test_subscriber do not allow the DataReaderImpl
          to have pure virtual methods like auto_return_loan.


        * dds/DCPS/DataReaderImpl.h:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

          Resolved conflicts in the above files.

        Wed Apr 25 16:23:49 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopyAllocator_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.inl:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/ZeroCopySeqBase.h:

                        Get it to build with gcc v 3.4.4.

        Wed Apr 25 15:45:49 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/ZeroCopyAllocator_T.cpp:
                        * dds/DCPS/ZeroCopyAllocator_T.h:
                        * dds/DCPS/ZeroCopyAllocator_T.inl:
                        * dds/DCPS/ZeroCopyInfoSeq_T.cpp:
                        * dds/DCPS/ZeroCopyInfoSeq_T.h:
                        * dds/DCPS/ZeroCopyInfoSeq_T.inl:
                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeq_T.inl:
                        * dds/DdsDcps.mpc:

                        Gave each class its own set of files (.h, .inl, .cpp)
                        to avoid a circular include problem.

        Tue Apr 24 23:42:46 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * dds/DCPS/ZeroCopySeq_T.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DCPS/ZeroCopySeq_T.inl:
                        * dds/DCPS/ZeroCopySeqBase.cpp:
                        * dds/DCPS/ZeroCopySeqBase.h:
                        * dds/DCPS/ZeroCopySeqBase.inl:
                        * dds/DdsDcps.mpc:

                        Properly inline zero-copy read support classes.

        Tue Apr 24 20:10:51 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * bin/DCPS/HTemplate.pm:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Implement automatic return_loan.

                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/Simple.idl:

                        Add automatic return_loan test.
                        Test to be sure sample and Info destructors are called.

        Mon Apr 23 23:35:36 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:

                        Fix a delete while zero-copy sequence has reference bug.

                        * dds/DCPS/DataReaderImpl.cpp:

                        Minor comment change.

                        * tests/DCPS/ZeroCopyRead:
                        * tests/DCPS/ZeroCopyRead/domain_ids:
                        * tests/DCPS/ZeroCopyRead/main.cpp:
                        * tests/DCPS/ZeroCopyRead/README:
                        * tests/DCPS/ZeroCopyRead/run_test.pl:
                        * tests/DCPS/ZeroCopyRead/Simple.idl:
                        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:

                        Create a functional test for zero-copy read.


        Mon Apr 23 18:52:20 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * dds/DCPS/ReceivedDataElementList.h:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Implement zero-copy read FoodDataReaderImpl::return_loan "template".
                        Add reference counting of sample data to avoid deleting
                        samples out from under a zero-copy read sequence.
                        Make zero-copy read code support single-copy and zero-copy reads.
                        Make additional check defined by the DDS specification.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:

                        Do "zero-copy" read using the basic sample sequence.

                        * DDS_release_notes.txt:

                        Show how to build without BIT support.

        Fri Apr 20 15:31:52 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Allow the zero-copy read sequence type to be used with single-copy
                        reads.

                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:

                        Modify the test to allow testing of the zero-copy read capable
                        sequence type with zero or single copy reading.

        Thu Apr 19 17:48:29 UTC 2007  Scott Harris <harris_s@ociweb.com>

                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:
                        * dds/DCPS/ZeroCopySeq_T.h:

                        Resolve gcc build errors and warnings.

        Wed Apr 18 18:50:41 GMT 2007  Scott Harris <harris_s@ociweb.com>

                        * bin/DCPS/CPPTemplate.pm:
                        * bin/DCPS/HTemplate.pm:
                        * dds/DCPS/DataReaderImpl.cpp:
                        * dds/DCPS/DataReaderImpl.h:
                        * dds/DCPS/ZeroCopySeq_T.h:
                        * dds/DdsDcps.mpc:

                        First round of zero-copy read support.

                        * performance-tests/DCPS/TCPListenerTest/common.h:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
                        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
                        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

                        Make zero-copy read the default for this performance test.
                        Changed from 1200 to 700 microseconds per 8KB sample for 1-1 on WinXP.

                        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:


Wed Apr 25 13:11:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added a configuration NO_BUILT_IN_TOPICS that will identify builds
          that have BIT support disabled.  Once these tests are uncommented,
          they will be not be run on builds that have NO_BUILT_IN_TOPICS set as
          a configuration.

Wed Apr 25 17:49:12 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          If DDS is compiled with built_in_topics=0 then default 'bit_enabled'
          to false.

Wed Apr 25 13:11:42 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Added a configuration NO_BUILT_IN_TOPICS that will identify builds
          that have BIT support disabled.  Once these tests are uncommented,
          they will be not be run on builds that have NO_BUILT_IN_TOPICS set as
          a configuration.

Wed Apr 25 00:38:56 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Fixed bug of creation of incorrect queues when clear() was
          called.  The elems_ and queue_ were being given the wrong sized
          queues.

Tue Apr 25 00:15:33 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Fixed a bug in built-in-topic datawriter that should resend
          data in sending and sent list instead of sending unsent list.

        * dds/DCPS/DomainParticipantImpl.cpp:

          Rolled back the work around.

Tue Apr 24 18:41:35 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Added 2 seconds delay after participant creates the built-in-topic
          datareaders. This is a work around for the problem of the
          built-in-topic data lost during fully association period. We need
          find a better solution to synchronize the bit data publishing and
          subscribering.

Thu Apr 19 20:22:30 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:

          Rolled back part of changes in last commit - moved
          the send() call inside the lock since it could cause
          deadlock situation when there are multiple datawriters with
          multiple writing threads in a process. The deadlock situation
          happens when first writing thread calls send_start(), second
          writing thread calls send_start(), first writing thread calls
          send_stop() which hold the lock in DataLinkSet and calls second
          datawriter data_delivered(), the second datawriter holds its
          writer's lock and stuck on acquiring the lock in DataLinkSet.

Wed Apr 18 23:58:56 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:

          Moved the send() call outside the lock since the
          TransportInterface::send() is thread safe and
          added another parameter to data_available() to avoid
          duplicate code of resend_data_available() from
          data_available().

Wed Apr 18 18:28:20 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/DataWriterImpl.cpp:

          Removed unused parameter from reenqueue_all().

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed "no newline at end of file" warning.

Wed Apr 18 18:28:26 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:

          Removed tests/DCPS/Messenger_Imr from the list.

        * examples:
        * examples/DCPS:

          Created new directories.

        * examples/DCPS/Messenger_IOGR_Imr:
        * examples/DCPS/Messenger_Imr:

          Moved existing tests from the corresponding directories in
          tests/DCPS.

        * tests/DCPS/Messenger_IOGR_Imr:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.h:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger.idl:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * tests/DCPS/Messenger_IOGR_Imr/README:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.h:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/domain_ids:
        * tests/DCPS/Messenger_IOGR_Imr/pub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * tests/DCPS/Messenger_IOGR_Imr/sub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
        * tests/DCPS/Messenger_Imr:
        * tests/DCPS/Messenger_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_Imr/Messenger.idl:
        * tests/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * tests/DCPS/Messenger_Imr/README:
        * tests/DCPS/Messenger_Imr/Writer.h:
        * tests/DCPS/Messenger_Imr/Writer.cpp:
        * tests/DCPS/Messenger_Imr/domain_ids:
        * tests/DCPS/Messenger_Imr/pub.ini:
        * tests/DCPS/Messenger_Imr/publisher.cpp:
        * tests/DCPS/Messenger_Imr/run_test.pl:
        * tests/DCPS/Messenger_Imr/sub.ini:
        * tests/DCPS/Messenger_Imr/subscriber.cpp:

          Removed these files.  (They have been moved to examples/DCPS.)

Wed Apr 18 17:00:11 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/DdsDcpsInfrastructure.idl:
          Use Long (instead of int) in IDL files.

Wed Apr 18 16:25:09 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These main changes are fixing the built-in-topics bugs and
        supporting TRANSIENT_LOCAL_DURABILITY_QOS.

        *  bin/DCPS/CPPTemplate.pm:

           Made dispose ignore the case of bit sample not registered
           since it could hanppen.

        *  dds/InfoRepo/DCPSInfoRepo.cpp:

          Made poa_manager activate() called before initialize bit.
          Otherwise a TRANSIENT exception will be caught.

        *  dds/InfoRepo/DCPS_IR_Domain.cpp:

          Made the built-in-topic datawriter use the
          TRANSIENT_LOCAL_DURABILITY_QOS instead of using the
          TransientKludge. However, the TransientKludge is still
          be used for other purpose such as using that so the
          domainparticipant in DCPSInfoRepo will not create the
          bit datareader. We may need rename it.

        *  dds/DCPS/DataSampleList.cpp:
        *  dds/DCPS/DataSampleList.inl:
        *  dds/DCPS/DataSampleList.h:

          Made the next_send_sample_/previous_send_sample link isolated
          from the next_sample_/previous_sample link. When
          inserting/deleting DataSampleElement to one of the links will
          not change the other link.
          Added sub list to the DataSampleElement to support the
          transient local qos. The DataSampleElement defaults to have
          0 subs which means it will be sent to all datalinks
          otherwise it will be sent to the specified subscribers.

        *  dds/DCPS/DataReaderImpl.h:
        *  dds/DCPS/DataReaderImpl.cpp:

          - Added bit flag.
          - Added RepoId->InstanceHandler map to cache the info retrieved
            upon add_association any operation after will look the cache
            to get the instance handler such as for listener callback. This
            will solve the problem that remove_association will fail look
            up the bit information.
          - Fixed a bug that does not synchronize the reference counting
            on datareader servant. This causes access violation on TCPListener
            test sometimes.

        *  dds/DCPS/WriteDataContainer.cpp:
        *  dds/DCPS/WriteDataContainer.h:

          - Made all internal list(unsent, sending, released, sent) using
            next_send_sample/previous_send_sample link, instance sample list
            and waiting instance sample list using next_instance_sample link
            and added the sample_holder which uses next_sample/previous sample
            link to hold all samples by the order of write.
          - Supported reenqueue_all to specified subscribers.

        *  dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:

           Corrected the class name in a debug message.

        *  dds/DCPS/transport/framework/DataLink.h:
        *  dds/DCPS/transport/framework/DataLinkSetMap.h:
        *  dds/DCPS/transport/framework/DataLink.cpp:
        *  dds/DCPS/transport/framework/RepoIdSetMap.h:
        *  dds/DCPS/transport/framework/DataLink.inl:
        *  dds/DCPS/transport/framework/RepoIdSet.cpp:
        *  dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        *  dds/DCPS/transport/framework/RepoIdSet.h:
        *  dds/DCPS/transport/framework/DataLinkSet.h:
        *  dds/DCPS/transport/framework/TransportInterface.inl:
        *  dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        *  dds/DCPS/transport/framework/DataLinkSet.cpp:
        *  dds/DCPS/transport/framework/TransportImpl.cpp:

           - Supported the samples to send to specific datareaders
           - Fixed a problem that the publisher fully association expect the
             same repo set received as in pending association set. This will
             fail when the subscriber creates multiple datareaders to the
             same topic. The pending association set should be a subset of the
             fully association info from subscriber instead of exact same.

        *  dds/DCPS/transport/framework/TransportFactory.h:
        *  dds/DCPS/transport/framework/TransportFactory.cpp:

          Made the TransportFactory create a new reactor for different
          transport instance. With a single reactor thread, the input of
          one transport will be blocked while another transport is handling
          input. This would solve the problem that lookup instance handle
          by repo id fail via built-in-topic datareader during
          fully_association.

        *  dds/DCPS/DataWriterImpl.cpp:
        *  dds/DCPS/DataWriterImpl.h:

          - Supported TRANSIENT_LOCAL_QOS on datawriter. The datawriter
            will resend all current sending and sent samples to the new
            associated datareaders.
          - Added RepoId->InstanceHandler map to cache the info retrieved
            upon add_association any operation after will look the cache
            to get the instance handler such as for listener callback. This
            will solve the problem that remove_association will fail look
            up the bit information.

        *  dds/DCPS/BuiltInTopicUtils.h:

           Changed the fail return to RETCODE_ERROR.

        *  dds/DCPS/Service_Participant.cpp:
        *  dds/DCPS/Service_Participant.h:

           Made the built-in-topic defaults be on and removed the set_BIT().
           Supported -DCPSBit option in command line and also in DCPS config.
           The commandline option will overwrite the DCPS configuration.

        *  dds/DCPS/Qos_Helper.inl:
        *  dds/DCPS/PublisherImpl.h:
        *  dds/DCPS/PublisherImpl.cpp:

           Supported TRANSIENT_LOCAL_QOS.

        *  dds/DCPS/SubscriberImpl.cpp:

          Fixed a deadlock situation that the reactor thread and the
          thread calling delete_participant acquire locks in reverse
          order. The two involved locks are the si_lock_ in SubscriberImpl
          and the token_ in ACE_Select_Reactor_T. The thread calling
          delete_participant holds the lock in SubscriberImpl and tries
          to acquire lock in select reactor to remove handler while the
          reactor thread is handling an event which holds the lock in reactor.
          The reactor thread delieved the sample to datareader and insert
          the datareader to the subscriber internal cotainer which acquire
          the lock in SubscriberImpl. Since the lock in SubscriberImpl protects
          the internal data structure, to fix this problem, the lock scope
          in SubscriberImpl was adjusted so that the datareader will not hold
          the lock while calling remove_all_associations().


        *  dds/DdsDcpsInfrastructure.idl:

          Updated the DCPS_DATA_KEY definition for built-in-topic so it can
          generate appropriate KeyLessThan method.

        *  DevGuideExamples/DDS/Messenger/sub_udp.ini:
        *  DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        *  DevGuideExamples/DDS/Messenger/pub_mcast.ini:
        *  DevGuideExamples/DDS/Messenger/sub_mcast.ini:
        *  DevGuideExamples/DDS/Messenger/pub_udp.ini:
        *  DevGuideExamples/DDS/Messenger/run_test.pl:
        *  DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        *  performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        *  performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        *  performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        *  performance-tests/DCPS/SimpleLatency/run_test.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        *  performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        *  performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        *  performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:
        *  performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        *  performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        *  tests/DCPS/Messenger_IOGR_Imr/run_test.pl:
        *  tests/DCPS/unit/run_test.pl:
        *  tests/DCPS/Reconnect/run_test.pl:
        *  tests/DCPS/MultiTopicTest/run_test1.pl:
        *  tests/DCPS/MultiTopicTest/run_test2.pl:
        *  tests/DCPS/MultiTopicTest/run_test3.pl:
        *  tests/DCPS/MultiTopicTest/run_test.pl:
        *  tests/DCPS/DcpsIntegration/run_test-topic.pl:
        *  tests/DCPS/DcpsIntegration/run_test-integration.pl:
        *  tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        *  tests/DCPS/sub_init_loop/run_test.pl:
        *  tests/DCPS/Messenger_ZeroCopy/run_test.pl:
        *  tests/DCPS/FooTest3_0/run_test.pl:
        *  tests/DCPS/FooTest3_1/run_test_nokey.pl:
        *  tests/DCPS/FooTest3_1/run_test.pl:
        *  tests/DCPS/FooTest4_0/run_test.pl:
        *  tests/DCPS/FooTest3_2/run_test.pl:
        *  tests/DCPS/FooTest5_0/run_test.pl:
        *  tests/DCPS/DCPSInfoRepo/run_test.pl:
        *  tests/DCPS/FooTest4/run_test.pl:
        *  tests/DCPS/FooTest5/run_test.pl:
        *  tests/DCPS/LivelinessTest/run_test.pl:
        *  tests/DCPS/MultiDPTest/run_test.pl:

          Configured the tests either run with the bit on or
          off.
          - All performance tests defaults to run with non-bit.
            The TCPListenerTest has option to run with bit.
            e.g. run "run_test-1p4s.pl bit"
          - Some tests that the bit is not applicable.
            e.g. FooTest3_0, FooTest3_1 and FooTest3_2
          - The new tests are run with non-bit.
            e.g. tests/Messenger_Imr/run_test.pl
                 tests/DCPS/Messenger_ZeroCopy/run_test.pl
                 tests/DCPS/Prst_delayed_subscriber/run_test.pl
          - The UDP and Mcast test case does not run with bit.
          - other tests run with bit on.

        *  performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        *  performance-tests/DCPS/SimpleE2ETest/publisher.cpp:

           Made _var in globle space be destroyed before exit.

        *  performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        *  performance-tests/DCPS/SimpleLatency/sample_sub.cpp:

           Made the TheParticipantFactoryWithArgs called before user
           application parse command line.

        *  tests/DCPS/unit/Main.cpp:
        *  tests/DCPS/DcpsIntegration/topic.cpp:
        *  tests/DCPS/DcpsIntegration/infrastructure.cpp:

           Added transport factory shutdown call before service
           participant shutdown.

        *  tests/DCPS/Messenger_Imr/pub.ini:
        *  tests/DCPS/Messenger_Imr/sub.ini:

           Added DCPSBit configuration to turn off bit and
           uncommented domainparticipant bit data checking
           since it does not know itself.

        *  tests/DCPS/BuiltInTopic/main.cpp:
        *  tests/DCPS/FooTest5_0/main.cpp:

           Removed the TheServiceParticipant->set_BIT(true) call.

        *  tests/DCPS/FooTest5/common.cpp:

           Made some test cases not generate the unnecessary transports
           e.g. mcast test will not create SimpleTcp transport.

        *  bin/dcps_tests.lst:

          Disabled the reenqueue_all test since it is not applicable.
          The condition of reenqueue_all() call is changed from based
          on TransientKludge to based on TRANSIENT_LOCAL qos and
          resend the samples in queue to the new associated datareader
          instead of all subscribered datareaders.

Tue Apr 17 18:42:27 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
          Persistant participant (and dependencies) removal is now done by
          the DCPS_IR_Participant object. This object bypasses the
          InfoRepo servant in removing dependencies (topics, actors) and
          therefore needs to directly update the UpdateManager.

Tue Apr 17 15:42:59 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
        * dds/InfoRepo/Updater.h:
          Modified remove entity API to indicate entity type to be
          removed. Entities of different types (Topic, Participant, Actor)
          can have the same Id.

Mon Apr 16 20:51:19 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
          Modify timeouts to account for slower machines.

Mon Apr 16 16:05:44 UTC 2007  Ciju John  <johnc at ociweb dot com>

        * docs:
        * docs/README_InfoRepo_Persistence:
          Document the DCPS InfoRepo persistence API & mechanism.

Fri Apr 13 20:54:05 UTC 2007  Ciju John  <johnc at ociweb dot com>

        Cumulative modifications to add persistence in the DCPS InfoRepo.

        * dds/InfoRepo/ArrDelAdapter.h:
          Custom auto_ptr for dealing with arrays.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Add command line option '-reincarnate' to control restart
          state. Delay POA manager activation, so that requests cannot be
          processed unless InfoRepo is fully initialized.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
          Add API for underlying persistence layers to modify InfoRepo
          state.

        * dds/InfoRepo/DCPS_Entity_Id_Generator.h:
        * dds/InfoRepo/DCPS_Entity_Id_Generator.cpp:
          New API to set a base Id. Required if persisted sate is being
          restored.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
          Modify the persisted data structures to be compatible with ACE
          allocators. Add new svc config option '-reset' to control
          persistance file cleanup upon restart. Finish up the API
          implementations.

        * dds/InfoRepo/UpdateDataTypes.h:
          Core persistence data structures.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.inl:
        * dds/InfoRepo/UpdateManager.cpp:
          Data types for bridging the upstream and downstream
          layers. Finish up remaining API implemenations.

        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/Updater.cpp:
          Update to reflect modification UpdateManager types.

        * tests/DCPS/Prst_delayed_subscriber:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.h:
        * tests/DCPS/Prst_delayed_subscriber/DataReaderListener.cpp:
        * tests/DCPS/Prst_delayed_subscriber/Messenger.idl:
        * tests/DCPS/Prst_delayed_subscriber/Prst_delayed_subscriber.mpc:
        * tests/DCPS/Prst_delayed_subscriber/Writer.h:
        * tests/DCPS/Prst_delayed_subscriber/Writer.cpp:
        * tests/DCPS/Prst_delayed_subscriber/domain_ids:
        * tests/DCPS/Prst_delayed_subscriber/mySvc.conf:
        * tests/DCPS/Prst_delayed_subscriber/pub.ini:
        * tests/DCPS/Prst_delayed_subscriber/publisher.cpp:
        * tests/DCPS/Prst_delayed_subscriber/run_test.pl:
        * tests/DCPS/Prst_delayed_subscriber/sub.ini:
        * tests/DCPS/Prst_delayed_subscriber/subscriber.cpp:
        * tests/DCPS/Prst_delayed_subscriber/tcp.conf:
        * tests/DCPS/Prst_delayed_subscriber/README:
          Simple test to test InfoRepo persistance mechanism.

        * bin/dcps_tests.lst:
          Turn on Prst_delayed_subscriber in nightly builds.

Thu Apr 12 14:30:30 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Applied Chad's change to $ACE_ROOT/bin/auto_run_tests.pl from:
          Thu Apr 12 12:18:20 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

Tue Apr 10 22:50:05 UTC 2007  Scott Harris  <harris_s@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp
        * tests/DCPS/FooTest4/main.cpp
          Resolved access violation on Windows platforms because
          the transport threads were not shutdown before
          ServiceParticipant/ORB was shutdown.

        * tests/DCPS/FooTest3_0/PubDriver.cpp
        * tests/DCPS/FooTest3_1/PubDriver.cpp
        * tests/DCPS/FooTest3_2/PubDriver.cpp
          Changed the order of shutdown so transports were shutdown
          before the ServiceParticipant/ORB.

Thu Apr  5 14:37:57 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Elimiate warnings from unused variables on some platforms (QNX) that
          result in certain "#if defined" paths being taken through the code.

Fri Mar 30 13:55:52 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_Imr/run_test.pl:
          Inform ImR of initial InfoRepo shutdown. This is a work around
          for a bug in the 1.5a/DOC ImR. The ImR interprets an failure
          to ping the InfoRepo as a timeout and throws a location_forward
          to the publisher, leading to a publisher error.

Thu Mar 29 15:26:47 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config-legacy:
        * MPC/config-legacy/README.txt:
        * MPC/config-legacy/vc8_warnings.mpb:

          Added a new directory that will hold MPC config files needed to build
          DDS with older versions of ACE+TAO.  See the README.txt for details.

Wed Mar 28 15:28:05 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/UpdateManager.h:
          Fix minor class inheritance issues.

        * dds/InfoRepo/Updater.cpp:
          Add missing pch header file.

Wed Mar 28 14:38:10 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/PersistenceUpdater.h:
          Add missing header files. Caused problems on DOC builds.

Wed Mar 28 14:11:05 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
          Pass data downstream to persistence layer.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
          Connect up the PersistenceUpdater with the upper layer
          UpdateManager.

        * dds/InfoRepo/UpdateDataTypes.h:
          Templatize the data structures. Allows for reusability.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
          Added interfaces for upstream communication.

        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/Updater.cpp:
          Add cpp file. This got rid of a circular include dependency.

        * dds/InfoRepo/Updater.inl:
          Removed this file.

Tue Mar 27 19:13:03 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Changed some long double assignments, passed as an array
          of chars, for platforms where the size of the long
          double is less than 16 bytes, to use signed chars
          (7 bits) for all array values, where in each case
          half the previous values were using all 8 bits. This
          change eliminates warnings on platforms/compilers
          where char is a signed type, for example Windows/vc8.

        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:

          Added explicit casts to eliminate truncation warnings
          in assignments of time_t to signed 32-bit integer types.

        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.mpc:

          Added vc8_warnings.mpb as a base project to eliminate
          a vc8 warning about the parameters passed to std::copy.

Tue Mar 27 14:25:40 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Move variable initialization into the constructor.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
          The InfoRepo holds a reference to the UpdateManager. The
          UpdateManager is the gateway for all persistence and federation
          services.

        * dds/InfoRepo/Updater.h:
        * dds/InfoRepo/Updater.inl:
          Interfaces for the persistence/federation services.

        * dds/InfoRepo/PersistenceUpdater.h:
        * dds/InfoRepo/PersistenceUpdater.cpp:
          Concrete persistence implementation.

        * dds/InfoRepo/UpdateDataTypes.h:
          Data types common to all updates.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
          This is a service object that acts as the gateway coordinating
          the InfoRepo, persistence & federation services.

Mon Mar 26 21:52:05 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a compliation error introduced earlier today.

Mon Mar 26 21:25:07 UTC 2007  Scott Harris <harris_s@ociweb.com>

        * DDS_release_notes.txt:

          Add some known problems to the release notes.

Mon Mar 26 16:05:36 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a bug on registration sample marbling when data type has
          unbounded size and registers with variable size data. The problem is
          the serialization buffer does not allocate enough memory for the
          registered sample.

        * DDS_release_notes.txt:

          Added the bug fix to release note.

Fri Mar 23 15:13:43 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
          Made the UpdateManager a local service.

        * dds/InfoRepo/Update_export.h:
          Removed this file.

Thu Mar 22 14:18:12 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/UpdateManager.cpp:
          Include pre compiled headers.

        * tests/DCPS/Messenger_IOGR_Imr/publisher.cpp:
          Use the portable variant of the structure used for quering file
          stat().

Thu Mar 22 13:46:57 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Qos_Helper.inl: untabified

Wed Mar 21 22:13:32 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
          Register with the UpdateManager.

        * dds/InfoRepo/UpdateManager.h:
        * dds/InfoRepo/UpdateManager.cpp:
        * dds/InfoRepo/Update_export.h:
          Framework for dealing with Persistence and federation menagers.

Wed Mar 21 18:06:01 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Changed return value of an ACE_ERROR_RETURN macro
          to eliminate an int-to-bool warning on VC8.

        * dds/DCPS/Qos_Helper.inl:

          Changes to eliminate time_t-to-CORBA::Long conversion
          warnings on VC8.

Wed Mar 21 15:06:50 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/dcps_tests.lst:
          Additional flags for restricting tests for certain build types.

Tue Mar 20 21:16:06 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_test.pl:
          cosmetic changes

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Create InfoRepo class and reorganize existing code.

Tue Mar 20 19:38:17 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_IOGR_Imr:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.h:
        * tests/DCPS/Messenger_IOGR_Imr/Aggregator.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_IOGR_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger.idl:
        * tests/DCPS/Messenger_IOGR_Imr/Messenger_IOGR_Imr.mpc:
        * tests/DCPS/Messenger_IOGR_Imr/README:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.h:
        * tests/DCPS/Messenger_IOGR_Imr/Writer.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/domain_ids:
        * tests/DCPS/Messenger_IOGR_Imr/pub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/publisher.cpp:
        * tests/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * tests/DCPS/Messenger_IOGR_Imr/sub.ini:
        * tests/DCPS/Messenger_IOGR_Imr/subscriber.cpp:
          New test to demonstrate multiple InfoRepo objects being
          presented as a single IOGR. This test is currently incomplete.

Tue Mar 20 16:47:32 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_test.pl:
          Add debug messages.

        * tests/DCPS/BuiltInTopic/main.cpp:
          Remove empty line.

        * tests/DCPS/Messenger_Imr/run_test.pl:
          No need for a timed kill. A timed kill produces an error message
          which threw havoc on the nightly test run.

Tue Mar 20 13:51:51 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Fixed bugs in yesterday's check-in of this file.

Mon Mar 19 19:14:34 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          When running an executable directly (no run_test.pl), we need to take
          into account the -ExeSubDir setting.

Mon Mar 19 14:48:21 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_Imr/pub.ini:
          The repo.ior file path was mistakenly absolute. Fixed that.

Thu Mar 15 19:34:39 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Messenger_Imr:
        * tests/DCPS/Messenger_Imr/DataReaderListener.h:
        * tests/DCPS/Messenger_Imr/DataReaderListener.cpp:
        * tests/DCPS/Messenger_Imr/Messenger.idl:
        * tests/DCPS/Messenger_Imr/Messenger_Imr.mpc:
        * tests/DCPS/Messenger_Imr/README:
        * tests/DCPS/Messenger_Imr/Writer.h:
        * tests/DCPS/Messenger_Imr/Writer.cpp:
        * tests/DCPS/Messenger_Imr/domain_ids:
        * tests/DCPS/Messenger_Imr/pub.ini:
        * tests/DCPS/Messenger_Imr/publisher.cpp:
        * tests/DCPS/Messenger_Imr/run_test.pl:
        * tests/DCPS/Messenger_Imr/sub.ini:
        * tests/DCPS/Messenger_Imr/subscriber.cpp:
          New test for InfoRepo - TAO ImR compatibility.

        * bin/dcps_tests.lst:
          Add new test to automated test list.

Thu Mar 15 14:29:19 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:

          The nsadd binary needs to be found in $ACE_ROOT/bin.  The fact that
          it's also in $TAO_ROOT/utils/nslist is just a side-effect of the GNU
          make build system.

        * tests/DCPS/Messenger_ZeroCopy/run_corbaloc_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/run_ns_test.pl:

          Removed these files.  These alternate forms of run_test.pl are not
          used for this test.

Tue Mar 13 13:56:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/Messenger_ZeroCopy/Messenger.mpc:
        * tests/DCPS/Messenger_ZeroCopy/Messenger_ZeroCopy.mpc:

          Renamed this file from Messenger.mpc to Messenger_ZeroCopy.mpc since
          MPC project names must be unique in the workspace and project names
          are derived from the name of the .mpc file.

Mon Mar 12 21:12:47 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          cosmetic fixes - indent lines.

        * tests/DCPS/Messenger_ZeroCopy:
        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.h:
        * tests/DCPS/Messenger_ZeroCopy/DataReaderListener.cpp:
        * tests/DCPS/Messenger_ZeroCopy/Messenger.idl:
        * tests/DCPS/Messenger_ZeroCopy/Messenger.mpc:
        * tests/DCPS/Messenger_ZeroCopy/README:
        * tests/DCPS/Messenger_ZeroCopy/Writer.h:
        * tests/DCPS/Messenger_ZeroCopy/Writer.cpp:
        * tests/DCPS/Messenger_ZeroCopy/domain_ids:
        * tests/DCPS/Messenger_ZeroCopy/mcast.conf:
        * tests/DCPS/Messenger_ZeroCopy/pub.ini:
        * tests/DCPS/Messenger_ZeroCopy/pub_mcast.ini:
        * tests/DCPS/Messenger_ZeroCopy/pub_udp.ini:
        * tests/DCPS/Messenger_ZeroCopy/publisher.cpp:
        * tests/DCPS/Messenger_ZeroCopy/run_corbaloc_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/run_ns_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/run_test.pl:
        * tests/DCPS/Messenger_ZeroCopy/sub.ini:
        * tests/DCPS/Messenger_ZeroCopy/sub_mcast.ini:
        * tests/DCPS/Messenger_ZeroCopy/sub_udp.ini:
        * tests/DCPS/Messenger_ZeroCopy/subscriber.cpp:
        * tests/DCPS/Messenger_ZeroCopy/tcp.conf:
        * tests/DCPS/Messenger_ZeroCopy/udp.conf:
          Add new test to demonstrate zero copy semantics.

        * bin/dcps_tests.lst:
          Add Messenger_ZeroCopy to nightly test framework.

Wed Mar  7 23:32:35 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
          Configured to dynamically load the SimpleTCP library.

        * bin/dcps_tests.lst:
          Add Messenger tests run_corbaloc_test.pl run_ns_test.pl to
          nightly tests list.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Set log level for debug messages.

Wed Mar  7 16:57:40 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * MPC/config/dcps.mpb:
        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.h:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType2/FooDataReaderImpl.h:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * dds/DCPS/Publication:
        * dds/DCPS/Publication/DataWriterImpl.h:
        * dds/DCPS/Publication/DataWriterImpl.cpp:
        * dds/DCPS/Publication/Publication_pch.h:
        * dds/DCPS/Publication/Publication_pch.cpp:
        * dds/DCPS/Publication/PublisherImpl.h:
        * dds/DCPS/Publication/PublisherImpl.cpp:
        * dds/DCPS/Publication/publication_export.h:
        * dds/DCPS/Subscription:
        * dds/DCPS/Subscription/DataReaderImpl.h:
        * dds/DCPS/Subscription/DataReaderImpl.inl:
        * dds/DCPS/Subscription/DataReaderImpl.cpp:
        * dds/DCPS/Subscription/SubscriberImpl.h:
        * dds/DCPS/Subscription/SubscriberImpl.cpp:
        * dds/DCPS/Subscription/Subscription_pch.h:
        * dds/DCPS/Subscription/Subscription_pch.cpp:
        * dds/DCPS/Subscription/subscription_export.h:
        * dds/Publication.mpc:
        * dds/Subscription.mpc:

          Reverting the previous checkin. This work is moving to a branch and
          will be merged here once all intradependencies in DdsDcps are
          resolved.

Wed Mar  7 15:41:13 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * MPC/config/dcps.mpb:
        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/Publication:
        * dds/DCPS/Publication/DataWriterImpl.h:
        * dds/DCPS/Publication/DataWriterImpl.cpp:
        * dds/DCPS/Publication/Publication_pch.h:
        * dds/DCPS/Publication/Publication_pch.cpp:
        * dds/DCPS/Publication/PublisherImpl.h:
        * dds/DCPS/Publication/PublisherImpl.cpp:
        * dds/DCPS/Publication/publication_export.h:
        * dds/DCPS/Subscription:
        * dds/DCPS/Subscription/DataReaderImpl.h:
        * dds/DCPS/Subscription/DataReaderImpl.inl:
        * dds/DCPS/Subscription/DataReaderImpl.cpp:
        * dds/DCPS/Subscription/SubscriberImpl.h:
        * dds/DCPS/Subscription/SubscriberImpl.cpp:
        * dds/DCPS/Subscription/Subscription_pch.h:
        * dds/DCPS/Subscription/Subscription_pch.cpp:
        * dds/DCPS/Subscription/subscription_export.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/Publication.mpc:
        * dds/Subscription.mpc:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.h:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType2/FooDataReaderImpl.h:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:

          Began the process of moving publisher and subscriber behavior into
          new libraries to reduce footprint. These libraries are Publication
          and Subscription.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed these files.

Wed Feb 28 16:46:07 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/auto_run_tests.pl:

          Added the -l command-line option, used to specify an alternate file
          containing the test list.
          When using the -s option (sandbox), don't assume that the target test
          is a Perl script, it may be an executable.  Files ending in .pl are
          assumed to be Perl scripts, otherwise they will be treated as
          executables.
          Also, removed code specific to ACE tests.

Tue Feb 27 18:46:29 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/auto_run_tests.pl:

          Fixed to run .exe files specified in the .lst for perl to run.

Fri Feb 23 18:30:41 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * DCPS/transport/framework/TransportReceiveStrategy.h:
        * DCPS/transport/framework/DataLink.h:
        * DCPS/transport/framework/ThreadSynch.h:
        * DCPS/transport/framework/TransportImpl.h:
        * DCPS/transport/framework/TransportFactory.h:
        * DCPS/transport/framework/TransportInterface.h:
        * DCPS/transport/framework/TransportSendStrategy.h:

          Added comments to describer the ownership of transport components.

Thu Feb 22 14:10:25 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * MPC/config/dcpsexe_with_reliable_multicast.mpb:
        * bin/dcps_tests.lst:
        * dds/DCPS/transport/ReliableMulticast:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast.mpc:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastDataLink.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastLoader.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastRcHandles.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastThreadSynchResource.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastThreadSynchResource.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastThreadSynchResource.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportConfiguration.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportGenerator.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportGenerator.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportGenerator.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImplFactory.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportReceiveStrategy.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.inl:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportSendStrategy.cpp:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast_Export.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast_pch.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticast_pch.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail:
        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.h:
        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/EventHandler.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.h:
        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/NackGenerator.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/Packet.h:
        * dds/DCPS/transport/ReliableMulticast/detail/Packet.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/Packet.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketHandler.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketReceiverCallback.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.h:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/PacketSerializer.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/Packetizer.h:
        * dds/DCPS/transport/ReliableMulticast/detail/Packetizer.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/Packetizer.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketReceiver.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/ReceiverLogic.h:
        * dds/DCPS/transport/ReliableMulticast/detail/ReceiverLogic.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReceiverLogic.cpp:
        * dds/DCPS/transport/ReliableMulticast/detail/SenderLogic.h:
        * dds/DCPS/transport/ReliableMulticast/detail/SenderLogic.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/SenderLogic.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.h:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/common.h:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/reliable_multicast.conf:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/transport/reliable_multicast:
        * tests/transport/reliable_multicast/reliable_multicast.mpc:
        * tests/transport/reliable_multicast/unittest.cpp:

          Added a reliable multicast transport from the ReliableMulticast
          branch, merging revisions 450 through 528 from that branch into
          the trunk.  This transport has the same basic configuration
          parameters as the unreliable multicast transport, but adds the
          following:

            sender_history_size - How many packets to buffer for potential
              retransmission
            receiver_buffer_size - How large a buffer to keep on the receiving
              side to handle reordering, late delivery, etc.

          This transport introduces fragmentation and re-assembly logic so
          from the perspective of the transport framework it appears that
          a receiver is joining a UDP stream already in progress.

          When an unrecoverable fault is detected, the transport currently
          sets the disconnected flag.  This should eventually be configurable
          through QoS parameters.

            svn merge -r450:528 https://svn.dre.vanderbilt.edu/DOC/DDS/branches/ReliableMulticast

Thu Feb 15 14:50:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:

          In the change logged at
          Wed Feb  7 16:38:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>
          I forgot to change the "after +=" lines of the MPC file to match the
          new project name.

Wed Feb 14 17:27:00 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/built_in_topic_support.mpb:

          Fixed whitespace.

        * MPC/config/dcps.mpb:
        * MPC/config/dds_suppress_any_support.mpb:
        * dds/dcps_bits.mpb:

          Earlier versions of TAO (such as 1.4a) don't work properly with the
          tao_idl -Sa -St options.  This check-in provides an MPC feature that
          will be used to turn on or off the -Sa -St options.

Wed Feb 14 16:41:22 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Eliminate "unused parameter" warnings.

Tue Feb 13 23:00:56 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps.mpb:
        * dds/dcps_bits.mpb:

          Default to call tao_idl with -Sa and -St arguments to suppress
          generation of CORBA Any and Typecode operations.

        * dds/DdsDcpsInfrastructure.idl:
        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Place Built-in Topic specific code within #ifndef DDS_MINIMUM_BIT so
          that even more is excluded from the build when the MPC feature
          built_in_topics is zero.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:

          As a consequence of the above IDL changes, the
          get_matched_{publication,subscription}_data() operations are not
          available in a built_in_topics=0 build.  Before this change the
          operations were present but returned an "unsupported" error code.

Tue Feb 13 17:45:11 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Added a way for main() to inform common.cpp that the transports need
          to be unloaded.  Without this the transports would attempt to unload
          after main() completes (due to static destructors).  The transports
          can't unload after main() completes because the dynamic libraries
          that implement that transports have already been unloaded.

        * tests/DCPS/BuiltInTopic/run_test.pl:

          Since SimpleTCP is now a separate library, need to enable the
          -ORBSvcConf argument to load it.

Mon Feb 12 19:57:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/built_in_topic_support.mpb:
        * MPC/config/dcps.mpb:
        * MPC/config/dcps_ts_defaults.mpb:
        * MPC/config/dcpsexe_with_tcp.mpb:
        * MPC/config/dcpsexe_with_unreliable_dgram.mpb:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.mpc:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.mpc:
        * dds/DdsDcps.mpc:
        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/dcps_bits.mpb:

          Added the ability to build without built-in topic support as an MPC
          feature.  To use, run mwc.pl like so (from $DDS_ROOT):
                  mwc.pl -type gnuace -features built_in_topics=0 DDS.mwc
          Alternatively, add "built_in_topics=0" to default.features within
          $ACE_ROOT/bin/MakeProjectCreator/config (the former method is
          preferred so that we don't have DDS-specific modifications within the
          ACE source tree).

          Also, cleaned up the various mpb and mpc files to simplify things.

        * dds/DCPS/TypeSupportImpl.h:
        * dds/DCPS/TypeSupportImpl.cpp:

          Removed these files.  They were not used by the project.

        * dds/DCPS/*.{h,cpp,inl}:
        * dds/DCPS/transport/framework/*.{h,cpp,inl}
        * dds/DCPS/transport/simpleUnreliableDgram/*.{h,cpp,inl}:

          Normalized all #include preprocessor directives to have exactly one
          space after the #include.

        * dds/DCPS/transport/simpleTCP/*.{h,cpp,inl}:

          Normalized all #include preprocessor directives to have exactly one
          space after the #include.  Also, enabled PCH for SimpleTCP since it
          was still referencing dds/DCPS from one it used to be part of that
          library.

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:

          Made the project names consistent (DDS_Messenger_idl instead of
          Messenger_idl).

        * tests/DCPS/BuiltInTopic/run_test.pl:

          Load the SimpleTCP library via svc.conf.

        * tests/DCPS/FooType/Foo_Singleton_Transport.cpp:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/common.h:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/transport/dds_comparative/*.{h,cpp}:
        * tests/transport/mcast_simple/*.{h,cpp}:
        * tests/transport/mcast_simple_n/*.{h,cpp}:
        * tests/transport/simple/*.{h,cpp}:
        * tests/transport/simple_bp/*.{h,cpp}:
        * tests/transport/simple_bp_rm/*.{h,cpp}:
        * tests/transport/simple_n/*.{h,cpp}:
        * tests/transport/udp_simple/*.{h,cpp}:
        * tests/transport/udp_simple_n/*.{h,cpp}:

          Normalized all #include preprocessor directives to have exactly one
          space after the #include.

Mon Feb 12 20:23:50 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Transient_Kludge.cpp:
        * dds/DCPS/transport/framework/TheTransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Work-around to force a single instance of the singleton
          object. Previously, building against the DOC TAO created
          singleton instances local to a shared library.

Mon Feb 12 19:20:29 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS version 0_11 released.

Mon Feb 12 19:02:14 UTC 2007  Ciju John  <johcn@ociweb.com>

        * DDS_release_notes.txt:
        * dds/Version.h:
          Update release version number.

Sun Feb 11 19:57:32 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:
          Fixed a typo, one line was missing the ':' before !STATIC.

Fri Feb  9 22:00:08 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS version 0_10 released.

Fri Feb  9 03:43:59 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * NEWS:

          Removed this file and moved its contents to the corresponding
          ChangeLog entry.
          (see Wed Jul 26 23:50:35 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>)

Thu Feb  8 19:17:16 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:

          The DCPSInfoRepo executable is now moved to $DDS_ROOT/bin.  It was
          previously located in $DDS_ROOT/dds/InfoRepo.

        * DDS_release_notes.txt:

          Documented this change.

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/run_test.pl:

          Updated all tests that use the DCPSInfoRepo so that the test looks in
          $DDS_ROOT/bin for the executable.

Wed Feb  7 23:20:35 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DDS_release_notes.txt:
          Minor modifications.

Wed Feb  7 16:38:18 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:

          Added "after" clauses to ensure that the client and server are not
          built until the IDL-generated files are in place.  This .mpc file
          should be the "gold standard" of how to use MPC with DDS.  It factors
          out the common IDL tasks so that the client and server projects can
          be run in parallel (VC8 and GNU make -j) without errors.

Wed Feb  7 16:01:49 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DDS_release_notes.txt:
          Add release notes for the 0.10 release.

Mon Feb  5 18:04:11 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/run_test.pl:

          Added SimpleTcp service config to mixed_trans test to load the
          SimpleTcp library. This would fix the mixed transport test failure.

        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.cpp:

          Added transport type checking and print error if an incorrent type
          provided by service config file.

        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.cpp:

          Updated incorrect type error message to have ERROR keyword to be easy for
          debugging.

Mon Feb  5 16:24:06 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added missing ":" that makes the build configuration be the
          parameter of test script.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Fixed warnings due unused or not initialized local variables.

Fri Feb  2 23:49:00 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for SimpleMcast support and refactor of SimpleUdp and
          SimpleMcast.

Fri Feb  2 22:36:00 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/sub_udp.ini:
        * DevGuideExamples/DDS/Messenger/pub_udp.ini:

          Removed transport configuration attributes that are for SimpleTcp
          and not for SimpleUdp to avoid confusion.

Fri Feb  2 20:37:16 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps.mpb:
        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * tests/DCPS/Reconnect/Reconnect.mpc:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:

          Moved "requires += exceptions" to the base project since all DDS apps
          now require exceptions.

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:

          Eliminated "unused local variable"-type warnings that were left over
          from the scripted removal of exception macros.

Fri Feb  2 15:03:56 UTC 2007  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
          Factor our common build segments to avoid conflicts in parallel
          build systems (-j > 1).

Fri Feb  2 14:46:39 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/dcps_tests.lst:
          Unknowingly introduced character created a wrong file
          patch. Fixed it.

Thu Feb  1 23:30:48 UTC 2007  Ciju John  <johnc@ociweb.com>

        * bin/dcps_tests.lst:
          Most tests now need to dynamically load the SimpleTCP
          library. Don't run those on static builds.

Thu Feb  1 22:47:13 UTC 2007  Ciju John  <johnc@ociweb.com>

        * MPC/config/dcpsexe_with_tcp.mpb:
          MPC configuration for linking application against SimpleTCP.

        * dds/DCPS/transport/framework/TransportDefs.h:
          cosmetic changes.

        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
          Remove code to auto-config SimpleTCP. The assumption that
          SimpleTCP is part of the DDS core is no longer valid.

        * dds/DCPS/transport/simpleTCP/SimpleTcp.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcp.mpc:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpLoader.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcp_export.h:
        * dds/DdsDcps.mpc:
          Modificat/Addit ions to break up SimpleTCP from the DDS core.

        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/tcp.conf:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/tcp.conf:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/tcp.conf:
        * tests/transport/simple_bp/pub_main.cpp:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp/sub_main.cpp:
        * tests/transport/simple_bp_rm/pub_main.cpp:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_bp_rm/sub_main.cpp:
        * tests/transport/simple_n/pub_main.cpp:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/simple_n/sub_main.cpp:
          Additions to dynamically load/init SimpleTCP.

        * tests/transport/simple/DDS_transport_simple.mpc:
        * tests/transport/simple/README:
        * tests/transport/simple/pub_main.cpp:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple/sub_main.cpp:
        * tests/transport/simple/tcp.conf:
          Configure test to statically link/configure against SimpleTCP library.

        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
          Factor our common build segments to avoid conflicts in parallel
          build systems (-j > 1)

Thu Feb  1 21:02:13 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Fixed a bug that the FULLY_ASSOCIATION message serialize
          stream contains size_t data. Since size_t is platform
          dependent, this makes the FULLY_ASSOCIATION message
          deserialized incorrectly in the inter-host test. Replacing
          size_t with CORBA::ULong fixed the problem.

Thu Feb  1 16:40:24 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantFactoryImpl.h:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/EntityImpl.h:
        * dds/DCPS/EntityImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/SubscriberImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicDescriptionImpl.h:
        * dds/DCPS/TopicDescriptionImpl.cpp:
        * dds/DCPS/TopicImpl.h:
        * dds/DCPS/TopicImpl.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DomainParticipantListener_i.h:
        * dds/InfoRepo/DomainParticipantListener_i.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.cpp:
        * tests/DCPS/DcpsIntegration/TopicListener.h:
        * tests/DCPS/DcpsIntegration/TopicListener.cpp:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.h:
        * tests/DCPS/FooTest3_0/DomainParticipantListener.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PublisherListener.h:
        * tests/DCPS/FooTest3_0/PublisherListener.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooDataReaderImpl.h:
        * tests/DCPS/FooType/FooDataReaderImpl.cpp:
        * tests/DCPS/FooType/FooDataWriterImpl.h:
        * tests/DCPS/FooType/FooDataWriterImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/FooType2/FooDataReaderImpl.h:
        * tests/DCPS/FooType2/FooDataReaderImpl.cpp:
        * tests/DCPS/FooType2/FooDataWriterImpl.h:
        * tests/DCPS/FooType2/FooDataWriterImpl.cpp:
        * tests/DCPS/FooType2/FooTypeSupportImpl.h:
        * tests/DCPS/FooType2/FooTypeSupportImpl.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.h:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Removed TAO exception emulation macros using the script
          $ACE_ROOT/bin/rm_exception_macros.pl from the DOC group repository.

Tue Jan 30 22:58:55 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
          Pass the instance_data as const-reference since it may be very large.

        * dds/DCPS/transport/framework/BasicQueueLinkChunk_T.h:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
          Added #includes needed for an inline=0 build.

Tue Jan 30 20:43:24 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP:

          Removed the empty directory.

Tue Jan 30 19:10:59 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub_mcast.ini:
        * DevGuideExamples/DDS/Messenger/sub_mcast.ini:

          Added missing files.

Tue Jan 30 18:27:53 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        These changes refactored SimpleUdp and SimpleMcast (unreliable multicast)
        and supported default transport ids for SimpleMcast. A new library
        - SimpleUnreliableDgram replaced the SimpleUdp and SimpleMcast.(See 9775)

        * DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * DCPS/transport/simpleMCAST/SimpleMcastGenerator.h:
        * DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * DCPS/transport/simpleMCAST/SimpleMcastLoader.cpp:
        * DCPS/transport/simpleMCAST/SimpleMcastGenerator.cpp:
        * DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram_pch.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpGenerator.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSynchResource.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.vcproj:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpFactory.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpConfiguration.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastSocket.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastGenerator.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramConfiguration_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramLoader.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.mpc:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSendStrategy.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram_pch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgram_export.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpGenerator.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastConfiguration.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastFactory.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUdpSocket.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramDataLink_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSocket_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.inl:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport_rch.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleMcastGenerator.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramSynchResource.h:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.cpp:
        * DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramReceiveStrategy.inl:

          Merged SimpleUdp and SimpleMcast transport together in SimpleUnreliableDgram library.
          The -type parameter in service configuration specifies which transport will register
          with the transport factory. A process can register both "SimpleUdp" and "SimpleMcast"
          or one of the two transports via service configuration.

        * DCPS/transport/framework/TransportDefs.h:

          Added two default id for SimpleMcast, one for subscriber (DEFAULT_SIMPLE_MCAST_SUB_ID)
          and one for publisher (DEFAULT_SIMPLE_MCAST_PUB_ID).

        * DCPS/transport/framework/TransportGenerator.h:
        * DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:

          Added default_transport_ids() function to support multiple default transport
          ids configuration registration and added transport id parameter to new_configuration()
          to provide different default configurations for the transport.

        * DCPS/transport/framework/TransportFactory.h:
        * DCPS/transport/framework/TransportFactory.cpp:

          Removed the default transport id parameter from the register_generator (). The default
          ids will be provided by generator via default_transport_ids(). Upon the transport library
          loading, the default transport configurations will be created and registered with the
          transport factory.

        * MPC/config/dcpsexe_with_unreliable_dgram.mpb:

          Added the project base depend on SimpleUnreliableDgram lib.

        * MPC/config/dcpsexe_with_mcast.mpb:
        * MPC/config/dcpsexe_with_udp.mpb:

          Removed these files since we removed SimpleUdp and SimpleMcast lib.

        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.mpc:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_export.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.mpc:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_export.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport_rch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:

          Removed SimpleUdp and SimpleMcast directories.

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/mcast.conf:
        * DevGuideExamples/DDS/Messenger/udp.conf:

          Added mcast and default mcast test cases.

        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/McastListenerTest/mcast.conf:
        * performance-tests/DCPS/McastListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/udp.conf:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/udp.conf:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooTest5_0/udp.conf:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/udp.conf:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/LivelinessTest/udp.conf:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/mcast.conf:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple/udp.conf:
        * tests/transport/mcast_simple_n/DDS_transport_mcast_simple_n.mpc:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/mcast_simple_n/mcast.conf:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:
        * tests/transport/udp_simple_n/udp.conf:

          Updated tests that use the SimpleMcast and SimpleUdp libraries to
          use SimpleUnreliableDgram library.

        * bin/dcps_tests.lst:

          Added mcast and default mcast Messenger examples to nightly builds.

Mon Jan 29 19:19:53 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * DDS.mwc:
          Changed relative path to the .mpb files.  They have now moved to
          $DDS_ROOT/MPC/config.  This is required to build with older versions
          of the DOC group or OCI ACE+TAO.

Mon Jan 29 18:36:36 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
          The .h file uses throw() instead of ACE_THROW_SPEC(()) therefore so
          should the .cpp file.  This eliminates a compile error when the macro
          ACE_HAS_NO_THROW_SPEC is on.

Fri Jan 26 20:03:11 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/Version.h:
        * rules.dds.GNU:
          Add version file and rules specific to DDS.

Thu Jan 25 23:07:30 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimplUdp.mpc:
          Removed this file.

        * dds/DCPS/transport/simpleUDP/SimpleUdp.mpc:
          Added this file.

Thu Jan 25 15:35:00 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/TheTransportFactory.h:
        * dds/DCPS/Service_Participant.h:

          Disabled warning "C4231: nonstandard extension used : 'extern'
          before template explicit instantiation" for VC6 builds.

Thu Jan 25 17:26:52 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/SubDriver.cpp:
          reenqueue_all test failing on oslo.phx due to pub-sub
          synchronization issues. Since we can't delay reenqueue messages
          the fix is to delay the Publisher invocation by 5 secs.

Wed Jan 24 16:02:58 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.inl:

          Fixed a compilation error on vc6 build due to returning a value
          in a void return function.

Tue Jan 23 22:56:33 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
          Reorder the last write such that the publisher and subscriber
          shutdown in a deterministic manner.

        * tests/DCPS/FooTest3_0/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:
          Only count the publisher written messages, not the liveliness
          msgs.

Tue Jan 23 22:01:54 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/DataLink.inl:

          Supported notifications upon backpressure timed out.
          The "max_output_pause_period" configuration is added to
          SimpleMcast and SimpleUdp as in SimpleTcp. This is the
          maximum period (in milliseconds) of not being able to send
          queued messages. If there are samples queued and no output
          for longer than this period then the socket will be closed
          and on_*_lost() callbacks will be called. If the value is
          zero, the default, then this check will not be made.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Removed a not needed include header.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Renamed a parameter in constructor.

Tue Jan 23 20:29:44 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest5/FooTest5.mpc:
        * tests/DCPS/FooTest5/README:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
          The test now statically links and configures the MCast transport.

        * tests/transport/mcast_simple/DDS_transport_mcast_simple.mpc:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/mcast.conf:
          The test now dynamically links and configures the MCast library.

        * bin/dcps_tests.lst:
          MCast FooTest5 has been turned on and mcast_simple turned off
          for static builds.

Tue Jan 23 18:04:50 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Fix memory leak. The delayed_delivered_notification_queue_ &
          delayed_notification_mode_ weren't being freed up properly. Also
          add check for array overrun.

Tue Jan 23 17:17:37 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:

          Corrected the timeout passed to handle_write_ready(). The
          default timeout (ACE_Time_Value*) should be nil (wait forever)
          instead of a zero time value(not wait). This should
          fix the SimpleTcp performance test on handle_write_ready
          timed out.

Mon Jan 22 23:50:46 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:

          Added missing headers to fix the compilation error on linux.

Mon Jan 22 23:35:31 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimplUdp.mpc:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSynchResource.h:

          Added backpressure detection even it's unlinkly happen.

        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:

          Refactored the backpressure detection and handling code.

Mon Jan 22 21:02:49 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Allow configurations to specify a transport that is not in a loaded
          library.  This will print a warning to ACE_ERROR but will not fail
          until the user attempts to attach the transport to a reader/writer.
          This is useful for tests, we can now unify sub.ini and sub_udp.ini,
          for example.

Mon Jan 22 20:55:55 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:

          Fixed reading configuration value "receiver" from .ini file.

Mon Jan 22 16:25:19 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:
          Replaced sleep commands with more concrete synchronization
          strategies to add determinism to the test.

Fri Jan 20 00:25:30 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/McastListenerTest/common.h:

          Fixed a compilation error on linux due to the incorrect
          include directory.

Fri Jan 19 23:54:10 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSynchResource.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.mpc:

          New files added to handle backpressure case.

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:

          Added backpressure detection and handling. The backpressure is
          observed with a "resource temporary unavailable" error. The same
          mechanism as in SimpleTcp is used to detect the backpressure.
          Upon backpressure, the samples will be queued to the send strategy
          internal queue and wait for resource available and then send.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Corrected comment.

        * performance-tests/DCPS/McastListenerTest/common.h:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/McastListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/McastListenerTest/domain_ids:
        * performance-tests/DCPS/McastListenerTest/mcast.conf:
        * performance-tests/DCPS/McastListenerTest/McastListener.mpc:
        * performance-tests/DCPS/McastListenerTest/publisher.cpp:
        * performance-tests/DCPS/McastListenerTest/subscriber.cpp:
        * performance-tests/DCPS/McastListenerTest/TestStats.h:
        * performance-tests/DCPS/McastListenerTest/Writer.cpp:
        * performance-tests/DCPS/McastListenerTest/Writer.h:
        * performance-tests/DCPS/McastListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/McastListenerTest/run_test-4p1s.pl:

          Added multicast performance tests.

Fri Jan 19 23:29:49 UTC 2007  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_0/run_test.pl:
          This test was randomly failing on some platforms because it
          depended upon hard-cast time-outs. The changes make the test
          more flexible and deterministic.

Fri Jan 19 18:10:41 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_2/SimpleDataReader.cpp:

          Fixed a warning from a not used variable.

Fri Jan 19 18:00:56 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/TheTransportFactory.h:

          Fixed the compilation warning on VC6 because the __GNUC__
          is used without checking if it's defined.

Thu Jan 18 23:52:01 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
          Removed tabs.

Thu Jan 18 22:24:58 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/EntryExit.h:
        * dds/DCPS/transport/framework/TransportHeader.cpp:
          Modify usage of Debug macros.

Thu Jan 18 21:46:17 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Cosmetic changes.

        * dds/DCPS/transport/framework/EntryExit.h:
          Some private members were logically constants. Made them
          explicit.

Wed Jan 17 23:31:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/framework/EntryExit.h:

          Changed broken #include from "ace/OS_NS_unistd.h" to
          "ace/OS_NS_string.h" since that's where ACE_OS::strncpy() lives.

Wed Jan 17 19:44:54 UTC 2007  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
          Changed default passive_connect_duration to 10000 millisecs.

        * tests/DCPS/FooTest3_1/SimpleDataReader.cpp:
        * tests/DCPS/FooTest3_2/SimpleDataReader.cpp:
          Commented out some printouts which were outputting a lot of
          nightly builds logs.

Wed Jan 17 19:36:34 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:

          Fixed the test failures on windows. It appears that we should not
          specify the local_address for the publisher, it should use the
          default value, otherwise the subscriber will not receive the
          samples.

Wed Jan 17 17:39:49 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.inl:

          Fixed the mcast test failure on windows. The receiver should
          call join() to the mcast group instead of just open with the
          mcast socket with the mcast group address.

Tue Jan 16 20:54:22 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/common.cpp:

          Fixed a mcast test problem that should not create a SimpleUdp
          transport after created the SimpleMcast transport. However, this
          is not the problem that mcast does not work on windows build.

Fri Jan 12 18:59:44 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        Re-worked the servant_to_reference function template in two ways:
        A. Simplified template parameters so that they can always be deduced
        from the argument passed in (pointer-to-servant).
        B. Used explicit activation on the POA instead of implicit activation
        this makes the DDS implementation compatible with CORBA/e-compact.
        Please from now on, only use explicit activation of servants.  If you
        are going to activate on the root POA of DDS's ORB (the normal case),
        then just call TAO::DCPS::servant_to_reference() -- it will return the
        typed _ptr.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DomainParticipantFactoryImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        Updated uses of the old TAO::DCPS::servant_to_reference() (explicitly
        listing three template parameters) to the new way (which deduces all
        parameters automatically).  Also, changed cases where
        poa->servant_to_reference() was used directly to instead use the new
        TAO::DCPS::servant_to_reference().

Fri Jan 12 20:41:16 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        This fixed the problem describered in RT9711.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Added the logging of the address provided to the peer in
          SimpleTcpTransport::connection_info_i().

        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:

          Applied the same mechanism as in SimpleTcp to discover the unique
          port to use as the default SimpleUdp local_address configuration.
          This is a kludge to fix the default SimpleUdp transport configuration
          problem. Use DISCOVER_UNIQUE_PORT_KLUDGE macro to guard the kludge
          related code in case we find a better way to discover a unique port.

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Added default SimpleTcp and SimpleUdp transport id test cases.

        * bin/dcps_tests.lst:

          Added DevGuideExamples/DDS/Messenger tests.

Fri Jan 12 16:20:48 UTC 2007  Ciju John  <johcn@ociweb.com>

        * dds/DCPS/WriteDataContainer.cpp:
          In situations of repeated connection restablishment
          from the subscriber, we seem to get some orphan messages
          left behind in the system. When the system shuts down
          due to the cleanup mechanism now in place we enter a
          for-ever loop.
          The problem is most probably due to missing error handling
          somewhere in the element delivery path and fixing that is the
          real solution as otherwise over time the internal buffers will
          just fill up (currently only observed upon connection disruption).
          For now I am putting this code which will trap and cleanup these
          orphan messages at shutdown time.

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
          More granular locking to prevent deadlocks. Add locks to protect
          the sub/pub maps.

        * dds/DCPS/transport/framework/EntryExit.h:
          Modify to print out the class ID (this).

        * dds/DCPS/transport/framework/TransportDebug.h:
          Simplify the top-level macro usage.

        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
          If no more subscribers registered for a sub_id, remove the
          ReceiveListeners.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Cosmetic changes/Add debug messages.

        * dds/DCPS/transport/framework/TransportInterface.inl:
          If unable to remove an element count it as a failure (return
          -1).

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
          Modify API to make relinking an optional behaviour in trying to
          send elements. In some circumstances (such as sending graceful
          disconnect messages), we really don't care about relinking.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
          Use the modified API to turn off relinking in certain
          circumstances.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Hard-code the 'RW' wait strategy directive. Deadlocks have been
          observed to occur otherwise under stress conditions.

Thu Jan 11 16:13:22 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/transport/mcast_simple_n:
        * tests/transport/mcast_simple_n/DDS_transport_mcast_simple_n.mpc:
        * tests/transport/mcast_simple_n/PubDriver.h:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/README:
        * tests/transport/mcast_simple_n/SimpleDataReader.h:
        * tests/transport/mcast_simple_n/SimpleDataReader.cpp:
        * tests/transport/mcast_simple_n/SimpleDataWriter.h:
        * tests/transport/mcast_simple_n/SimpleDataWriter.cpp:
        * tests/transport/mcast_simple_n/SimplePublisher.h:
        * tests/transport/mcast_simple_n/SimplePublisher.cpp:
        * tests/transport/mcast_simple_n/SimpleSubscriber.h:
        * tests/transport/mcast_simple_n/SimpleSubscriber.cpp:
        * tests/transport/mcast_simple_n/SubDriver.h:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/mcast_simple_n/TestException.h:
        * tests/transport/mcast_simple_n/mcast.conf:
        * tests/transport/mcast_simple_n/pub_main.cpp:
        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/transport/mcast_simple_n/sub_main.cpp:

          Added mcast_simple_n test.

Thu Jan 11 15:50:48 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/transport/mcast_simple:
        * tests/transport/mcast_simple/DDS_transport_mcast_simple.mpc:
        * tests/transport/mcast_simple/PubDriver.h:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/README:
        * tests/transport/mcast_simple/SimpleDataReader.h:
        * tests/transport/mcast_simple/SimpleDataReader.cpp:
        * tests/transport/mcast_simple/SimpleDataWriter.h:
        * tests/transport/mcast_simple/SimpleDataWriter.cpp:
        * tests/transport/mcast_simple/SimplePublisher.h:
        * tests/transport/mcast_simple/SimplePublisher.cpp:
        * tests/transport/mcast_simple/SimpleSubscriber.h:
        * tests/transport/mcast_simple/SimpleSubscriber.cpp:
        * tests/transport/mcast_simple/SubDriver.h:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple/TestException.h:
        * tests/transport/mcast_simple/mcast.conf:
        * tests/transport/mcast_simple/pub_main.cpp:
        * tests/transport/mcast_simple/run_test.pl:
        * tests/transport/mcast_simple/sub_main.cpp:

          Added the mcast_simple test.

Thu Jan 11 15:07:21 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * bin/dcps_tests.lst:

          Added NOMCAST flag.

Thu Jan 11 14:57:42 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * tests/DCPS/FooTest5/run_test.pl:

          Corrected use_mcast=1 to be 0 by default.

Wed Jan 10 21:00:07 UTC 2007  Jonathan Pollack  <pollack_j@ociweb.com>

        * MPC/config/dcpsexe_with_mcast.mpb:
        * bin/dcps_tests.lst:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/simpleMCAST:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast.mpc:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastConfiguration_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastDataLink_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastFactory.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastGenerator.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastLoader.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSendStrategy.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastSocket_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.inl:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleMCAST/SimpleMcastTransport_rch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_export.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.h:
        * dds/DCPS/transport/simpleMCAST/SimpleMcast_pch.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/FooTest5/common.h:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/mcast.conf:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:

          Added a multicast transport to DDS.  This is an unreliable
          transport and has 3 configuration parameters of interest,
          local_address_, multicast_group_address_, and receiver_.

          See the FooTest5 changes for information about how to configure
          publishers and subscribers to use multicast.

Tue Jan  9 21:45:48 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:

          Removed file based sychnorization code and fixed indentation.

Tue Jan  9 20:40:59 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Fixed a problem that the *TypeSupportImpl::get_type_name ()
          always returns the default type name (interface repository id).
          It should returns the name actually registered either from
          the user (via register_type) or the default type name
          (interface repository id).

Tue Jan  9 15:29:59 UTC 2007  Ciju John  <johnc@ociweb.com>

        * PROBLEM-REPORT-FORM:
          Adding a DDS specific PROBLEM-REPORT-FORM.

Mon Jan  8 21:09:41 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Fixed the recursively acquiring non-recursive lock problem
          in remove_all_control_msgs (). To fix it, move the lock
          from remove_sample_i() to the caller functions.

Mon Jan  8 18:37:48 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made the terminate_send() called before send graceful
          disconnect message in
          SimpleTcpDataLink::send_graceful_disconnect_message() and
          made TransportSendStrategy::suspend_send() not reset the
          suspend state when it's already in terminate state. This
          should fix some race condition when terminate_send() is
          called before sending disconnect message.

Mon Jan  8 17:46:53 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added most changes made after 0.9 to release notes.

Fri Jan  5 22:06:24 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        This fixed the problem that default transport id does not work.
        [See RT8497].

        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Added default transport id (TransportIdType) parameter to
          register_generator() so the transport configuation with
          the default transport ID (DEFAULT_SIMPLE_TCP_ID or
          DEFAULT_SIMPLE_UDP_ID) will be registered.

        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Added default transport id test. The "run_test.pl default"
          tests this bug fix.

Thu Jan  4 18:54:17 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/BasicQueueLinkAllocator_T.h:

          Added missing header to fix the compilation errors on DOC
          latest BETA build.

Wed Jan  3 17:20:08 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Fixed the iterator redefinition compilation error on vc6 build.

Tue Jan  2 22:55:40 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Excluded builtin topic tests from nightly builds since they
          are not well implemented.

Tue Jan  2 22:43:33 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest4_0/main.cpp:

          Removed the reference of the reader_transport_impl and
          writer_transport_impl before shutdown the transport.
          This would fix access violation on windows.

Wed Dec 20 16:29:36 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest4_0/main.cpp:
          Fixed gcc warnings. Uninitialized variables.

Wed Dec 20 16:16:03 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Serializer/SerializerTest.cpp:
          Extra set of paranthesis needed to remove gcc warning.

Tue Dec 19 22:09:09 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportQueueElement.inl:

          Fixed compilation errors that return a value to a void return
          function.

Tue Dec 19 17:59:01 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:

          Fixed an include file dependency problem on vc71 DOC build.

Tue Dec 19 16:53:06 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Reconnect/subscriber.cpp:

          Made subscriber wait for 5 seconds (>passive_reconnect_duration)
          to give transport time to detect the connection lost due to
          backpressure timeout before shutdown the datareader. This should fix
          the bp_timeout test failure on not receiving the subscription lost
          callback.

Tue Dec 19 15:58:47 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DdsDcpsInfrastructure.idl:
          Include a TAO IDL to bypass a vc71/vc8/intel c++ issue with base
          template export.

Mon Dec 18 18:10:11 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest5_0/main.cpp:
          Add missing header file.

Fri Dec 15 22:24:07 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Made the topic object reference removed from map after deactivated
          from poa.  This would fix access violation in FooTest5 (during
          DomainParticipantImpl::delete_contained_entities()).

Fri Dec 15 18:11:14 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * dds/DCPS/Service_Participant.cpp:

          Replaced localhost with ACE_LOCALHOST to support platforms that do
          not support name resolutions.

Tue Dec 12 16:55:39 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * MPC/config/dcps_ts_defaults.mpb:
        * MPC/config/dcps.mpb:
        * MPC/config/dcpsexe.mpb:
        * MPC/config/dcpsexe_with_udp.mpb:

          Moved these file from the top-level DDS directory,
          into the new path, to make them consistent with
          the location of similar files in TAO and CIAO.

Mon Dec 11 23:18:37 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
          The TransportControlElement is now responsible for its own life
          cycle management. TransportQueueElements cleanup needs to be
          thread-aware.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Was missing one of the variable length parameters.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/PublisherImpl.cpp:
          cosmetic changes

Fri Dec  8 23:21:17 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DDS_TAO.mwc:

          New file, which will pull in all ACE+TAO dependencies
          needed to build the TAO_DDS middleware and put them
          in a single build.

Fri Dec  8 22:31:28 UTC 2006  Ciju John  <johnc@ociweb.com>

        The DataWriter & DataReader Listener now have an additional
          callback API 'on_connection_deleted'. This gets invoked when the
          assiciated connection gets closed. This patch was contributed by
          Yan Dai.

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:
          Add new Listner callback 'on_connection_deleted'.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
          The concrete Listeners needs to implement the new
          'on_connection_deleted' method. The reconnect test 'restart_pub'
          tests the the new connection closure callback.


        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Cleaning up debugging messages.

Fri Dec  8 19:38:39 UTC 2006  Ciju John  <johnc@ociweb.com>

          Rework thread-per-connection (TPC) to be able to remove
          transitions elements in the tpc queue. This was contributed by
          Yan Dai (dai_y@ociweb.com) to fix potential memory leaks in TPC
          logic.

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.h:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.inl:
        * dds/DCPS/transport/framework/ThreadPerConRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DdsDcps.mpc:
          TPC rework changes.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Timeout logic was misbehaving in a multi-pub environment. Fixed.

        * dds/DCPS/RcObject_T.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
          cosmetic changes.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
          Fixed memory leak. Acknowledged RepoIdSet weren't being cleaned
          up correctly.

Thu Dec  7 15:18:32 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
          New API release_resources (called by concrete transport
          object upon DataLink disconnection). This just forwards the
          message to the TransportImpl object.

        * dds/DCPS/transport/framework/DataLinkCleanupTask.h:
        * dds/DCPS/transport/framework/DataLinkCleanupTask.cpp:
          A dedicated task belonging to the TransportImpl object. The
          TransportImpl adds safe (ref counted) DataLinks to the task. The
          task then cleans up any resources associated with the
          DataLink. This mechanism (top level dedicated thread) was
          preffered as we were able to reuse most of the
          remove_association logic even though the triger is comming up
          from the transport-specific ReConnection logic.

        * dds/DCPS/transport/framework/TransportControlElement.cpp:
          Initialize the TransportControlElement with loan count of 1
          (instead of 0 as before). This is because the Control Element is
          to be sent to only one DataLink.

        * dds/DCPS/transport/framework/TransportDebug.h:
          Change Default debug level to 1.

        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
          Change find_publication/find_subscription API to optionally
          return a safe copy (ref incremented) of the target
          DataWriter/DataReader. This prevents the DataWriter getting
          wipped out during a send.
          New API release_link_resources (called by shutdown
          DataLink). This bumps up the DataLink ref count and adds it to
          the DataLinkCleanup task (which in turn cleans up DataLink
          resources).

        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
          Change variable names to better reflect usage. Also take out the
          loan count assert in production code.

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Fix race condition in 'send_delayed_notifications'. The delayed
          notification count was being read outside the guard. This could
          change before guard acquisition. Now the read is done after
          guard acquisition.
          Change clear API to accept an optional next SendMode. The
          default is still MODE_DIRECT.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
          New configuration option 'passive_connect_duration' to set
          timeout on initial passive connection establishment. Setting
          this prevents deadlock when the InfoRepo directs us to connect
          with a bogus/dead publisher.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
          The reconnect task gets cleaned up in the Connection object
          destructor, no need for shutdown() to cleanup. The shutdown
          cleanup was a temporary fix (for cleaning threads) to deal with
          subscriber crashes. Now we have a dedicated top-level thread to
          cleanup any associated DataLink resources upon subscriber
          crash. This will cleanup the Connection object as well as the
          associated Reconnect task.
          Added new API (called by the reconnect task) to inform the
          DataLink regards loss of its connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
          Fix race-condition in sending graceful disconnect message. If
          mode is 'queue', the heap element will get queued and a race
          begins as to which thread (worker thread/ORB thread) will delete
          the element. Now DataLink gets terminated right after sending
          the graceful disconnect message. Once the DataLink is
          terminated the worker thread bows out of the race and the
          element can be safely deleted by the original creator (ORB
          thread).

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
          Add entry-exit debug macro

        * dds/DCPS/RcObject_T.h:
          Comment out a debugging accessor function.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
          cosmetic changes

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
          Add passive connection timeout logic

        * dds/DdsDcps.mpc:
          Add DataLinkCleanupTask.* files.

Wed Nov 29 17:09:30 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
          Changed header file case. Fixed case-insensitive builds.

Fri Nov 17 18:04:25 UTC 2006  Ciju John  <johnc@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub_udp.ini:
        * DevGuideExamples/DDS/Messenger/sub_udp.ini:
          Add udp specific pub/sub configuration files.

        * DevGuideExamples/DDS/Messenger/run_test.pl:
          Modifications to pass transport specific options to pub/sub.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
          Add transport selection option.

        * DevGuideExamples/DDS/Messenger/sub.ini:
        * DevGuideExamples/DDS/Messenger/pub.ini:
          Remove dangling spaces.

Thu Nov 16 15:36:47 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:

          Switched from using std::string to const char*.  A simple const
          char* was all that was needed for the ACE_ERROR_RETURN message.

Wed Nov 15 14:07:44 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:

          Added missing includes to fix compilation errors on windows.

Wed Nov 15 15:47:31 GMT 2006  Rich Seibel<seibel_r@ociweb.com>

        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
          Changed the reinterpret cast required by
          Green Hills compiler to C-style, since the
          Visual Studio compiler didn't like it.

Tue Nov 14 15:36:59 GMT 2006  Rich Seibel<seibel_r@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
          Rearranged includes to correct a dependency which tripped
          up the Green Hills compiler.

        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
          Added a cast of thr_self to CORBA::Long to satisfy
          Green Hills compiler.

Mon Nov 13 16:55:56 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
          Add new log messages.

        * dds/DCPS/transport/framework/EntryExit.h:
        * dds/DCPS/transport/framework/TransportDebug.h:
          Modifications to set all old-style debug statements to low
          priority.

        * dds/DCPS/transport/framework/TransportInterface.inl:
          Changed log level.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
          Decoment behavior.

        * dds/DCPS/transport/framework/TransportSendStrategy.h:
          The allocators were of the wrong types. Fixed them.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Fixed an array initialization problem for non-GNU compilers.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
          If ReConnect task fails to reconnect, it needed to inform the
          Connection object.

        * dds/InfoRepo/DCPSInfoRepo.cpp:
          Fixed build problems from missing header files.

Mon Nov 13 12:32:18 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          An array can not be allocated with a non-static constant (except
          with gcc).  We use a vector instead of an array.

Fri Nov 10 18:59:48 UTC 2006  Ciju John  <johnc@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
          Fixed missing system header includes.

Tue Nov  7 22:08:50 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/transport/framework/BuildChainVisitor.inl:
        * dds/DCPS/transport/framework/BuildChainVisitor.cpp:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
          cosmetic fixes (spaces / new lines)

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
          Added code comments.

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
          Add locks to protect shared data.
          Better usage of locks and reference counting, rather than hold
          locks for extended invocations.
          In TransportSendStrategy set DELAY_NOTIFICATION to be default
          for direct_send(). This could delay things a bit in the normal
          case but doing an immediate notification has been observed to
          deadlock in the DCPS layer in stress conditions. This occurs
          when the data_deliverd () call winds its way from the transport
          to DCPS layer while another thread is winding its way up.

        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
          Renamed lock_ to map_lock_ to make it self-documenting.

        * dds/DCPS/transport/framework/EntryExit.h:
          The EntryExit class does a run-time check before initializing
          any data members.
          Use a set size array, rather than ACE_CString data members.
          Defined a set of macros for logging levels. This allows logs
          above a sepecified level to be compiled out. This coupled with
          the run-time check should speed up things. The new design tries
          to minimize the performnace hit of logging.

        * dds/DCPS/transport/framework/TransportDebug.h:
          Defined a set of macros for logging levels. This allows logs
          above a sepecified level to be compiled out.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/NetworkAddress.inl:
        * dds/DCPS/transport/framework/NullSynch.inl:
        * dds/DCPS/transport/framework/NullSynch.cpp:
        * dds/DCPS/transport/framework/NullSynchStrategy.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynch.inl:
        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.inl:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.cpp:
        * dds/DCPS/transport/framework/PoolSynch.inl:
        * dds/DCPS/transport/framework/PoolSynch.cpp:
        * dds/DCPS/transport/framework/PoolSynchStrategy.inl:
        * dds/DCPS/transport/framework/PoolSynchStrategy.cpp:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.inl:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSet.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ReceivedDataSample.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynchResource.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.cpp:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.inl:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.cpp:
        * dds/DCPS/transport/framework/ThreadSynchWorker.inl:
        * dds/DCPS/transport/framework/ThreadSynchWorker.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportHeader.inl:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImplFactory.inl:
        * dds/DCPS/transport/framework/TransportImplFactory.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.cpp:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * dds/DCPS/transport/framework/TransportReceiveListener.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
          Logging macro usage modified.

        * dds/DdsDcpsDomain.idl:
          cosmetic fixes

Tue Nov  7 16:35:53 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/sub_init_loop:
        * tests/DCPS/sub_init_loop/Messenger.idl:
        * tests/DCPS/sub_init_loop/README:
        * tests/DCPS/sub_init_loop/Writer.h:
        * tests/DCPS/sub_init_loop/Writer.cpp:
        * tests/DCPS/sub_init_loop/domain_ids:
        * tests/DCPS/sub_init_loop/pub.ini:
        * tests/DCPS/sub_init_loop/publisher.cpp:
        * tests/DCPS/sub_init_loop/repo.conf:
        * tests/DCPS/sub_init_loop/run_test.pl:
        * tests/DCPS/sub_init_loop/sub.ini:
        * tests/DCPS/sub_init_loop/sub_init_loop.mpc:
        * tests/DCPS/sub_init_loop/subscriber.cpp:
          New stress test. This test iterates repeatedly in the subscriber
          initialization loop. This is a stress test that emerged in
          scenarios seen in rt 9123.

        * bin/dcps_tests.lst:
          Add new test to nightly tests list.

Fri Oct  6 22:25:25 UTC 2006  Ciju John  <johnc@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
          The Reconnection Task belongs to the Connection object and hence
          should be cleaned up by it before exiting. This fixes a race
          condition which was causing application cores (rt 9123).

        * tests/DCPS/Reconnect/run_test.pl:
          Further fixes to the regression test added in:
          Thu Oct  5 19:55:42 UTC 2006  Ciju John  <johnc@ociweb.com>

Fri Oct  6 14:58:05 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:
          Additional fixes to the regression test added in:
          Thu Oct  5 19:55:42 UTC 2006  Ciju John  <johnc@ociweb.com>

Thu Oct  5 22:33:44 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Reconnect/run_test.pl:
          Restored earlier(correct) test wait time.

        * tests/DCPS/Reconnect/subscriber.cpp:
          Minor fix to display correct option character.

Thu Oct  5 19:55:42 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/DCPS/Reconnect/README:
          Create a README for this test.

        * tests/DCPS/Reconnect/run_test.pl:
        * bin/dcps_tests.lst:
          Adding a new regression test to capture a failing scenario. The
          Subscriber is killed (simulating a crash) after
          initialization. The Publisher then crashes during its
          initialization.

Mon Sep 11 07:13:48 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      * dds/DCPS/transport/framework/DataLink.cpp:

        Fixed a problem that send or send_stop could happen after the datalink
        call send strategy to clear samples when keep_link=1.

      * dds/DCPS/transport/framework/TransportInterface.cpp:

        Fixed a problem that the send_start could send on a nil datalink.
        The problem is the send() could find the local_id with an empty
        datalink set because a datalink insertion to local_map_ was completed
        by two calls in add_associations().
            this->local_map_.find_or_create_set()
            local_set->insert_link()
        To fix this problem, the two calls above was replaced by a single
        call this->local_map_.insert_link().

      * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
      * dds/DCPS/transport/framework/TransportSendStrategy.inl:
      * dds/DCPS/transport/framework/TransportSendStrategy.h:

        Added new methods to handle the send() calls after clear()
        is called when keep_link=1.

Thu Sep  8 06:19:22 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      * dds/DCPS/transport/framework/DataLink.h:
      * dds/DCPS/transport/framework/DataLink.cpp:
      * dds/DCPS/transport/framework/DataLink.inl:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:

        Made remove_sample() and remove_all_control_msgs() not handled by
        the thread per connection task. This would avoid the access violation
        when the data_delivered is called after sample is moved to release_data
        list and before send strategy remove_sample() is called.

      * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

        Made data_delievered/data_dropped call delayed in a few places to handle
        the writer lock and send strategy lock acquired in reverse order when
        thread_per_connection is enabled.
        Fixed a bug in send_stop() that cause crash when the header_.length > 0
        but elems_ is empty.
        Fixed a bug in remove_sample() that should return when the sample is removed
        from queue.

Thu Sep  7 15:26:52 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      * dds/DCPS/DomainParticipantImpl.cpp:
      * dds/DCPS/transport/framework/DataLink.inl:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:

        Fixed some compilation errors( due to <: and reinterpret_cast int to void*)
        on gcc compiler.

Wed Sep  7 06:59:35 UTC 2006  Yan Dai  <dai_y@ociweb.com>

      The main changes are: (See RT8999)
        - Made the DCPS entity servants deleted upon delete_*()
          call instead of upon orb shutdown. This would make the create/delete
          DCPS entity multiple times in a single process without shutdown
          Service Participant.
        - Added keep_link configuration to indicate whether a datalink should
          be maintained when all associations are removed. This would allow
          the datareader/datawriter reconnect repeatedly using the same
          connection.

      * dds/DCPS/WriteDataContainer.cpp:
      * dds/DCPS/transport/framework/DataLinkSet.cpp:

        Added logging for cached allocator information.

      * dds/DCPS/DomainParticipantFactoryImpl.cpp:
      * dds/DCPS/transport/framework/TransportImpl.cpp:

        Added guard to protect unregistration of subscription.

      * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

        Made send_graceful_disconnect_message() call notify the
        send strategy terminate send except the graceful disconnect
        message.

      * dds/DCPS/transport/framework/DataLink.h:
      * dds/DCPS/transport/framework/DataLink.cpp:
      * dds/DCPS/transport/framework/DataLink.inl:

        Made the release_reservations() not release datalink when
        all associations are removed if keep_link is configured to be on.
        Made the remove_sample() and remove_all_control_msgs_i() handled
        by ThreadPerConnectionSendTask when thread_per_connection is
        enabled. This makes the send() and remove_sample() be handled
        sequentially.

      * dds/DCPS/transport/framework/TransportConfiguration.h:
      * dds/DCPS/transport/framework/TransportConfiguration.cpp:
      * dds/DCPS/transport/framework/TransportConfiguration.inl:

        Added a new configuration - "keep_link", which indicates if the
        data link should be maintained when all associations are removed.
        The default value (0) means the link will be released as the
        last association is removed from the link.

      * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

        Added delayed_notification_mode_ status so the delayed notification
        will know if it's a data_delievered or data_dropped.
        Added clear() function to clean up the elements referenced by this
        datalink. This would let the datalink be reused when keep_link is
        on.

      * dds/DCPS/transport/framework/QueueTaskBase_T.h:

        Commented error log when the dequeue_head failed.
        I'm not sure why this thread got more signals than actual signals
        when using thread_per_connection and the user application thread
        send requests without interval.

      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:
      * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:

        Made this task handle the REMOVE_SAMPLE and REMOVE_ALL_CONTROL_SAMPLES
        requests.

      * dds/DCPS/transport/framework/TransportSendStrategy.h:
      * dds/DCPS/Cached_Allocator_With_Overflow_T.h:

        Corrected a logging message.

      * dds/DCPS/Service_Participant.h:

        Added deactivate_object template function so the delete_* can
        call it to deactivate the object from poa and cause the deletion
        of the servant.

      * dds/DCPS/PublisherImpl.cpp:
      * dds/DCPS/SubscriberImpl.cpp:
      * dds/DCPS/DomainParticipantImpl.cpp:

        Added deactivate_object() call in delete_*() functions.

      * DevGuideExamples/DDS/Messenger/pub.ini:

        Added keep_link configuration.

      * DevGuideExamples/DDS/Messenger/subscriber.cpp:
      * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

        Removed the get_matched_publications() call since datareader
        servant is destroyed when delete_datareader() is called.

Thu Aug 24 18:12:24 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Corrected number of chunks for message block allocator in a
          logging message.

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Corrected the DataReaderImpl/DataWriterImpl reference hold
          by TransportImpl. This fixed the memory leak of datawriter.

Sun Aug 13 19:17:53 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          These changes supported the default transport id.
          The range 0xFFFFFF00 to 0xFFFFFFFF is reserved for
          DEFAULT_<transport>_CONFIG values. Each specific transport
          has its default id in that range. The default transports can not
          be configured by the users. [See RT 8497]

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added definition for DEFAULT_SIMPLE_TCP_ID and
          DEFAULT_SIMPLE_UDP_ID.

        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:

          Increased the size of the section array in load() so it has
          enough space for a big transport id.

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Made the load_transport_configuration() check configuration load
          return value.

Fri Aug 11 18:13:54 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Transient_Kludge.h:
        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TheTransportFactory.h:
        * dds/DCPS/Service_Participant.h:

                Worked around with the compilation problems on DDS gcc 4.x build with
                DOC version TAO. The problem is the ACE_EXPORT_SINGLETON_DECLARE
                new definition was added to config-g++-common.h in DOC version
                which causes the template instantiation inside namespace errors.
                To work around this problem the TAO_DDSDCPS_SINGLETON_DECLARE
                is commented for gcc 4.x builds.

Wed Jul 26 23:50:35 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * AUTHORS:
        * NEWS:
        * configure.ac:

          Added files that are needed to generate automake makefiles. The following
          command must be used to generate them from MPC:

            $MPC_ROOT/mwc.pl -include $ACE_ROOT/bin/MakeProjectCreator/config
             -type automake DDS.mwc

          You must not run mwc.pl from $ACE_ROOT/bin to do this.
          The ACE_ROOT, TAO_ROOT and DDS_ROOT environment variables must be set.
          Additionally, ACE_BUILDDIR should be set to $ACE_ROOT and TAO_BUILDDIR
          should be set to $TAO_ROOT.

          Please note that this is experimental and has not been fully tested.

Mon Jul 17 20:24:01 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          DDS 0.9 released.

        * VERSION:

          Updated for 0.9 release.

        * DDS_release_notes.txt:

          Added release notes for main changes since 0.8.

Mon Jul 17 20:03:32 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:

          Made demarshal not return error if the repo id is already in the
          map since the subscriber could send the ack for the same repo id
          multiple times.

Mon Jul 17 05:52:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Fixed a bug that the length of data message block is not
          written to the sample header. This would cause the publisher
          side not deliver the graceful disconnect messages even though
          it received the message from subscriber.

        * tests/transport/simple_bp/PubDriver.cpp:

          Removed a logging message.

Mon Jul 17 04:34:47 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub.ini:

          Updated comments for thread_per_connection.

        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:

          Added sleep after simulated publisher is initialized so it can wait
          for fully association establishment and then start sending samples.

Fri Jul 14 20:04:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Removed the SimpleTcpConnection.h include to fix the circular dependency
          problem on gcc 3.3.3 builds.

Fri Jul 14 12:43:04 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpFactory.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Modifications required to build DDS with Visual C++ 6.0.  Most of
          the changes involved adding include files and moving inline
          methods into the .cpp's.  The change to the perl module is to
          accommodate vc6's inability to handle calling a base class method
          with an explicit class name.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Removed these files.  Their contents was moved into the
          corresponding .cpp files.

Wed Jul 12 17:34:59 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Fixed a circular include dependency problem. This problem shown on
          vc71 builds.

Tue Jul 12 05:28:56 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Fixed a circular include dependency problem. This problem shown on
          gcc3.3.3 builds.

Mon Jul  3 09:23:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/QueueTaskBase_T.h:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:

          Fixed build errors and warning on Linux.

Sun Jul  3 8:42:38 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        These changes support thread-per-connection send feature. The
        new configuration "thread_per_connection" is added to determine if
        the transport needs create a new thread for a datalink/connection
        to send samples under normal traffic (no backpressure). If
        thread_per_connection is 1, the publisher always creates a seperate
        send thread for each datalink/connection to do the send instead of
        sending to each remote one by one by the same thread.

        * dds/DdsDcps.mpc:

          Added new classes to support thread-per-connection send feature.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:

          Added the new task - ThreadPerConnectionSendTask object to handle
          sending in a seperate thread.

        * dds/DCPS/transport/framework/QueueTaskBase_T.h:

          A simple template ACE task that manages a request queue. The subclass
          provides the function to handle the queued requests.

        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.cpp:
        * dds/DCPS/transport/framework/ThreadPerConnectionSendTask.h:

          New class to support the thread-per-connection send.

        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:

          Added thread_per_connection configuration.

        * dds/DCPS/transport/framework/TransportImpl.h:

          Added DataLink as friend of TransportImpl so DataLink can
          access the private data member configuration object of
          TransportImpl.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Updated to use the new interfaces of the SimpleReconnectTask
          and made the reconnect_task_ allocated on stack instead of
          on heap.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnectionReplaceTask.h:

          The new class added to do the connection replacement when
          a new connection is accepted by the passive side.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Updated to call base class pre_stop_i () first.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Updated to use QueueTaskBase.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask_rch.h:

          Removed file not needed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Updated to use the SimpleTcpConnectionReplaceTask instead
          of SimpleTcpReconnectTask.

        * DevGuideExamples/DDS/Messenger/pub.ini:

          Added thread_per_connection configuration.

Mon Jun 26 2:25:26 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixed the test using simpleUDP. The commit
        "Thu Jun 22 16:06:21 UTC 2006  Yan Dai  <dai_y@ociweb.com>" appears
        broke the UDP tests during the full association period.

        * TAO/DDS/dds/DCPS/transport/framework/TransportImpl.cpp:
        * TAO/DDS/dds/DCPS/transport/framework/TransportImpl.h:
        * TAO/DDS/dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:
        * TAO/DDS/dds/DCPS/transport/simpleUDP/SimpleUdpTransport.inl:

          Added new virtual function acked() to check if the acks for
          pending associations are received so the simpleUDP can simply
          always return acked.

        * TAO/DDS/DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Added more sleep period before releasing transport factory. This
          would avoid the error on publisher during shutdown.

Thu Jun 23 6:45:12 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Fixed the transport deadlock upon fully association on Linux. The problem
          is the lock in TransportImpl is recursively aquired.

Thu Jun 22 00:03:16 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h
        * dds/DCPS/transport/framework/DataLinkSetMap.h
        * dds/DCPS/transport/framework/TransportFactory.h
        * dds/DCPS/transport/framework/TransportImpl.h
        * dds/DCPS/transport/framework/TransportImplFactory.h
        * dds/DCPS/transport/framework/SimpleTcpConnection.h
        * dds/DCPS/transport/framework/SimpleUdpTransport.h

          Temporary commented the fix for BCB6 build at
          "Fri Jun  9 07:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>"
          These changes broke the Linux build.

Thu Jun 22 16:06:21 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        These changes mainly fix the problem
         "create_datawriter() does not wait for full association establishment
         so even if there are waiting subscribers,  a write shortly after
         creating the datawriter may be dropped on the publisher side because
         add_associations() has not completed on the publisher side.
         The sample may also be dropped on the subscriber side because the
         connection exists between the publisher and subscriber but the
         associations have not been mapped on the subscriber side."

         The solution is to make the subscriber send a FULLY_ASSOCIATED ack
         when the new association is received from repo and the connection is
         established. On the publisher side, the transport will notify the
         datawriter that the subscriber is fully associated when the ack is
         received. The application can use get_matched_subscriptions() to
         determine when it should start sending samples.
         (See RT8498 for details)

        * dds/DdsDcps.mpc:
        * dds/DCPS/transport/framework/TransportControlElement.cpp:
        * dds/DCPS/transport/framework/TransportControlElement.h:
        * dds/DCPS/transport/framework/TransportGDControlElement.cpp:
        * dds/DCPS/transport/framework/TransportGDControlElement.h:

          Renamed the TransportGDControlElement.* to TransportControlElement.*
          so it can be used for both GRACEFUL_DISCONNECT and FULLY_ASSOCIATED
          messages.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Seperated remote reader handler caching and the listener
          on_publication_matched callback from add_associations(). The new
          method fully_associated() does that part which is called when the
          transport received the FYULLY_ASSOCIATED message from subscriber.

        * dds/DCPS/PublisherImpl.cpp:

          Made the publisher not delete the associations after add_publication()
          is done. The associations will be deleted when transport calls the
          full_associated().

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/RepoIdSet.cpp:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSet.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Provided marshal and demarshal method for the associated RepoIds.

        * dds/DCPS/DataSampleHeader.h:

          Added new message id FULLY_ASSOCIATED.

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added Association_Status definition.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:

          Added local map to cache the pending association ids,pending
          association data and acked associations.

          Notify the datawriter fully association at an approriated time
          which depend on the timing when pending association is added,
          when ack is received and when the datawriter is registered with
          the TransportImpl. At either time, the pending and ack map will
          be checked to see if any assoications related to a pub id is
          fully associated.

        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportInterface.h:

          Made add_associations() call add_pending_associations() at
          very last.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Handled the FULKLY_ASSOCIATED message.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:

          Added method to send the FULKLY_ASSOCIATED messgage.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Added shutdown_ flag to stop the reconnecting during shutdown.
          The shutdown reconnect task call is removed from the connection
          destructor, the shutdown will be called when the connection related
          association is removed or when the transport shutdown. This would
          avoid the destruction order problem of the connection and
          reconnect task objects.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Made the reconnect task not accept new reuqests when it's already
          shutdown.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/Writer.cpp:
        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DDS/Messenger/run_test.pl:

          Changed the using of text file to coordinate between publisher
          and subscriber to use the get_matched_*() function call to determine
          when the publisher can start and finish and when the subscriber
          can finish.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:

          Used the get_matched_*() function call to determine
          when the publisher can start and finish and when the subscriber
          can finish.

        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:

          Made the subscriber sleep for a while before shuttting down the
          transport to avoid the errors due to lost connection during
          shutdown.

Mon Jun 19 18:58:43 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * TAO/DDS/dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * TAO/DDS/dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.h:
        * TAO/DDS/dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:

          Fixed a deadlock situation on linux when the direct_send()
          detects a lost connection and calls the relink(). The problem is the
          direct_send() is called under the lock in send strategy and the
          suspend_send() called by relink() aquires the same lock.
          To fix it, an extra parameter do_suspend is added to relink()
          function to indicate if the relink() needs call suspend_send() on
          send strategy object. If the thread calling relink() already hold
          the lock it will call the operations in suspend_send() before calling
          relink (), otherwise the relink() will call suspend_send().

        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added shutdown () method to SimpleTcpConnection to shutdown the
          reconnect task. This is called during transport pre-shutdown phase
          after the datalink sends graceful disconnect message. This would
          avoid an access violation during transport shutdown.

        * TAO/DDS/dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Made the shutdown () do shutdown work just once if it's called multiple
          times.

        * TAO/DDS/dds/DCPS/DataWriterImpl.cpp:

          Corrected a debug message.

Fri Jun  9 07:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/DCPS/CPPTemplate.pm:
          Made changes to fix compile problems with BCB6

        * dds/DCPS/transport/framework/DataLink.h
        * dds/DCPS/transport/framework/DataLinkSetMap.h
        * dds/DCPS/transport/framework/ReceiveListenerSet_rch.h
        * dds/DCPS/transport/framework/TransportFactory.h
        * dds/DCPS/transport/framework/TransportImpl.h
        * dds/DCPS/transport/framework/TransportImplFactory.h
        * dds/DCPS/transport/framework/TransportSendStrategy_rch.h
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h
          Added needed includes to get things compiling with BCB6

Wed Jun  7 18:30:09 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added a limitation that transport can not receive single packet
          with single control message without data.

Wed Jun  7 09:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * dds/DCPS/Transient_Kludge.h:
          Fixed compile error with Borland

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
          Added missing include of post.h

Thu Jun  1 20:01:23 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.h:
        * tests/DCPS/FooTest4_0/Reader.h:

          Fixed the compilation errors with gcc4.1 due to the
          class scope prefixed to the method declaration.

Fri May 12 00:13:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added VC6 build support and a potential deadlock fix.

Fri May 12 00:00:27 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Renamed the second version of servant_to_reference() to
          servant_to_reference_2 to resolve the compilation errors
          on VC6. The VC6 can not recognize the template function
          with same name but difference template parameters.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Updated to use servant_to_reference_2().

        * tests/DCPS/MultiDPTest/README:

          Made a corresponding readme.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Added the thr_id_ data for checking if the shutdown()
          is called by the thread the task created. The thread
          should not wait for itself. This should fix a potential
          deadlock.

Mon May  8 20:16:50 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          DDS 0.8 released.

        * VERSION:

          Updated timestamp of the 0.8 release.

        * DDS_release_notes.txt:

          Updated one limitation note.

        * TAO_DDS_Configuration_Settings.html:

          Added reconnection configuration values.

Mon May  8 18:46:56 UTC 2006  Scott Harris <harris_s@ociweb.com>


        * DDS_release_notes.txt:
        * TAO_DDS_Configuration_Settings.html:

          Updated the release notes and added the config file html.

Mon May  8 18:36:24 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:
        * VERSION:

          Changes related to the 0.8 release.

Fri May  5 21:33:33 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
        * dds/DCPS/Qos_Helper.inl:

          Moved the qos operator functions from TAO::DCPS namespace to global
          namespace. This would resolve the compilation errors on DDS builds
          against DOC's latest version that the VC71 compiler can not find
          the octet sequence operator==.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:

          Made the qos operator== called implicitly instead of explicitly.
          Calling operator== explicitly was used as a workarround of the
          compilation problem metioned above.

        * tests/DCPS/Reconnect/run_test.pl:

          Added expected lost_subscription_callback=1 to the bp_timeout test.
          This fixed the test failure on windows.

Fri May  5 18:41:51 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple/DDS_transport_simple.mpc:
        * tests/transport/simple_bp/DDS_transport_simple_bp.mpc:
        * tests/transport/simple_bp_rm/DDS_transport_simple_bp_rm.mpc:
        * tests/transport/simple_n/DDS_transport_simple_n.mpc:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Added inheritance from portableserver base project.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Fri May  5 17:48:53 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/repo.conf:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Made the repo use the repo.conf to avoid multiple requests
          handled by single orb thread at the same time. This would
          fix the problem on sunos59 gcc3.3.2 builds that the DCPSInfo
          could not be terminated. It seems without using the service
          config file, the DCPSInfo deadlocked and the TerminateWaitKill()
          in perl script will return non-zero which causes the test failure.

Fri May  5 14:44:39 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Updated notes for re-establishment of lost connection.

Thu May  4 20:06:22 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h

          Reversed the changes Scott made on
          "Thu Dec 15  8:35:17 USMST 2005 2005  Scott Harris  <harris_s@ociweb.com>"
          since the TAO1.4a latest version works without the change.

Wed May  3 11:30:09 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Changed from char* to const char* to avoid build warnings from
          SunCC.

        * tests/DCPS/MultiDPTest/common.h:

          Removed the trailing comma from an enum to avoid build warnings
          from SunCC.

Tue May  2 16:59:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.inl:

          Changed to call operator==(TAO::unbounded_value_sequence<CORBA::Octet>)
          explicitly. It is ugly but it resolves the compilation error on VC71
          against DOC's latest version. This seems be a compiler problem that
          does not recognize the global operator== when the global operator== is
          defined as inline and it's called by the code inside of a namespace.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/SubscriberImpl.cpp:

          Fix bugs on subscriber that does not increase the sequence length
          before adding new elements to the sequence. This problem was detected
          in FooTest4_0 with the DOC's latest version which has the new sequence
          implementation.

Tue May  2 13:38:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_2/FooTest3_2.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1NoKey.mpc:
        * tests/DCPS/FooTest3_1/FooTest3_1.mpc:
        * tests/transport/dds_comparative/dds_transport_comparative.mpc:

          Added inheritance from portableserver base project for subscriber.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Mon May  1 13:16:56 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Replaced the close() in SimpleTcpReconnectTask with shutdown ()
          method. The difference is the shutdown() will wait for thread
          exit. This would resolve an access violation due to the race
          condition in the SimpleTcpReconnectTask object
          Some un-necessary variables num_threads_ and active_workers_
          are also removed.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Made the Datalink not send the GRACEFUL_DISCONNECT message if
          it already received the GRACEFUL_DISCONNECT message from peer.
          This would fix the error
          "SimpleTcpSendStrategy::send_bytes: ERROR: sendv: Bad file
           descriptor iovec count: 3" upon shutdown.

        * dds/DCPS/DataWriterImpl.cpp:

          Fixed a warning with unused variable.

Fri Apr 28 12:59:58 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixes a problem on linux that transport does not
        identify peer disconnecting due to crash. This should fix
        the "run_test.pl restart_pub" test on linux.

        * dds/DdsDcps.mpc:

          Added TransportGDControlElement.cpp.

        * dds/DCPS/DataSampleHeader.h:

          Added GRACEFUL_DISCONNECT message id.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:

          Added new hooks so the concrete datalink can send graceful
          disconnect message before transport shutdown or releasing
          datalink.

        * dds/DCPS/transport/framework/TransportGDControlElement.cpp:
        * dds/DCPS/transport/framework/TransportGDControlElement.h:

          New type control message that does not need data_delivered
          callback.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Made the transport also try to reconnect if it did not receive
          the graceful disconnect message when receive_bytes() returns 0.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          This is the correct version that Scott committed for fixing
          rae\rt8448\test failure.
          "Tue Apr 25 09:48:23 USMST 2006  Scott Harris <harris_s@ociweb.com>"

Tue Apr 25 09:48:23 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Fix a problem were a second disconnect and reconenct did
          not call on_*_disconnected() or on_*_reconnected().
          Yan made the initial fix and I changed it a bit.

        * dds/DCPS/DataWriterImpl.cpp:

          Correct a typo in a log message.

Sun Apr 23 22:50:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to an effort to fix rae\rt8448\test failure.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.inl:

          Fixed memory leaks and added more debugging messages.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Fixed multiple reconnected notification problem. The problem
          is the passive connection side seems not realize the lost
          connection before a new connection is reestablished.
          Changed to use the enum reconnect_state_ instead of a bool
          variable to mark various states during reconnecting and also
          seperate the active_reconnect_on_new_association() from
          active_reconnect_i() to make these function more obvious.

Sat Apr 22 21:54:02 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made the elems_ and queue_ to be allocated on heap. This would help
          resolve a deadlock situation after reconnect fails. The deadlock
          happens when a send thread holds datawriter's lock and try to acquire
          the SendStrategy's lock and the reconnect thread calls terminate_send
          which got the SendStrategy's lock and drop all queued samples and try
          to call data_dropped on DataWriter. The changes makes we can remove
          queued elements outside the SendStrategy's lock.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Changed to create per connection reconnect task to do the reconnecting instead
          of using single thread to do reconnecting for all datalinks in a TransportImpl.
          Hope this fix the rae\rt8448\test failure

Fri Apr 21 11:42:58 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added note for a transport limitation.

Fri Apr 21 10:17:51 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Corrected incorrect parameter order in a logging message.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:

          Added the new on_*_disconnected and on_*_reconnected to the listener
          implementations.

Fri Apr 21 01:09:00 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        The main changes are made to add the on_*_reconnected and on_*_disconnected
        new callbacks for RT8499.

        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Added the on_*_reconnected and on_*_disconnected callbacks
          Updated the *LostStatus to just contain the instance handles
          and typedef'd the *LostStatus as *DisconnectedStatus and
          *ReconnectedStatus.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Made the DataReader/DataWriter not cache the *LostStatus and
          added notify_*_diconnected and notify_*_reconnected to support
          the new callbacks.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:

          Updated the notify() function for DISCONNECTED, RECONNECTED and
          LOST connection notification.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          On active connection side, made the disconnected callback called
          before reconnect, the reconnceted callback called after reconnect
          succeeded and the lost connection callback called after reconnet
          failed.
          On passive connection side, made the disconnected callback called
          before reconnectschedule the timer, the reconnceted callback called
          when new connection is created and the lost connection callback
          called after the passive_reconnect_duration_ period if not reconnected.
          Updated some methods to correct the reconnect logic on the passive side.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Changed to use the "old" connection object to transfer its state to
          the "new" connection object instance of using "new" connection object
          copy state from "old" connection object. This was changed since we
          need synchronize the handle_timeout() and transfer state to "new"
          connection object on the "old" connection object.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:

          Added the new callback implementations.

Fri Apr 21 00:01:11 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:

          Increased amount of time for the DCPSInfoRepo to shutdown.

Thu Apr 20 13:40:46 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Updated the data_dropped() method signature to be same as in the base
          class TransportSendListener. This would fix the errors
          "ERROR: Subclass should override if sending control samples. "
          when the transport drops the control messages due to a lost
          connection.

Wed Apr 19 19:13:01 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added tests/DCPS/Reconnect tests.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/run_test.pl:

          Added more options to publisher and subscriber to help automate the
          reconnect tests. Changed run_test.pl to redirect the output to a log
          file so that errors due to an abnormal shutdown and lost connection
          will not show on scoreboard. The final output "test PASSED" or
          "test FAILED" will show the test result.

Wed Apr 19 13:04:26 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest3_0/FooTest3_0.mpc:

          Added inheritance from portableserver base project for subscriber.
          This would resolve compilation errors shown on static builds on linux
          platforms.

Mon Apr 17 09:45:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added release notes for main changes after 0.7 release.

Sun Apr 16 22:32:55 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.cpp:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h:
        * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp:

          Added the notify_lost bool parameter to the remove_association()
          method which overrides the virtual methods in
          TAO::DCPS::DataReaderImpl/DataWriterImpl. This should fix the
          test failure on remove_association.

Sun Apr 16 21:43:11 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendListener.cpp:

          Fixed a compilation warning due to an unused variable.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:

          Fixed a bug on wait_to_unclog that passes an ACE_Time_Value::zero
          to handle_write_ready instance of 0 as the timeout parameter.
          This would fix the TCPListener performance test.

Sun Apr 16 21:53:02 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Serializer/SerializerTest.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:

          More scoreboard directed cleanup.

        * tests/DCPS/FooTest4/main.cpp:

          This change from std::string to ACE_CString was not dictated by
          the nightly scoreboard, but my local PC failed to compile the
          test as provided with std::string. This is on my home x86-32
          running Linux 2.6.10-1.770_FC2 with gcc version 3.3.3 20040412
          (Red Hat Linux 3.3.3-7). I felt it was not a big deal to add the
          ACE_CString since the test code is already linking in ACE to do
          parameter parsing.

Sun Apr 16 07:30:45 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Removed extraneous comma from enumeration list. I noticed that
          the enumeration also contains "NOTIFY_IMMEADIATELY" which should
          be changed to "NOTIFY_IMMEDIATELY". I'm not going to change that
          because I don't know the implications of such a change.

Sat Apr 15 13:23:09 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are tested on linux and fixed the deadlock situation
        during reconnecting.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Made the send strategy will not wait for the reconnecting finish
          since the thread might hold the lock in DataWriterImpl and the
          reconnect thread might need call data_dropped () on DataWriterImpl
          which will cause datalock.

Sat Apr 15 11:47:43 USMST 2006  Yan Dai  <dai_y@ociweb.com>

          These changes are made to expect to fix a deadlock situation during
          reconencting on linux and they also fixed unregister data sample
          errors during shutdown for RT8499.

        * dds/DCPS/WriteDataContainer.cpp:

          Updated the data_dropped() to do same thing as data delivered
          when the transport initiates the data dropping which happens when
          connection lost and reconnet fails.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Made send strategy queue the connection to reconnect task in relink()
          and wait on a condition variable until the reconnect task completes
          the reconnecting and signal the condition. This would resolve the
          deadlock problem on linux and avoid using a recursive lock in
          TransportSendStrategy as a work around in my last commit.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:

          Made the relink() has no return value.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:

          Added DO_RECONNECT_UPON_SEND case to handle re-establishing
          of a lost connection detected by send strategy.

Thu Apr 13 17:01:08 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Changed to use ACE_Recursive_Thread_Mutex to fix the deadlock
          situation during reconnecting on linux. This is a temporary
          workarround. I need find a better way to fix it.

Thu Apr 13 14:59:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

       * tests/DCPS/Reconnect/repo.conf:

          Added missing file.


Thu Apr 13 13:23:18 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:

          Fixed compilation errors on lunix build.

Thu Apr 13 12:54:39 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These are review fix for RT8499 and the compilation errors due to
        data_dropped () and remove_sample() signature changes are also fixed.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Changed to use while loop instead of for loop for code clarity.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:

          Added checking of the return value from dynamic_cast.

        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Publication.h:

          Added comments for the new parameter notify_lost.

        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple/SimpleDataWriter.h:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.h:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.h:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.h:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.h:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.h:

          Fixed compilation errors due to the data_dropped ()
          and remove_sample() signature changes.

Thu Apr 13 10:30:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changs are made to drop messages after the reconnect
        failed for RT8499.

        * dds/DdsDcps.mpc:

          Added RemoveAllVisitor.cpp.

        * dds/DCPS/transport/framework/RemoveAllVisitor.inl:
        * dds/DCPS/transport/framework/RemoveAllVisitor.h:
        * dds/DCPS/transport/framework/RemoveAllVisitor.cpp:

          New files are added to support the clear all elements in
          a BasicQueue.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.h:

          Added an extra parameter dropped_by_transport bool to the
          data_dropped(), remove_sample() and related methods. The
          dropped_by_transport true indicates the data dropping is initiated
          by transport which occurs when the transport send strategy is in
          a MODE_TERMINATED state. All messages are dropped in that state.
          The dropped_by_transport false which is the case before adding
          this extra parameter. The dropping is a result of remove_sample()
          call which is initiated by datawriter with KEEP_LAST history policy
          when the number of samples exceeds the depth of history queue.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added a few SendMode types(MODE_TERMINATED, MODE_SUSPEND and
          MODE_NOT_SET). These modes are used when reconnecting logic is
          used. When the connection is lost, the mode is set to
          MODE_SUSPEND until reconnect finishes. In the MODE_SUSPEND state,
          all messages are queued. If the reconnect succeeds, the mode is
          back to the state before suspend. If the reconnect fails after
          a "conn_retry_attempts" attempts, then the mode is set to
          MODE_TERMINATED and all messages in the backpressure queue and
          packet queue are removed and the data_dropped () is called for
          every element. During the state of MODE_TERMINATED, any sending
          or queuing are stopped and the messages are dropped.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Added send_strategy_ data member for state change when reconnecting
          happens. The suspend_send is called before reconnecting. The
          resume_send is called when the reconnect succeeds. The terminate_send
          is called after the reconnect fails.

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy_rch.h:

          Removed lost_link() hook. Now we can use the mode in the
          TransportSendStrategy to know the state of the connection.

        * tests/DCPS/Reconnect/run_test.pl:

          Fixed the restart_sub test since now we drop the messages
          after reconnect failed.

        * tests/DCPS/Reconnect/sub.ini:

          Change to default "conn_retry_attempts".

Wed Apr 12 17:19:27 UTC 2006  Trevor Fields  <fields_t@ociweb.com>

        * DDS_release_notes.txt:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:

          Typo fixes from review for RT 8499.

Tue Apr 11 11:44:32 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:

          Fixed a compilation error on linux builds that need ace/Time_Value.h
          include.

Tue Apr 11 10:34:34 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Corrected lost_link() check in send_bytes().

        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:

          Changed the conn_retry_backoff_multiplier_ to be double instead of float
          to avoid warnings.

Tue Apr 11 10:10:41 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made for RT8499 to resolve the problem that publisher
        does not stop sending during reconnecting. There are two parts of the changes
        need be made and note the second part is not done yet.
          1)transport should queue the messages while reconnecting
          2)transport should discard the messages if the reconnect fails.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:

          Made handle_input () return -1 if the receive_bytes() return -1. This would
          close the connection anyway even it will try to reconnect.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.inl:

          Added ready_send() virtual function to check if the connection is connected.
          This will be called whenever this->synch_->work_available is called or before
          sendv. This would stop the writing on a disconnected socket.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:

          Made it has reference to the SimpleTcpTransport object and
          added get_transport_impl() accessor.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:

          Made relink() to queue the connection object to the SimpleTcpReconnectTask
          to do the reconnect since we don't want the reactor thread block on reconnecting
          and not receiving other incoming messages.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          Made this task handle both reconnecting and new connection checking.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Added reconnect task accessor so the SimpleTcpReceiveStrategy can access
          it and handle the connection to the reconnect task to do reconnect.


        These changes are made for RT8499 to add the support to declare connection
        lost upon backpressure timed out.

        * DDS_release_notes.txt:

          Updated comments for "max_output_pause_period" configuration.

        * dds/DCPS/transport/framework/TransportDefs.h:

          Added GET_CONFIG_FLOAT_VALUE macro.

        * dds/DCPS/transport/framework/PerConnectionSynch.cpp:
        * dds/DCPS/transport/framework/ThreadSynch.h:
        * dds/DCPS/transport/framework/ThreadSynch.inl:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:

          Made the wait_on_clogged_resource() and wait_on_unclog() return status.
          The PerConnectionSynch thread terminates if it returns an error.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Added max_output_pause_period_ and changed the
          conn_retry_backoff_multiplier_ to be float instead of int.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Added new method notify_lost_on_backpressure_timeout() to support
          the disconnecting and notification when the transport stay in
          backpressure too long ( > max_output_pause_period).
          Removed unused parameter "notify" from reconnect_i().
          Accomodated with the changes of conn_retry_backoff_multiplier_
          type change.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpSynchResource.inl:

          Made the max_output_pause_period passed to the constructor and made
          wait_to_unclog() call notify_lost_on_backpressure_timeout() upon
          handle_write_ready() timeout.

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Updated comments for the reconnect strategy configuration values and
          added new configuration "max_output_pause_period".

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:

          Added read/write delay for bp_timeout test.

        * tests/DCPS/Reconnect/run_test.pl:

          Added bp_timeout test case.

        * tests/DCPS/FooTest4/main.cpp:

          Made subscriber attach to transport to avoid the errors return
          from create_datareader() due to no transport.

Mon Apr 10 13:03:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Corrected the description for "conn_retry_backoff_multiplier" configuration.

Mon Apr 10 09:20:35 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Corrected the notify_*_lost() to avoid duplicate reader/writer id
          report lost.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          Corrected reconnect() to notify connection lost just once and not
          try to reconnect in subsequence send/recv failure.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Added reconnect() call in find_or_create_datalink() method when the
          connection is previously lost and now the datalink is requested because
          of the new association.

Fri Apr  7 15:15:23 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * DDS_release_notes.txt:

          Added notes for reconnect and lost connection callback support.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed the "#if 0" in create_*/delete_* that was used to avoid
          some test failure, but the tests are fixed, we just remove it.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Removed the "attempt_connection_reestablishment" configuration
          since it's duplicated with other configuration values and
          updated some spelling errors with the configuration values.

        * tests/DCPS/FooTest3_0/pub_main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:
        * tests/DCPS/FooTest3_0/sub_main.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.h:
        * tests/DCPS/FooTest3_1/sub_main.cpp:
        * tests/DCPS/FooTest3_2/pub_main.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.h:

          Made the test call attach_transport before create_datawriter()
          to fix the test failures.

Fri Apr  7 00:46:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These files are changed to support the connection reestablishment
        and lost connection notify. See RT8499.

        * dds/DdsDcps.mpc:

          Added new file SimpleTcpReconnectTask.h/.cpp.

        * dds/DdsDcpsDataReaderRemote.idl:
        * dds/DdsDcpsDataWriterRemote.idl:

          Added a paramter "notify_lost" to the remove_association
          in DataReaderRemote and DataWriterRemote interfaces.
          The flag true indicates the remove_association is invoked
          by the InfoRepo after it detected a lost writer/reader. The
          InfoRepo detect the lost writer/reader when the
          add_association/remove_association invocations on the writer/reader
          object reference fail. The datareader/datawriter needs notify the
          the DataReaderListener/DatawriterListener the publication/subscription
          lost.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:

          Added methods to support the notification of the publication/subscription
          lost and updated the remove_associations() signature change.

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Made the datareader/datawriter register with the TransportImpl upon
          creation and unregister upon deletion.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:

          Added notify_lost() method that is called by the SimpleTcpConnection
          upon reconnect failure. Changed the receive_strategy_ to be protected
          data so the SimpleTcpDataLink can access it.

        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:

          Added lock to protect the map. This would fix the problem when
          multiple add_association() are called at the same time. The
          find_or_create_set() failure causes the add_association() failure.

        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:

          Added internal map accessor so we can iterate the map to notify
          listener about the lost subscriptions/publication.

        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:

          Added methods to register/unregister/find the datareader
          and datawriter object.

        * dds/DCPS/transport/framework/TransportInterface.h:
        * dds/DCPS/transport/framework/TransportInterface.inl:

          Added TransportImpl object reference accessor.

        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added relink() funcation and call it when the send_packet()
          and receive_packet() return an error.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:

          Added new configurations to support connection re-establishment.

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:

          This is the main change made for the re-establish a connection.
          Added more states to have enough information for re-establish
          and reuse the connection object. If connector/acceptor role of
          the connection is not changed when the connection is re-established.
          As the connector side, we reuse the same connection object after
          reconnected. As the acceptor side, since the ACE_Acceptor creates
          a new connection each time when it accept a connection, we can not
          reuse the connection object. The states in the "old" connection
          object are copied to the "new" connection object.

        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:

          Added reconnect() function to replace an "old" connection with the
          "new" connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.inl:

          Added method to restart the ReceiveStrategy.

        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReconnectTask.h:

          This is a new class that is dedicated to check if the incoming
          connections are re-established connection from the remote. This
          would resolve the deadlock problem between the reactor thread
          (calling SimpleTcpTransport::passive_connction()) and the orb
          thread (calling SimpleTcpTransport::make_passive_connction()).
          The reactor thread will enqueue the new connection  to this task
          and let this task dequeue and check the connection.

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:

          Called SimpleTcpReconnectTask open and close upon transport
          initialization and shutdown.

        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:

          Updated to accommodate the change of the remove_association()
          signature change.

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:

          Added configuration values for retry connect to the example.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Updated to accommodate the change of the remove_association()
          signature change.

        * tests/DCPS/Reconnect/DataReaderListener.cpp:
        * tests/DCPS/Reconnect/DataReaderListener.h:
        * tests/DCPS/Reconnect/DataWriterListener.cpp:
        * tests/DCPS/Reconnect/DataWriterListener.h:
        * tests/DCPS/Reconnect/domain_ids:
        * tests/DCPS/Reconnect/Messenger.idl:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/Reconnect/Writer.cpp:
        * tests/DCPS/Reconnect/Writer.h:

          Added new test to test connection re-establishment and the lost
          connection notification.

Fri Mar 31 09:02:01 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        Adding a listener type for handling the notification of disconnects
        from the transport. RT 8499

        * dds/DdsDcpsPublication.idl:
        * dds/DdsDcpsSubscription.idl:

          Added TAO::DCPS::DataReaderListener and
          TAO::DCPS::DataWriterListener to provide the on_subscription_lost
          and on_publication_lost functionalities.

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.h:
        * tests/DCPS/FooTest4_0/DataReaderListener.cpp:
        * tests/DCPS/FooTest4_0/DataReaderListener.h:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.h:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.h:
        * tests/DCPS/MultiTopicTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener.h:

          Changed the Listeners to inherit from the POA_TAO::DCPS
          version instead of the the POA_DDS


        * dds/DCPS/transport/framework/TransportInterface.h:

          Removed unnecessary friend class declaration.

Wed Mar 29 13:59:23 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:

          Removed old comments and never reached code.

Wed Mar 29 10:46:36 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed a warning "control reaches end of non-void function"
          on linux build.

        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/DCPS/unit/MyTypeSupportImpl.h:

          Added the get_type_name() implementation to fix the compilation
          error "cannot instantiate abstract class".

        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:

          Changed the sample_num_ from long to be CORBA::Long to fix
          a warning in fprintf().

Tue Mar 28 14:11:41 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        Added TypeSupport::get_type_name() support for RT8496.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Added *TypeSupportImpl::get_type_name() implementation that use
          the interface repository id as the default type name.
          Made *TypeSupportImpl::register_type() check nil type name. If a nil
          type name is given then the default type_name is used.

        * dds/DdsDcpsTopic.idl:

          Added get_type_name() to the TypeSupport interface.

        * dds/DCPS/Registered_Data_Types.cpp:

          Updated the register_type() to use the get_type_name() for
          TypeSupport comparison instead of using
          _interface_repository_id() directly.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Updated the example to test TypeSupport::get_type_name() support.
          The nil type name is passed for type registration and get_type_name()
          is called to get the type name for topic creation.

Tue Mar 28 14:19:22 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:

          Added TCPListenerTests to the nightly build list of tests to run.
          UDP was not added due to the highly machine dependent performance
          of UDP.


Tue Mar 28 14:09:36 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        Adding scripts for topology tests for RT 8490.

        * performance-tests/DCPS/TCPListenerTest/conf.ini:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test-4p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p4s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-2p3s.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test-4p1s.pl:

          Added scripts to run the different topology tests.

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:

          Removed old test scripts.

        * performance-tests/DCPS/UDPListenerTest/common.h:

          Changed variable name for clarity in reading.

Tue Mar 28 10:20:20 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to remove the "using namespace" in the
        dds core code. See RT8495.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.inl:
        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/InstanceState.cpp:
        * dds/DCPS/InstanceState.inl:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/ReceivedDataElementList.inl:
        * dds/DCPS/Serializer.cpp:
        * dds/DCPS/Serializer.inl:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Removed "using namespace" from the dds core code.

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Reader.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:

          Fixed compilation after the "using namespace" removal change.

Mon Mar 27 16:14:47 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes are made to fix the DDS test failures between machines
        with different endianess. The swap_bytes configuration value per
        TransportImpl instance is also appropriately used to allow different
        transports use different setting of swap_bytes. (See RT8381)

        * bin/DCPS/CPPTemplate.pm:

          Made the Serializer in *DataWriterImpl::marshal() constructed
          with the swap_bytes flag based on swap_byte configuration value
          and made the Serializer in *DataReaderImpl::demarshal() constructed
          with the swap_bytes flag based on the endianess of the host and
          the byte order flag from the publisher.

        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataSampleHeader.inl:

          Set the swap_bytes flag to the Serializer in the reading side based
          on the the endianess of the host and the byte order flag in the data
          sample from publisher.

        * dds/DCPS/DataWriterImpl.cpp:

          Made the sample and control message header correctly set byte_order.

        * dds/DCPS/transport/framework/TransportHeader.cpp:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportHeader.inl:

          Added one more octet to the TransportHeader to indicate the endianess
          of the publisher side and updated the marshal and demarshal methods
          with the new flag.

Mon Mar 27 12:06:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Fixed the compilation error on some platforms in servant_to_reference()
          that misses the "typename" keyword for the_obj variable.

Fri Mar 24 11:22:34 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Reduce the template parameters from 3 to 1 for servant_to_reference.
          Thanks to Don Busch for suggesting this.

        * DDS_info.txt:

          More notes from Don's questions.

Thu Mar 23 09:17:23 USMST 2006  Scott Harris <harris_s@ociweb.com>

        * DDS_info.txt

          This file is a place to collect notes that may later
          become part of the DDS section of the TAO Dev. Guide.

Wed Mar 22 11:53:07 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Moved the TransportReplaceElement cached allocator from PacketRemoveVisitor
          to TransportSendStrategy to fix a bug in the transport. The problem is
          PacketRemoveVisitor is allocated on stack so the allocator is destroyed
          as the PacketRemoveVisitor goes out of scope, but late the
          TransportReplaceElement accesses the allocator and causes the access
          voilation.

Wed Mar 15 11:26:50 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added tests/DCPS/MultiDPTest test.

Wed Mar 15 11:17:25 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:

          Change the hash map using void* as the key to fix the build problem
          on 64bits build.

Tue Mar 14 12:37:29 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Registered_Data_Types.cpp:

          Changed the register_type() to use the_interface_repository_id
          comparison instead of  POA_TAO::DCPS::TypeSupport_ptr comparison.
          This would allow different TypeSupport instances of the same TypeSupport
          type register with the same type name in the same domain pariticipant.
          The second (and subsequent) registrations are ignored.

        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Added a test case that registers different TypeSupport instances of
          the same TypeSupport type using the same type name in a domain
          participant.

Mon Mar 13 14:50:00 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tests/DCPS/MultiDPTest/subscriber.cpp:

          Added a type to the declaration of 'i'.

Tue Jan 24 13:54:33 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        These changes fixes a bug in Registered_Data_Types that causes
        multiple domain participants within the same domain in a process
        can not register same data types. See RT8440.

        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/Registered_Data_Types.h:

          Made the DomainHash hash map use DomainParticipant object reference
          as the key instead of domain id. This would allow the data type
          be unique within a DomainParticipant and not within a domain.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DomainParticipantImpl.cpp:

          Updated the first argument to the
          Registered_Data_Types::register_type() call.

        * tests/DCPS/MultiDPTest/common.cpp:
        * tests/DCPS/MultiDPTest/common.h:
        * tests/DCPS/MultiDPTest/DataReaderListener.cpp:
        * tests/DCPS/MultiDPTest/DataReaderListener.h:
        * tests/DCPS/MultiDPTest/domain_ids:
        * tests/DCPS/MultiDPTest/MultiDPTest.mpc:
        * tests/DCPS/MultiDPTest/publisher.cpp:
        * tests/DCPS/MultiDPTest/README:
        * tests/DCPS/MultiDPTest/run_test.pl:
        * tests/DCPS/MultiDPTest/subscriber.cpp:
        * tests/DCPS/MultiDPTest/TestException.h:
        * tests/DCPS/MultiDPTest/Writer.cpp:
        * tests/DCPS/MultiDPTest/Writer.h:

          Created a new test for the bug fix. This is a test to show
          that multiple domain participants within a domain in a process
          can register the same data type.

        * tests/DCPS/unit/MyTypeSupportImpl.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.cpp:

          Updated the first argument to the
          Registered_Data_Types::register_type() call.

Mon Feb 20 09:26:00 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * tests/transport/simple/PubDriver.cpp:

          Changed config parameter from "DcpsInfo" to "DCPSInfoRepo".
          Changed config parameter from "DCPSBitLookupDurationSec" to
          "DCPSBitLookupDurationMsec" and changed its units to milliseconds.
          Change config parameter from "queue_links_per_pool" to
          "queue_messages_per_pool".
          Changed transport config ""DCPSBitTransportPort" default from
          2841 to 0 so the OS will pick a port and multiple Built-in Topic
          subscribers can run on one machine.
          Fixed a bug where the config parameter "swap_bytes" was being
          read as "swap_byte".

Sun Feb 19 17:24:02 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/README:
        * tests/DCPS/BuiltInTopic/README:
        * tests/DCPS/FooTest3/README:
        * tests/DCPS/FooTest3NoKey/README:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_1/README:
        * tests/DCPS/unit/README:

          Changed all -DCPSInfo options to -DCPSInfoRepo options
          because the -DCPSInfo is deprecated.

Sun Feb 19 17:05:02 USMST 2006  Scott Harris  <harris_s@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Set the data reader's liveliness.lease_duration QoS
          and log when it is not met.

        * tests/DCPS/BuiltInTopic/main.cpp:

          Print the size of Built-in Topic structures.

Thu Feb 16 16:23:28 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TypeNoKeyBounded/PTTypeLib_Export.h:
        * tests/DCPS/Compiler/idl_test1_lib/foolib_export.h:
        * tests/DCPS/Compiler/idl_test2_lib/foolib_export.h:
        * tests/DCPS/Compiler/idl_test3_lib/foolib_export.h:
        * tests/DCPS/FooType/footype_export.h:
        * tests/DCPS/FooType2/footype_export.h:
        * tests/DCPS/FooType3/foolib_export.h:
        * tests/DCPS/FooType3NoKey/foolib_export.h:
        * tests/DCPS/FooType3Unbounded/foolib_export.h:
        * tests/DCPS/FooType4/foolib_export.h:
        * tests/DCPS/FooType5/foolib_export.h:
        * tests/DCPS/MultiTopicTypes/foolib_export.h:
        * tests/DCPS/common/common_export.h:

          Fixed export macros for windows static builds.

Wed Feb 15 17:35:11 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/FooTest3_0/PubDriver.cpp:

          Changed delay between adding subscribers.  The test was
          adding the second subscriber before the subscriber was running.

Thu Feb  9 22:11:11 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/dcps_export.h:

          Fix export macros for windows static builds.

Fri Feb 03 17:22:10 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.h:

          Additional BIT macros.

        * tests/DCPS/FooTest5/subscriber.cpp:

          Fix virtual call on windows with DOC group.
          We were passing a listener impl from the stack to the
          poa which caused the virtual call at shutdown.

Mon Jan 30 07:31:28 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:

          Call a base class method through the 'this' pointer to avoid
          problems with VC6.

Fri Jan 27 14:04:05 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Change the name of the POA to "InfoRepo".

Fri Jan 27 13:54:43 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Add support for -DCPSInfoRepo.  This is identical in action to
          -DCPSInfo (which is essentially deprecated).  I think this is
          more consistent.

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Make the Info Repo's object reference persistent.  This makes
          the object references consistent (as long as fixed endpoints are
          specified) and simplifies deployment.

        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Change this test to work with a static DDS build.

        * dds/DCPSInfo.idl:

          Removed this file.  It appears obsolete (virtually identical to
          DdsDcpsInfo.idl).

Thu Jan 26 09:36:24 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.mpc:
        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Modified the DCPSInfoRepo process so it registers the
          Info Repo object using a simple object key via the
          IOR Table.  This makes it easier to implement alternate
          schemes of distributing the object reference (besides
          storing it in a file).

        * DevGuideExamples/DDS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DDS/Messenger/run_ns_test.pl:

          Add some examples/tests of how to locate the InfoRepo
          using corbaloc and the naming service (using corbaname).

Wed Jan 25 11:15:55 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Domain.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:

          Added DDS_HAS_MINIMUM_BIT macro to build without
          Built In Topic support.
          Defining the macro will NOT build BIT support.


        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Registered_Data_Types.cpp:

          Fixed name of template instantiation macro.

Tue Jan 24 13:54:33 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Turned off the tests with SimpleUdp dynamically loaded via service
          configurator on static builds.

Tue Jan 24 12:54:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple_n/DDS_transport_simple_n.mpc:

          Removed dependency on SimplUdp lib.

        * tests/transport/udp_simple_n/DDS_transport_udp_simple_n.mpc:

          Added dependency on SimplUdp lib.

Tue Jan 24 12:34:53 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Fixed a deadlock situation that recursively acquires the ACE_Thread_Mutex.

        * dds/DCPS/transport/framework/TransportConfiguration.inl:

          Updated a debug message.

Tue Jan 24 11:44:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:

          Fixed a warning with unused variable.

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Fixed compilation erros on some builds that complains the T type is not
          defined when the RcHandle<T> template is instantiated.

Mon Jan 23 13:56:59 2006  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:

          Removed the TAO and DCPS namespaces from the basclass call to
          load() to allow vc6 to figure out which method is being called.

Sun Jan 22 23:23:30 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Added ace/Configuration.h include to fix compilation errors on DOC's
          nightly builds and made the modifiers of the  "common" configuration values
          can overwrite the value from command line option and command line option can
          overwrite the values in configuration file.

        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportGenerator.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          Added includes or namespace to fix the compilation errors.

Fri Jan 20 14:02:53 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/transport/simple_n/DDS_transport_simple_n.mpc:

          Added dependency on SimpleUdp library for this static loading SimpleUdp
          example.

Fri Jan 20 13:41:45 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/simpleUDP/SimpleUdp.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_export.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdp_pch.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpLoader.h:

          Added new files that should be checked in in last commit.

Fri Jan 20 13:21:40 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        The main changes are adding DDS file configuration feature. The SimpleTcp
        is still a part of DDSDcps library and other concrete transport libraries
        such as SimpleUdp can be dynamically or statically loaded.
        See the projects\DDS\design\configuration_design.txt (from CVS) for
        various scenarios of using dds configurations:

        * dcpsexe_with_udp.mpb:

          Added base project for SimpleUdp transport applications.

        * dds/DdsDcps.mpc:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportExceptions.h:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.h:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportGenerator.cpp:
        * dds/DCPS/transport/framework/TransportGenerator.h:
        * dds/DCPS/transport/framework/TransportGenerator_rch.h:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportImplFactory.h:
        * dds/DCPS/transport/framework/TransportImplFactory.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpGenerator.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpFactory.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpGenerator.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpTransport.h:

          These files are changed for the dds configuration feature.

        * dds/DCPS/DataBlockLockPool.h:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/RcObject_T.h:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/NullSynch.h:
        * dds/DCPS/transport/framework/PerConnectionSynchStrategy.h:
        * dds/DCPS/transport/framework/PoolSynch.h:
        * dds/DCPS/transport/framework/PoolSynchStrategy.h:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.h:
        * dds/DCPS/transport/framework/RepoIdSet.h:
        * dds/DCPS/transport/framework/RepoIdSetMap.h:
        * dds/DCPS/transport/framework/ThreadSynch.h:
        * dds/DCPS/transport/framework/ThreadSynchResource.h:
        * dds/DCPS/transport/framework/ThreadSynchStrategy.h:
        * dds/DCPS/transport/framework/ThreadSynchWorker.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportQueueElement.h:
        * dds/DCPS/transport/framework/TransportReactorTask.h:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.h:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpDataLink.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpReceiveStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSendStrategy.h:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.h:

          These files are changed to add the export macro.

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPSInfoRepo.cpp:
        * DevGuideExamples/DDS/Messenger/pub.ini:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/sub.ini:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * DevGuideExamples/DDS/Messenger/udp.conf:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/conf.ini:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/README:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/udp.conf:
        * performance-tests/DCPS/UDPNoKeyTest/common.h:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/udp.conf:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_0/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_1/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/SimpleSubscriber.cpp:
        * tests/DCPS/FooTest3_2/SimpleSubscriber.h:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4_0/common.h:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest5/common.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/udp.conf:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/FooTest5_0/udp.conf:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/LivelinessTest/udp.conf:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/unit/run_test.pl:
        * tests/transport/dds_comparative/PubDriver.cpp:
        * tests/transport/dds_comparative/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SimplePublisher.cpp:
        * tests/transport/simple/SimplePublisher.h:
        * tests/transport/simple/SimpleSubscriber.cpp:
        * tests/transport/simple/SimpleSubscriber.h:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SimplePublisher.cpp:
        * tests/transport/simple_bp/SimplePublisher.h:
        * tests/transport/simple_bp/SimpleSubscriber.cpp:
        * tests/transport/simple_bp/SimpleSubscriber.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SimplePublisher.cpp:
        * tests/transport/simple_bp_rm/SimplePublisher.h:
        * tests/transport/simple_bp_rm/SimpleSubscriber.cpp:
        * tests/transport/simple_bp_rm/SimpleSubscriber.h:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SimplePublisher.cpp:
        * tests/transport/simple_n/SimplePublisher.h:
        * tests/transport/simple_n/SimpleSubscriber.cpp:
        * tests/transport/simple_n/SimpleSubscriber.h:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/DDS_transport_udp_simple.mpc:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/README:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple/SimplePublisher.cpp:
        * tests/transport/udp_simple/SimplePublisher.h:
        * tests/transport/udp_simple/SimpleSubscriber.cpp:
        * tests/transport/udp_simple/SimpleSubscriber.h:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple/udp.conf:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/run_test.pl:
        * tests/transport/udp_simple_n/SimplePublisher.cpp:
        * tests/transport/udp_simple_n/SimplePublisher.h:
        * tests/transport/udp_simple_n/SimpleSubscriber.cpp:
        * tests/transport/udp_simple_n/SimpleSubscriber.h:
        * tests/transport/udp_simple_n/SubDriver.cpp:
        * tests/transport/udp_simple_n/udp.conf:

          Applied the new TransportFactory interfaces for generating and cofiguring
          the TransportImpl object to all DDS tests and made changes on the udp tests
          to allow the SimpleUdp library statically or dynamically loaded.

Mon Jan 16 10:35:06 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportFactory.cpp:

          Fix missed ACE_INLINE in code that was un-inlined.

Sat Jan 14 15:22:43 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataSampleList.cpp:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/ReceivedDataElementList.cpp:
        * dds/DCPS/ReceivedDataElementList.inl:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.cpp:
        * dds/DCPS/transport/framework/ReceiveListenerSetMap.inl:
        * dds/DCPS/transport/framework/RepoIdSetMap.cpp:
        * dds/DCPS/transport/framework/RepoIdSetMap.inl:
        * dds/DCPS/transport/framework/TransportFactory.cpp:
        * dds/DCPS/transport/framework/TransportFactory.inl:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:
        * dds/DCPS/transport/framework/TransportInterface.cpp:
        * dds/DCPS/transport/framework/TransportInterface.inl:
        * dds/DCPS/transport/framework/TransportReactorTask.cpp:
        * dds/DCPS/transport/framework/TransportReactorTask.inl:
        * dds/DCPS/transport/framework/TransportReceiveListener.cpp:
        * dds/DCPS/transport/framework/TransportReceiveListener.inl:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.cpp:
        * dds/DCPS/transport/framework/TransportReceiveStrategy.inl:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:
        * dds/DCPS/transport/framework/TransportSendListener.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.cpp:
        * dds/DCPS/transport/simpleUDP/SimpleUdpSocket.inl:

          Uninlined some unnecessary inlines.  This was done to
          reduce the footprint of DDS.

Fri Jan 13 11:47:29 2006  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Fixed a few other compile errors related to casting ACE_hrtime_t
          to a double with VC++ 6.0.

        * tests/DCPS/FooTest4_0/main.cpp:

          Avoid a g++ warning about choosing the right pointer type.

Thu Jan 12 20:40:18 UTC 2006  Scott Harris <harris_s@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:

          Fix compile error using VC++ v6.0.
          Thanks to Chad Elliott for the recommended fix.

        * performance-tests/DCPS/SimpleLatency/DDSPerfTest.idl:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/README:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:

          Remove double spacing (extra ^M) by using unix2dos.

Wed Jan 11 23:47:37 UTC 2006  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Removed locks before calling TransportInterface::add_pub/sub
          methods to avoid deadlocking.
          Thanks to Don Busch for providing a the StockQuoter example
          that would deadlock if the subscriber started before the publisher.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/PublisherImpl.h:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/SubscriberImpl.h:

          Renamed some locks to make it easier to tell which lock_
          is being used.

Fri Jan  6 13:14:23 2006  Paul Calabrese  <calabrese_p@ociweb.com>

        * dcps_ts_defaults.mpb:

          Add an explicit "perl" to the build rule.  This helps
          things go a little more smoothly on Windows for some people.

Wed Jan 04 14:51:42 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Changed to properly initialize the array variables. The
          properly initialized variables compare correctly on 64 bit
          systems.

Tue Jan 03 16:15:07 MST 2006  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed issue when reregistering an instance.
          The instance only needs to be registered not inserted
          into the list.

Fri Dec 30 16:37:49 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.h:

          Fixed access violation from missing allocator.

Fri Dec 30 13:54:44 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/dcps_tests.lst:

          Removed duplicate BuiltInTopic line.

Fri Dec 30 11:00:34 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:

          Fixed scoping of variables added for transport allocators.

Thu Dec 29 16:31:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataSampleList.h:

          Force the creation of a DataSampleListElement to give
          the allocator.

        * tests/DCPS/unit/Main.cpp:
        * tests/transport/dds_comparative/PubWriter.cpp:
        * tests/transport/dds_comparative/PubWriter.h:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:

          Added missing transport allocators.


Tue Dec 27 12:26:47 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:

          Fix some GCC 3.4.2 warnings (ununsed vars and member
          initialization order).  Avoided commenting out random code.

Mon Dec 19 14:42:52 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Rolled back the changes that made on
          "Thu Dec 15 10:08:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>"
          that intended to cleanup memory when the write/register fail.
          The changes need more investigation.

Mon Dec 19 09:43:03 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Changed order of code to actually execute code that was
          after a return.

        * tests/transport/simple/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_n/SimpleDataWriter.cpp:
        * tests/transport/udp_simple/SimpleDataWriter.cpp:
        * tests/transport/udp_simple_n/SimpleDataWriter.cpp:

          Changed tests to use an allocator.

Fri Dec 16 01:03:41 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:

          Moved the method back to cpp and removed the ACE_INLINE
          declaration.  The method needed a define in the cpp file.

Fri Dec 16 00:50:26 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:

          Moved the ACE_INLINE method to the inl file.  Not having it
          in the inl file results in an undefined reference when linking
          with the dll

Thu Dec 15 22:31:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h:

          Corrected capitalization of header include.

Thu Dec 15 10:08:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/DataLinkSet.h:

          Corrected the number of chunks for map_entry_allocator_. It should be
          the number of datalinks. The map_ is also changed to be a pointer of
          hash map so we can appropiately delete the hash map with current
          implementation of ACE_Hash_Map_Manager_Ex and ACE_Hash_Map_With_Allocator.

        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Made number of chunks in header data block to be 1 instead of 2 since the
          duplicate() increases the ref count of data block.

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Added free_to_pool_ count to help debugging.

        * dds/DCPS/DataWriterImpl.cpp:

          Replaced ACE_CHECK with ACE_CHECK_RETURN in some methods with a return
          type.

        * dds/DCPS/WriteDataContainer.cpp:

          Made obtain_buffer() and register_instance() release memory it allocates
          if the methods return error.
          Made the number of chunks for data allocator to be the
          max_samples of resource_limits in qos if that value is not
          LENGTH_UNLIMITED.

        * dds/DCPS/Service_Participant.cpp:

          Fixed a bug in parse_args() that causes crash when passing multiple
          -DCPS options.

        * bin/DCPS/CPPTemplate.pm:

          Made write_w_timestamp() release marshalled data sample if write fails.

        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:

          Uncommented the read_samples() which might be accidently checked in previously.

Thu Dec 15  8:35:17 USMST 2005 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h

          Get the DdsDcps project to build against TAO v 1.4.7.
          Needed to explicitly include the ACE version header so that
          conditional complication that makes DDS build with both the DOC
          and OCI versions of TAO worked.
          Strangely, this is not needed for the latest DOC TAO from CVS
          or when building with gcc/GNUmakefile but is needed for VC71.

Fri Dec  9 16:57:17 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataSampleList.inl:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:
        * dds/DCPS/transport/framework/DataLinkSet.cpp:
        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSet.inl:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.cpp:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.inl:
        * dds/DCPS/transport/framework/TransportQueueElement.inl:
        * dds/DCPS/transport/framework/TransportReplacedElement.cpp:
        * dds/DCPS/transport/framework/TransportReplacedElement.h:
        * dds/DCPS/transport/framework/TransportReplacedElement.inl:
        * dds/DCPS/transport/framework/TransportSendControlElement.cpp:
        * dds/DCPS/transport/framework/TransportSendControlElement.h:
        * dds/DCPS/transport/framework/TransportSendControlElement.inl:
        * dds/DCPS/transport/framework/TransportSendElement.cpp:
        * dds/DCPS/transport/framework/TransportSendElement.h:
        * dds/DCPS/transport/framework/TransportSendElement.inl:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Replaced the TransportSendControlElement, TransportSendElement,
          TransportReplacedElement and TransportSendStrategy header message
          block allocation from heap with the cached allocator.

        * dds/DdsDcps.mpc:

          Listed the files in same directory in alphabet order.

Fri Dec 09 15:31:23 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleLatency/DDSPerfTest.idl:
        * performance-tests/DCPS/SimpleLatency/domain_ids:
        * performance-tests/DCPS/SimpleLatency/PubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/PubListener.h:
        * performance-tests/DCPS/SimpleLatency/README:
        * performance-tests/DCPS/SimpleLatency/run_test.pl:
        * performance-tests/DCPS/SimpleLatency/sample_pub.cpp:
        * performance-tests/DCPS/SimpleLatency/sample_sub.cpp:
        * performance-tests/DCPS/SimpleLatency/SimpleLatency.mpc:
        * performance-tests/DCPS/SimpleLatency/SubListener.cpp:
        * performance-tests/DCPS/SimpleLatency/SubListener.h:

          Added a simple latency test.  This test is a modified
          version of the one created by Ming Xiong of the DOC group.

Fri Dec 09 15:22:38 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Cached_Allocator_With_Overflow_T.h:
        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Changed Allocators to log an error message when more
          memory is freed to the heap than is allocated.

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.inl:

          Expanded the amount of memory that is allocated for
          Message Blocks that are duplicated on a per-association
          basis.

Wed Nov 30 10:00:19 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:

          Changed the allocation of the message block in
          create_control_message to properly use the allocator.

Tue Nov 29 13:30:35 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
          Changed the read_next_sample and take_next_sample that
          only take a single sample to handle the read and take,
          not allocate arrays and call the array version.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * tests/DCPS/FooTest3_0/README:
        * tests/DCPS/FooTest3_1/README:

          Removed the unneeded PUBLISHER_TEST macro and code.

Sat Nov 26 17:35:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Dynamic_Cached_Allocator_With_Overflow_T.h:

          Constructor did not correctly use and save the rounded up size
           for allocating!  This resulted in invalid pointer locations
           used for small object sizes on the 64 bit OS.

Tue Nov 22 08:55:53 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          DDS 0.7 released.

        * DDS_release_notes.txt:
        * README:
        * VERSION:

          Changes related to the 0.7 release.

Tue Nov 22 08:54:53 2005  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:

          Added #include "ace/os_include/netinet/os_tcp.h" for builds with
          inlining turned off.

Mon Nov 21 13:57:01 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/Writer.h:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/publisher.cpp:

          Renamed svc() function to be run_test() and removed the inheritance
          of ACE_Task_Base for class Writer. This was intended to fix build
          problem on Solaris platform.

Thu Nov 17 10:17:48 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.cpp:

          Make it build with TAO 1.3a (almost p6).

Thu Nov 17 06:23:48 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLinkSetMap.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportImpl.inl:

          Moved some inlined functions to .cpp files to
          avoid a problem recursive include problem when
          building against DOC TAO and using gcc.

Tue Nov 16 18:39:52 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet_rch.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Make DDS build with the DOC group version of TAO.
          See RT8044.

Tue Nov 15 10:24:52 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:

          Added includes to the dcps_export header file for the exports.

Mon Nov 14 14:46:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLinkSet.h:
        * dds/DCPS/transport/framework/DataLinkSetMap.h:
        * dds/DCPS/transport/framework/PacketRemoveVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportImplFactory.h:

          VC6 needs the classes exported.

Mon Nov 14 09:15:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/LivelinessTest/Writer.h:
        * tests/DCPS/FooTest5/common.h:

          Fixed warnings on Solaris builds.

Sun Nov 13 23:51:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/FooTest3/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/Writer.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest3_1/Writer.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_2/Writer.cpp:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest4_0/Writer.cpp:
        * tests/DCPS/FooTest4_0/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/LivelinessTest/Writer.cpp:
        * tests/DCPS/LivelinessTest/DataReaderListener.cpp:
        * tests/DCPS/MultiTopicTest/Writer.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener3.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener2.cpp:
        * tests/DCPS/MultiTopicTest/DataReaderListener1.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/BuiltInTopic/common.cpp:
        * tests/DCPS/FooType/Foo_Singleton_Transport.h:

          Fixed warnings because of passing _var as _ptr argument.

Sun Nov 13 15:57:35 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/BuildChainVisitor.h:
        * dds/DCPS/transport/framework/QueueRemoveVisitor.h:

          Added using declaration to resolve the "hides virtual functions"
          compilation warnings on Solaris.

Sat Nov 12 13:24:25 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.h:

          Resolved a warnings.

        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:

          Work arround with the compilation errors on Solaris due to the
          compiler can not resolve operator in a namespace.

Fri Nov 11 17:18:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_IR_Domain.cpp:

          Fixed warnings on string (char*) initialization.

        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.h:

          Work arround with the compilation errors on Solaris due to the
          compiler can not resolve operator in a namespace.

Fri Nov 11 14:58:33 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/Qos_Helper.h:

          Restored previous version that uses the
          EXTERN_OR_INLINE_HELPER_METHOD  macro, but changed the
          macro to be defined as ACE_INLINE instead of nothing if
          __ACE_INLINE__ is defined.

Fri Nov 11 12:51:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DomainParticipantImpl.cpp:

          Fixed warnings on string (char*) initialization.

        * dds/DCPS/Qos_Helper.h:

          Used ACE_NAMESPACE_INLINE_FUNCTION for inline functions
          declare to fix warnings on Solaris.

Fri Nov 11 11:06:19 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:

          Removed extra parenthesis in the "#if defined" statement.
          The should fix the compilation problem on Solaris builds.

Thu Nov 10 16:35:32 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Qos_Helper.h:
          Solaris compilers failed when the method declaration was
          extern and the definition was inline.  Added a macro
          to assign the extern when the code is not inlined.

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:

          Set the VC6 necessary extra unused parameters into
          a typedef'd function declaration.  Solaris compilers
          were choking on the extra parameter in the templated
          method.

        * dds/DCPS/transport/framework/DataLinkSetMap.inl:
        * dds/DCPS/transport/framework/NullSynchStrategy.inl:
          Removed unused files.

Mon Oct 31 16:43:52 2005  Byron Harris  <harris_b@ociweb.com>

        * dds/DCPS/Marked_Default_Qos.cpp:

          Replaced usage of ACE_static_cast<::DDS...> with
          static_cast< ::DDS...> as the <: was confusing the
          Sun CC 5.3 compiler.

Mon Oct 31 16:38:30 2005  Byron Harris  <harris_b@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.cpp:

          Avoid compiler error generated by Sun CC 5.3 because
          a namespace terminates with a "}".

        * dds/DCPS/DataSampleHeader.h:

          Avoid compiler warning generated by Sun CC 5.3.

Tue Oct 25 17:26:38 MST 2005   Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:

          Moved SimpleTcpTransport rch include and added SimpleTcpTransport
          to properly instantiate the templates on gcc on solaris.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.inl:

          Moved inline methods into cpp.

Tue Oct 25 15:22:28 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Removed using the pointer as the DataLink id.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:

          Can not use LONG_MAX for CORBA::Long because on some
          architectures the long is 8 bytes while a CORBA::Long
          is always 4 bytes.

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Fixed issue with using a long double as a
          character array all the time.

Tue Oct 25 13:18:31 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/WriteDataContainer.h:

          Add a space to some templates.  Things of the form <::DDS::Ident
          won't work because <: is a C++ digraph.

        * dds/DCPS/DataReaderImpl.cpp:

          Fix an initialization order warning

Sun Oct 23 16:19:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataSampleList.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublicationInstance.h:
        * dds/DCPS/SubscriptionInstance.h:
        * dds/DCPS/WriteDataContainer.cpp:
        * dds/DCPS/WriteDataContainer.h:

          Removed using instance handles as pointers.  Maps of
          handle to pointer were added.

Thu Oct 20 16:09:20 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * LICENSE:

          Change "TAO-DDS" to "TAO DDS" in the LICENSE.

Thu Oct 13 15:13:22 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/transport/simple_bp_rm/SimpleDataWriter.cpp:

          Clean up some gcc warnings, all of which are unused args,
          unused vars, or uninitialized vars.

Mon Oct 10 15:59:48 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:

          Fixed compilation error on vc71.

Mon Oct 10 15:35:45 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:

          Fixed memory leaks.

Sun Oct  9 13:17:37 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:
        * performance-tests/DCPS/SimpleE2ETest/common.h:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.h:
        * performance-tests/DCPS/UDPNoKeyTest/publisher.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/subscriber.cpp:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DcpsIntegration/DomainParticipantListener.h:
        * tests/DCPS/DcpsIntegration/infrastructure.cpp:
        * tests/DCPS/DcpsIntegration/topic.cpp:
        * tests/DCPS/DcpsIntegration/TopicListener.h:
        * tests/DCPS/FooTest2/main.cpp:
        * tests/DCPS/FooTest3/main.cpp:
        * tests/DCPS/FooTest3_0/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/PubDriver.cpp:
        * tests/DCPS/FooTest3_1/Writer.h:
        * tests/DCPS/FooTest3_2/PubDriver.cpp:
        * tests/DCPS/FooTest3NoKey/main.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4_0/main.cpp:
        * tests/DCPS/FooTest5/publisher.cpp:
        * tests/DCPS/FooTest5/subscriber.cpp:
        * tests/DCPS/FooTest5_0/main.cpp:
        * tests/DCPS/FooType/FooTypeSupportImpl.h:
        * tests/DCPS/LivelinessTest/publisher.cpp:
        * tests/DCPS/LivelinessTest/subscriber.cpp:
        * tests/DCPS/MultiTopicTest/publisher.cpp:
        * tests/DCPS/MultiTopicTest/subscriber.cpp:
        * tests/DCPS/SimpleFooTest/main.cpp:
        * tests/DCPS/unit/Main.cpp:

          Fixed memory leaks and some string problems caused by VC6's inability
          to pick the correct overloaded function.

Wed Oct  5 14:28:18 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:

          Declared the instance handle collection in DataReaderImpl class
          as ACE_Unbounded_Set instead of std::set. This would fix some
          tests on vc6 build.

        * tests/DCPS/FooTest5/DataReaderListener.cpp:
        * tests/DCPS/FooTest5/Writer.cpp:

          Added unused arguments with the template parameter types.
          This is a work arround to fix tests on vc6 builds that failed
          due to the vc6 bug on template function instantiation.

        * tests/DCPS/FooTest3_2/run_test.pl:

          Extended the timeout to fix test.

        * tests/DCPS/FooTest4/Reader.cpp:
        * tests/DCPS/FooTest4/Writer.cpp:

          Fixed incorrect data member initialization.

Tue Sep 27 10:31:34 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPNoKeyTest/Writer.cpp:
        * tests/DCPS/Compiler/idl_test3_main/main.cpp:
        * tests/DCPS/FooTest3_0/DataWriterListener.cpp:
        * tests/DCPS/unit/Main.cpp:
        * tests/transport/simple_bp/SimpleDataReader.cpp:

          Clean up the remaining gcc warnings.

Fri Sep 23 16:18:49 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/InstanceState.cpp:

          Clean up some gcc warnings.

Fri Sep 23 15:31:37 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DDS_release_notes.txt:

          Add limitation to release notes describing excess memory
          usage of DDS because of application object bufferes being
          oversized.

        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpAcceptor.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConfiguration.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.inl:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:

          Add a new configuration option for Nagle's algorithm
          (TCP_NODELAY).  The default is to disable Nagle's algorithm.
          This was uncovered by some latency testing.  Some
          performance tests with small sample sizes may benefit
          from enabling this algorithm.

Wed Sep  7 08:47:48 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * bin/all_tests.pl:

          Finally added the all_tests.pl script to the repo.  This
          is a script that automatically runs all the run_*.pl scripts
          it can find under a directory.  It can also loop on the tests
          for a set number of iterations or until a failure is encountered.

Tue Sep  6 11:57:09 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DdsDcps.mpc:

          Make sure the Built-In Topic IDL files use the -Gdcps IDL
          compiler option.  This was causing compilation problems with
          SunCC 5.6.

Wed Aug 31 06:39:06 2005  Chad Elliott  <elliott_c@ociweb.com>

        * dds/DCPS/BuiltInTopicUtils.h:

          Removed extra semicolon's on the closing curly braces for
          namespaces.

Wed Aug 17 09:10:10 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:

          Enhance these scripts so they properly delete existing ior files
          at the beginning and the end of the test.

Thu Aug 11 13:56:18 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          DDS 0.6 released.

        * DDS_release_notes.txt:
        * VERSION:

          Updates for DDS 0.6.

Thu Aug 11 11:24:15 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          Fix some more function overloading issues with VC6.

Thu Aug 11 11:18:35 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportDefs.h:
        * dds/DCPS/transport/framework/TransportHeader.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:

          Increase the sample and packet lengths to be 32 bit integers
          so we can support larger samples (greater than 64 KB).

        * dds/DCPS/transport/simpleUDP/SimpleUdpConfiguration.inl:

          Limit the simple UDP transport to about 64 KB samples
          because of its lack of fragmentation and the MTU.

Tue Aug  2 16:24:58 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Change the default IOR file written from dcps_ir.ior to repo.ior.
          This makes it match the default that the service participant is
          looking for.

        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:

          Clean these tests up by substituting a timed wait for the repo.ior
          file instead of a sleep(5).

Tue Aug  2 15:39:50 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/BuiltInTopic/common.cpp:

          Let the host/port default on this test.

        * tests/DCPS/Compiler/idl_test1_main/main.cpp:
        * tests/DCPS/DCPSInfoRepo/publisher.cpp:
        * tests/DCPS/DCPSInfoRepo/subscriber.cpp:

          Fix some string problems caused by VC6's inability to pick the
          correct overloaded function.

Fri Jul 29 17:10:56 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:

          Fixed memory leaks.
          - Use _var instead of _ptr.

Fri Jul 29 14:14:16 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

          Fix a variable scoping issue for VC6.

Fri Jul 29 12:48:42 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DDS_release_notes.txt:

          Updated the release notes (and renamed them).

        * VERSION:

          Added a version file.

        * DDS_realease_notes.txt:

          Removed this file.

Fri Jul 29 12:35:25 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/DCPS/DataBlockLockPool.h:

          Remove explicit scope that was causing problems for VC6.

        * tests/DCPS/DCPSInfoRepo/run_test.pl:

          Clean up this test a little.

Thu Jul 28 14:08:44 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:

          Fixed memory leak.
          - Removed an extra get_name() call on topic which duplicates
            the string.

Thu Jul 28 13:43:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Fixed the memory leak of the Pt*TypeSupportImpl servant.

Thu Jul 28 13:17:03 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Fixed memory leak of DataReaderRemote object references.
          - Made the get_dr_obj_ref () assign to a DataReader_var
            since the accessor duplicates object reference count.

        * dds/DCPS/Marked_Default_Qos.cpp:

          Fixed memory leak of DomainParticipantFactory object reference.
          - Made TheParticipantFactory assign to
            DomainParticipantFactory_var since the TheParticipantFactory
            duplicates the object reference count.

        * dds/DCPS/WriteDataContainer.cpp:

          Fixed memory leak of the registered sample data and the
          PublicationInstance object.
          - Made the unregister_all() delete all PublicationInstance
            objects in the instance handle list.

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:

          Fixed memory leak of the DataWriter object reference.
          - Delete every Writer object after test is done.

        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Fixed the memory leak of the listener servant.
          - Made the servant assign to PortableServer::ServantBase_var.

Thu Jul 28 10:41:07 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataBlockLockPool.h:

          Changes to compile on unix systems.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Removed the debugging code from
          Wed Jul 27 11:03:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

Wed Jul 27 17:37:13 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DdsDcps.mpc:
        * dds/DCPS/DataBlockLockPool.cpp:
        * dds/DCPS/DataBlockLockPool.h:

          Created a class to give out ACE_Thread_Mutex lock adapters.
          This just cycles through an array giving out the next lock.
          It does not currently require the returning of the locks.

        * bin/DCPS/CPPTemplate.pm:
        * bin/DCPS/HTemplate.pm:

          Changed to use a DataBlockLockPool for providing locks to the
          ACE_Data_Blocks.  The blocks need to be locked to prevent the
          simultaneous access by multiple threads from deforming the
          reference count.

Wed Jul 27 17:20:16 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/Service_Participant.h:

          Rolled back previous version and found the memory
          leak is in the reference_to_servant function
          of Service_Participant.

Wed Jul 27 11:03:25 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.h:
        * dds/DCPS/transport/framework/TransportSendStrategy.inl:

          Added additional code to give more information when the send_bytes
          fails.  This code is marked with "//remove" and
          "DUMP_FOR_PACKET_INFO"

          This code should be removed when the problem has been fixed.

        * performance-tests/DCPS/SimpleE2ETest/Reader.cpp:

          Fixed error with data size.

Tue Jul 26 22:33:28 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:

          Fixed PublisherImpl and Subscriber memory leak.

        * tests/DCPS/FooTest3_2/pub_id.txt:

          Removed test generated file.

Tue Jul 26 15:38:24 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/Writer.h:

          Correctly applied the _var and _ptr.

        * tests/DCPS/FooTest3_0/pub_id.txt:

          Removed test generated file.

Fri Jul 22 08:40:18 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/transport/simpleTCP/SimpleTcpSendStrategy.cpp:

          Make SimpleTcpSendStrategy::send_bytes log the iovec array when
          sendv returns an unexpected errno in hopes of getting it to
          core when the sendv fails for AAC.  Hopefully this will shed
          some light on the problem.

Thu Jul 21 18:38:54 CDT 2005  Scott Harris <harris_s@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.hi:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:

          Added -sd <msec> option to allow the subscriber to sleep for
          <msec> milliseconds for every read call.
          This was added to see what would happend if there was a slow
          subscriber.

Wed Jul 20 15:59:55 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:
        * dds/DCPS/RcObject_T.h:

          Added appropriate ACE_DES_FREEs for allocator frees.

Wed Jul 20 15:40:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/ReceivedDataElementList.inl:

          Corrected comment about why the instance state is not
          deleted in the destructor.

        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:

          Added delete of queue in destructor.  It was new'd in
          the constructor.

Wed Jul 20 12:11:14 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
          Changed ptr in read to var to not leak memory.

Wed Jul 20 13:10:23 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * dds/InfoRepo/DCPSInfoRepo.cpp:

          Fix -a option so it overrides the address properly.

Mon Jul 18 17:27:29 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/transport/simple_bp/SimpleSubscriber.cpp:

          Fix return value error that VC6 caught.

Mon Jul 18 13:30:13 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * tests/DCPS/FooTest5/publisher.cpp:

          Remove extra fclose() that was causing failures.

Mon Jul 18 13:18:45 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * DevGuideExamples/DDS/Messenger/DataReaderListener.h:
        * DevGuideExamples/DDS/Messenger/DataReaderListener.cpp:
        * DevGuideExamples/DDS/Messenger/Messenger.idl:
        * DevGuideExamples/DDS/Messenger/Messenger.mpc:
        * DevGuideExamples/DDS/Messenger/Writer.h:
        * DevGuideExamples/DDS/Messenger/Writer.cpp:
        * DevGuideExamples/DDS/Messenger/domain_ids:
        * DevGuideExamples/DDS/Messenger/publisher.cpp:
        * DevGuideExamples/DDS/Messenger/run_test.pl:
        * DevGuideExamples/DDS/Messenger/subscriber.cpp:

          Update and merge the devguide example.  I put it here
          because it proved difficult to integrate into the TAO
          DevGuideExamples directory.

Mon Jul 18 06:43:11 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Backed out the change of Thu Jul 14 12:39:15 MST 2005
          because reference_to_servant was fixed in 1.4a_p4.

Sat Jul 16 17:51:05 MST 2005  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Make samples replaced in the subscriber's instance queue delete as
          well as free the sample.

        * dds/DCPS/ReceivedDataElementList.inl:

          Added a comment about the ReceivedDataElement destructor
          needing to destroy its InstanceState. But it currently
          causes troubles.

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:

          Change the number of samples from 80,000 to 20,000.

Fri Jul 15 16:01:19 MST 2005  Scott Harris <harris_s@ociweb.com>

        * bin/DCPS/CPPTemplate.pm:

          Added Paul C's changes to free read elements in the subscriber
          side instance queue that are being replaced by the recieved
          samples.  It still leaks the if the sample contains a type
          that requires freeing the fields individiually (like sequences).

        * performance-tests/DCPS/TCPListenerTest/run_test.pl:

          Changed this test to just have MAX_SAMPLES and
          MAX_SAMPLES_PER_INSTANCE set to the number that will be in
          the instance queue plus some for good measure.
          Previously it would set MAX_SAMPLES and PER_INSTANCE to
          the number of expected samples.

Thu Jul 14 12:39:15 MST 2005  Scott Harris <harris_s@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Changed reference_to_servant template to not remove
          a reference to the servant because POA::reference_to_servant
          changed in TAO 1.4a (and 1.4.x) to not increment
          the reference count.

Wed Jul 13 14:03:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dcps.mpb:
        * dds/DdsDcps.mpc:

          Removing checks for the Dcps in the TAO_ORBSVCS list.

Wed Jul 13 10:48:01 MST 2005  Trevor Fields  <fields_t@ociweb.com>
        * dds/DCPS/Service_Participant.h:

          Changed to new Root_POA.h for all builds.

Wed Jul 13 10:28:48 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.h:
        * tests/transport/simple_bp/SimpleDataReader.cpp:
        * tests/transport/simple_bp/SimpleDataReader.h:
        * tests/transport/simple_bp/SimpleDataWriter.cpp:
        * tests/transport/simple_bp/SimpleDataWriter.h:
        * tests/transport/simple_bp/SimplePublisher.cpp:
        * tests/transport/simple_bp/SimplePublisher.h:
        * tests/transport/simple_bp/SimpleSubscriber.cpp:
        * tests/transport/simple_bp/SimpleSubscriber.h:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp/pub_main.cpp:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp/sub_main.cpp:

          Modified the publisher to take a size parameter (-c ).

Tue Jul 12 14:33:53 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Increased the receive buffer size and corrected a comment.

Mon Jul 11 13:38:21 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dcps.mpb:
        * dds/DdsDcps.mpc:

          Set the library path correctly

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/transport/framework/TransportDefs.h:

          Change default values to account for correct memory usage.

Wed Jun 29 22:35:29 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/DataWriterImpl.cpp:
          Fixed array indexing.

        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/UDPListenerTest/DataReaderListener.cpp:
          Fixed issues with the data size.

Wed Jun 29 20:55:22 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
          Adding identifier option to the publisher.

Wed Jun 29 17:09:02 MST 2005 Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/TestStats.h:
        * performance-tests/DCPS/SimpleE2ETest/Writer.cpp:
        * performance-tests/DCPS/SimpleE2ETest/publisher.cpp:
        * performance-tests/DCPS/SimpleE2ETest/subscriber.cpp:
        * performance-tests/DCPS/TCPListenerTest/DataReaderListener.cpp:
        * performance-tests/DCPS/TCPListenerTest/TestStats.h:
        * performance-tests/DCPS/TCPListenerTest/Writer.cpp:
        * performance-tests/DCPS/TCPListenerTest/common.h:
        * performance-tests/DCPS/TCPListenerTest/publisher.cpp:
        * performance-tests/DCPS/TCPListenerTest/subscriber.cpp:
        * performance-tests/DCPS/UDPListenerTest/TestStats.h:
        * performance-tests/DCPS/UDPListenerTest/Writer.cpp:
        * performance-tests/DCPS/UDPListenerTest/common.h:
        * performance-tests/DCPS/UDPListenerTest/publisher.cpp:
        * performance-tests/DCPS/UDPListenerTest/subscriber.cpp:

          Changed to shift the data size when first passed in.  This
          fixes an issue with the tests not sending the correct amount of data.

Tue Jun 29 13:54:47 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DDS_realease_notes.txt:

          Update test section per fixes and split out of DDS from ocitao repository.

Wed Jun 29 11:16:05 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Definitions.h:
          Changed ACE_Message_Block allocator to use an ACE_Thread_Lock
          The message block's duplicate method was using the same
          allocator in different threads at the same time.

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
          Changed to remove all the associations when
          DataReader/DataWriter is deleted.

        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
          Changed to not send remove assocations call back.

Tue Jun 28 10:50:47 MST 2005  Scott Harris  <harris_s@ociweb.com>

        * DDS_realease_notes.txt:

          Add release notes to the repository.

Wed Jun 15 11:28:42 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * dds/DCPS/Service_Participant.h:

          Added include of tao/Version.h so can distinguish between DOC
          and OCI's repos.  This will need to be removed after the DOC's
          POA changes come into the OCI repo.

Tue Jun 14 16:31:47 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * bin/auto_run_tests.pl:
        * bin/dcps_tests.lst:
        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DdsDcps_pch.h:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/Service_Participant.h:
        * dds/InfoRepo/DcpsInfo_pch.h:
        * tests/DCPS/BuiltInTopic/main.cpp:
        * tests/DCPS/LivelinessTest/common.h:
        * tests/DCPS/MultiTopicTest/common.h:
        * tests/DCPS/unit/Main.cpp:

          Changed includes to work with the DOC repo.

        * tests/DCPS/DcpsIntegration/test.log:
        * tests/DCPS/FooTest3_1/pub_id.txt:
        * tests/DCPS/unit/test.log:

          Removed some log files that got checked in accidently.

Fri Jun 10 14:40:43 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * performance-tests/DCPS/SimpleE2ETest/run_test.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_long.pl:
        * performance-tests/DCPS/SimpleE2ETest/run_test_rejected.pl:
        * performance-tests/DCPS/TCPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPListenerTest/run_test.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test-2pubs.pl:
        * performance-tests/DCPS/UDPNoKeyTest/run_test.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/Compiler/idl_test1_main/run_test.pl:
        * tests/DCPS/Compiler/idl_test3_main/run_test.pl:
        * tests/DCPS/DCPSInfoRepo/run_test.pl:
        * tests/DCPS/DcpsIntegration/run_test-integration.pl:
        * tests/DCPS/DcpsIntegration/run_test-topic.pl:
        * tests/DCPS/DcpsIntegration/test.log:
        * tests/DCPS/FooTest2/obsolete_test.pl:
        * tests/DCPS/FooTest3/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test.pl:
        * tests/DCPS/FooTest3NoKey/special_build_test_mw.pl:
        * tests/DCPS/FooTest3_0/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test.pl:
        * tests/DCPS/FooTest3_1/run_test_nokey.pl:
        * tests/DCPS/FooTest3_2/run_test.pl:
        * tests/DCPS/FooTest4/run_test.pl:
        * tests/DCPS/FooTest4_0/run_test.pl:
        * tests/DCPS/FooTest5/run_test.pl:
        * tests/DCPS/FooTest5_0/run_test.pl:
        * tests/DCPS/LivelinessTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test.pl:
        * tests/DCPS/MultiTopicTest/run_test1.pl:
        * tests/DCPS/MultiTopicTest/run_test2.pl:
        * tests/DCPS/MultiTopicTest/run_test3.pl:
        * tests/DCPS/Serializer/run_test.pl:
        * tests/DCPS/SimpleFooTest/obsolete_test.pl:
        * tests/DCPS/unit/run_test.pl:
        * tests/DCPS/unit/test.log:
        * tests/transport/simple/run_test.pl:
        * tests/transport/simple_bp/run_test.pl:
        * tests/transport/simple_bp_rm/run_test.pl:
        * tests/transport/simple_n/run_test.pl:
        * tests/transport/udp_simple/run_test.pl:
        * tests/transport/udp_simple_n/run_test.pl:

          Changed tests to not depend on being under TAO_ROOT.
          They still depend on ACE_ROOT being defined to locate
          the PERLACE package.

Tue Jun 10 18:55:09 UTC 2005  Trevor Fields  <fields_t@ociweb.com>

          Moved files from a branch off of TAO 1.4a to this separate
          repository.
          All files in ACE_wrappers/TAO/orbsvcs/DDS and
                       ACE_wrappers/TAO/orbsvcs/orbsvcs/DDS and
                       ACE_wrappers/bin/DCPS
          were moved over.

          See the file $DDS_ROOT/history/ChangeLog-01 for the original
          developement history.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
