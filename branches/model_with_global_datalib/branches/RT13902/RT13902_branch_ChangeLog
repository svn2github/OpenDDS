Thu Feb 18 21:14:18 UTC 2010  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/AssociationData.h:

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/PriorityKey.h:
        * dds/DCPS/transport/framework/PriorityKey.inl:
        * dds/DCPS/transport/multicast/MulticastDataLink.h:
        * dds/DCPS/transport/multicast/MulticastDataLink.cpp:
        * dds/DCPS/transport/multicast/MulticastTransport.h:
        * dds/DCPS/transport/multicast/MulticastTransport.cpp:
        * dds/DCPS/transport/multicast/ReliableSession.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpConnection.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpDataLink.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.h:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/udp/UdpDataLink.cpp:
        
        
          Supported same transport pub-sub associations.
          - Added is_loopback and is_active flag to Datalink to help identify the
            active(pub) end or passive(sub) end. 
          - SimpleTCP creates seperate link for active and passive side only if they
            are attached to same transport.
          - UDP does not affect.
          - Multicast transport creates two links instead of single link. As before,
            each link could have multiple sessions. One link is for pub and one is for 
            sub.
                    
        * performance-tests/DCPS/dummyTCP/DummyTcpDataLink.cpp:

          Updated to accommodate with the DataLink change.
          
        * tests/DCPS/SharedTransport/TestCase.cpp:

          Added more debugging code.
          
        * bin/dcps_tests.lst:

          Added SharedTransport test cases.
