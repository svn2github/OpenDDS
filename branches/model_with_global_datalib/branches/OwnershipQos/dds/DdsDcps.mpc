// $Id$

project: taolib, portableserver, core, dcps_bits, coverage_optional, built_in_topic_support, dds4ccm_opendds {
  requires    += exceptions
  sharedname   = OpenDDS_Dcps
  dynamicflags = OPENDDS_DCPS_BUILD_DLL
  libout       = $(DDS_ROOT)/lib
  includes    += $(DDS_ROOT)
  pch_header   = DCPS/DdsDcps_pch.h
  pch_source   = DCPS/DdsDcps_pch.cpp
  macros      += NOMINMAX         //don't #define min and max in Win32 headers


  //The following is only to make the PCH work, client projects should not have
  //this as an include path.
  includes += $(DDS_ROOT)/dds

  verbatim(gnuace, extension, 1) {
    include $(DDS_ROOT)/rules.dds.GNU
  }

  idlflags += -Wb,pch_include=DCPS/DdsDcps_pch.h -Wb,export_macro=OpenDDS_Dcps_Export -Wb,export_include=dds/DCPS/dcps_export.h -I$(DDS_ROOT)

  Source_Files {
    DCPS
    DCPS/transport/framework
  }

  Header_Files {
    DCPS
  }

  Template_Files {
    DCPS
  }

  IDL_Files {
    // DDS specification defined
    //
    // Do not put DdsDcpsInfrastructure.idl here -- see below
    DdsDcpsDomain.idl
    DdsDcpsPublication.idl
    DdsDcpsSubscription.idl
    DdsDcpsTopic.idl
    DdsDcps.idl
    // OpenDDS specific below
    DdsDcpsInfo.idl
    DdsDcpsSubscriptionExt.idl
    DdsDcpsDataReaderRemote.idl
    DdsDcpsDataWriterRemote.idl
    DdsDcpsInfoUtils.idl
    DdsDcpsTypeSupportExt.idl
    DdsDcpsSubscriptionExt.idl
    DdsDcpsDomainExt.idl
  }

  IDL_Files {
    idlflags += -Gdcpsonly
    idlflags -= -Glem
    gendir = .
    CorbaSeq/*.idl
  }

  IDL_Files {
    idlflags += -Gdcps
    DdsDcpsGuid.idl
    DdsDcpsInfrastructure.idl
  }
}

project (DdsDcps_lem_gen) : dds4ccm_opendds, taoidldefaults {
  requires += dds4ccm_opendds
  after += DdsDcps
  idlflags += -I$(CIAO_ROOT)/connectors \
              -Wb,stub_export_macro=DDSDCPS_LEM_STUB_Export \
              -Wb,stub_export_include=DdsDcps_lem_stub_export.h -SS -I$(DDS_ROOT)

  IDL_Files {
     idlflags += -Gxhst
     DdsDcpsDomainE.idl
  }

  IDL_Files {
    DdsDcpsE.idl
    DdsDcpsInfrastructureE.idl
    DdsDcpsPublicationE.idl
    DdsDcpsSubscriptionE.idl
    DdsDcpsSubscriptionExtE.idl
    DdsDcpsTopicE.idl
    DdsDcpsTypeSupportExtE.idl
  }

  Source_Files {
  }
}

project (DdsDcps_lem_stub) : dcps, taolib {
  requires += dds4ccm_opendds
  after += DdsDcps DdsDcps_lem_gen
  includes += $(CIAO_ROOT)/connectors $(CIAO_ROOT)
  sharedname = OpenDDS_Dcps_lem_stub
  dynamicflags += DDSDCPS_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    DdsDcpsDomainEC.cpp
    DdsDcpsEC.cpp
    DdsDcpsInfrastructureEC.cpp
    DdsDcpsPublicationEC.cpp
    DdsDcpsSubscriptionEC.cpp
    DdsDcpsSubscriptionExtEC.cpp
    DdsDcpsTopicEC.cpp
    DdsDcpsTypeSupportExtEC.cpp
  }

  Header_Files {
    DdsDcpsDomainEC.h
    DdsDcpsEC.h
    DdsDcpsInfrastructureEC.h
    DdsDcpsPublicationEC.h
    DdsDcpsSubscriptionEC.h
    DdsDcpsSubscriptionExtEC.h
    DdsDcpsTopicEC.h
    DdsDcpsTypeSupportExtEC.h
  }
}

