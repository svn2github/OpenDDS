Wed Jul 30 19:19:21 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:

          Fixed a warning caused by incorrect return value.

Mon Jul 28 22:58:39 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DevGuideExamples/DCPS/Messenger/pub.ini:
        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/pub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/pub_udp.ini:
        * DevGuideExamples/DCPS/Messenger/run_corbaloc_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_ns_test.pl:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * DevGuideExamples/DCPS/Messenger/sub.ini:
        * DevGuideExamples/DCPS/Messenger/sub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger/sub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_reliable_mcast.ini:
        * DevGuideExamples/DCPS/Messenger/sub_udp.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub_udp.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/sub.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/sub_mcast.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/sub_udp.ini:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.h:
        * dds/DCPS/transport/ReliableMulticast/ReliableMulticastTransportImpl.inl:
        * dds/DCPS/transport/ReliableMulticast/detail/ReactivePacketSender.cpp:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportImpl.h:
        * dds/DCPS/transport/framework/TransportImpl.cpp:
        * dds/DCPS/transport/framework/TransportSendStrategy.cpp:
        * dds/DCPS/transport/simpleTCP/SimpleTcpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleMcastTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUdpTransport.cpp:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.h:
        * dds/DCPS/transport/simpleUnreliableDgram/SimpleUnreliableDgramTransport.inl:
        * examples/DCPS/DistributedContent/run_test.pl:
        * examples/DCPS/IntroductionToOpenDDS/pub_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/sub2_udp_conf.ini:
        * examples/DCPS/IntroductionToOpenDDS/sub_udp_conf.ini:
        * examples/DCPS/Messenger_IOGR_Imr/pub.ini:
        * examples/DCPS/Messenger_IOGR_Imr/run_test.pl:
        * examples/DCPS/Messenger_IOGR_Imr/sub.ini:
        * examples/DCPS/Messenger_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/pub_udp.ini:
        * performance-tests/DCPS/InfoRepo_population/run_test.pl:
        * performance-tests/DCPS/InfoRepo_population/sub.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_mcast.ini:
        * performance-tests/DCPS/InfoRepo_population/sub_udp.ini:
        * performance-tests/DCPS/Sync/SyncClient_i.h:
        * performance-tests/DCPS/Sync/SyncClient_i.cpp:
        * performance-tests/DCPS/TransportLatency/pub.ini:
        * performance-tests/DCPS/TransportLatency/pub_mcast.ini:
        * performance-tests/DCPS/TransportLatency/pub_reliable_mcast.ini:
        * performance-tests/DCPS/TransportLatency/pub_udp.ini:
        * performance-tests/DCPS/TransportLatency/run_corbaloc_test.pl:
        * performance-tests/DCPS/TransportLatency/run_ns_test.pl:
        * performance-tests/DCPS/TransportLatency/sub.ini:
        * performance-tests/DCPS/TransportLatency/sub_mcast.ini:
        * performance-tests/DCPS/TransportLatency/sub_reliable_mcast.ini:
        * performance-tests/DCPS/TransportLatency/sub_udp.ini:
        * performance-tests/DCPS/UDPListenerTest/run_test-1p1s.pl:
        * tests/DCPS/BuiltInTopic/run_test.pl:
        * tests/DCPS/CompatibilityTest/run_test.pl:
        * tests/DCPS/CorbaSeq/pub.ini:
        * tests/DCPS/CorbaSeq/sub.ini:
        * tests/DCPS/Crossplatform/Messenger_run_test.pl:
        * tests/DCPS/Federation/run_test.pl:
        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/NotifyTest/sub.ini:
        * tests/DCPS/Reconnect/publisher.cpp:
        * tests/DCPS/Reconnect/run_test.pl:
        * tests/DCPS/Reconnect/subscriber.cpp:
        * tests/DCPS/sub_init_loop/pub.ini:
        * tests/DCPS/sub_init_loop/sub.ini:
        * tests/transport/mcast_simple_n/run_test.pl:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:

          Merged in changes made in trunk between
          "Thu Jul 17 16:09:54 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>"
          and "Thu Jul 24 23:12:45 UTC 2008  Yan Dai  <dai_y@ociweb.com>"

Wed Jul 16 23:43:27 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/Federation/Publisher.cpp:
        * tests/DCPS/Federation/Subscriber.cpp:

          Made TheServiceParticipant->shutdown called after
          TheTransportFactory->release to fix crash due to nil orb
          during transport release.

Wed Jul 16 21:16:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/transport/framework/DataLink.h:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportConfiguration.h:
        * dds/DCPS/transport/framework/TransportConfiguration.inl:
        * dds/DCPS/transport/framework/TransportConfiguration.cpp:
        * dds/DCPS/transport/framework/TransportImpl.cpp:

          Supported configurable delay for datalink release after no associations.
          This is to fix disconnect problem happened when removing and adding
          association related to same datalink during short period. The new connection
          is established before remove_association call which results in new connection
          been disconnect.
          Removed keep_link support which can be replaced with long
          datalink_release_delay value.

        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:

          Added "notify_both_side" parameter to remove_associated_publication/subscription
          methods to allow remove_associations() invocation on both datareader
          and datawriter upon qos change. This intends to make the remove_associations
          call earlier than add_associations to avoid same datalink removing/adding timing
          issue.

        * DevGuideExamples/DCPS/Messenger/pub.ini:
        * DevGuideExamples/DCPS/Messenger/pub_ipv6.ini:
        * DevGuideExamples/DCPS/Messenger_ZeroCopy/pub.ini:
        * examples/DCPS/Messenger_IOGR_Imr/pub.ini:
        * examples/DCPS/Messenger_Imr/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub.ini:
        * performance-tests/DCPS/InfoRepo_population/pub2.ini:
        * performance-tests/DCPS/TransportLatency/pub.ini:
        * tests/DCPS/BuiltInTopicTest/pub.ini:
        * tests/DCPS/Deadline/pub.ini:
        * tests/DCPS/Lifespan/pub.ini:
        * tests/DCPS/NotifyTest/pub.ini:
        * tests/DCPS/Partition/pub.ini:
        * tests/DCPS/PersistentDurability/pub.ini:
        * tests/DCPS/Prst_delayed_subscriber/pub.ini:
        * tests/DCPS/Reconnect/pub.ini:
        * tests/DCPS/Reconnect/sub.ini:
        * tests/DCPS/SetQosDeadline/pub.ini:
        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/TransientDurability/pub.ini:
        * tests/DCPS/TransientLocalTest/pub.ini:

          Replaced keep_link with datalink_release_delay. If the
          application requires to keep the datalink alive for longer
          time, it could configure datalink_release_delay to a big
          value.

        * tests/DCPS/FooTest3_0/SubDriver.cpp:
        * tests/DCPS/FooTest3_1/SubDriver.cpp:
        * tests/DCPS/FooTest3_2/SubDriver.cpp:
        * tests/DCPS/FooTest4/main.cpp:
        * tests/DCPS/MultiRepoTest/TestMonitor.cpp:
        * tests/DCPS/MultiRepoTest/TestSystem.cpp:
        * tests/transport/mcast_simple/PubDriver.cpp:
        * tests/transport/mcast_simple/SubDriver.cpp:
        * tests/transport/mcast_simple_n/PubDriver.cpp:
        * tests/transport/mcast_simple_n/SubDriver.cpp:
        * tests/transport/simple/PubDriver.cpp:
        * tests/transport/simple/SubDriver.cpp:
        * tests/transport/simple_bp/PubDriver.cpp:
        * tests/transport/simple_bp/SubDriver.cpp:
        * tests/transport/simple_bp_rm/PubDriver.cpp:
        * tests/transport/simple_bp_rm/SubDriver.cpp:
        * tests/transport/simple_n/PubDriver.cpp:
        * tests/transport/simple_n/SubDriver.cpp:
        * tests/transport/udp_simple/PubDriver.cpp:
        * tests/transport/udp_simple/SubDriver.cpp:
        * tests/transport/udp_simple_n/PubDriver.cpp:
        * tests/transport/udp_simple_n/SubDriver.cpp:

          The changes are to trigger the TheServiceParticipant singleton
          created and has ORB created or provided so it can be accessed
          during transport shutdown. The TheServiceParticipant->shutdown
          should always be called after TheTransportFactory->release.

Sun Jul 13 19:08:42 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:

          Removed Stack_Trace header which is not needed.

Sat Jul 12 20:30:01 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/DCPS/DataReaderImpl.h:
        * dds/DCPS/DataReaderImpl.cpp:

          Added overloaded notify_subscription_lost() function passing with
          instance handles instead of writer ids and use it in
          remove_association(). This would fix a warning in
          remove_associations() that lookup cached BIT data failed.

        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:

          Made on_publication_lost() called once in notify_publication_lost
          instead of for every lost publication.

Sat Jul 12 08:18:54 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:

          - Corrected ACE_Unbounded_Set iterator use to fix access
            violation.
          - Made remove_association always be called before
            add_association when re-evaluating the associations.
            Otherwise, the new association has trouble to connect
            when the removed associations and added association using
            the same datalink. This would fix SetQoSPartition test
            failure.

Fri Jul 11 22:34:56 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/DCPS/SetQosDeadline/pub.ini:
        * tests/DCPS/SetQosDeadline/sub.ini:
        * tests/DCPS/SetQosPartition/pub.ini:
        * tests/DCPS/SetQosPartition/sub.ini:

          Added files missed in previous commit.

Fri Jul 11 20:12:47 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * tests/DCPS/FooType/FooType.mpc:

          Corrected the *TypeSupportImpl.cpp name.

Fri Jul 11 19:44:44 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * examples/DCPS/DistributedContent/DistributedContent.mpc:
        * tests/DCPS/FooType/FooType.mpc:
        * tests/DCPS/ViewState/ViewState.mpc:
        * tests/DCPS/ZeroCopyRead/ZeroCopyRead.mpc:

          Merged in changes
          Sat Jun 28 20:41:45 UTC 2008  Adam Mitz  <mitza@ociweb.com>
          from trunk to this branch.

Fri Jul 11 19:19:33 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * DDS_TAO.mwc:
        * DevGuideExamples/DCPS/Messenger/publisher.cpp:
        * DevGuideExamples/DCPS/Messenger/run_test.pl:
        * DevGuideExamples/DCPS/Messenger/subscriber.cpp:
        * dds/DCPS/DataWriterImpl.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * tests/DCPS/sub_init_loop/subscriber.cpp:

          Merged following Changes from trunk to this branch.

          Wed Jun 25 18:39:10 UTC 2008  Yan Dai  <dai_y@ociweb.com>
          Fri Jun 27 19:14:01 UTC 2008  Steve Totten  <totten_s@ociweb.com>
          Fri Jun 27 22:14:26 UTC 2008  Mike Martinez  <martinez_m@ociweb.com>
          Wed Jul  2 19:36:12 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * RT12349_branch_ChangeLog:

          Removed this file which is replaced by DDS-1.1.1_ChangeLog as
          branch is renamed.

Fri Jul 11 16:23:22 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/DCPS_Utils.cpp:
        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:

          Fixed warnings.

Fri Jul 11 07:46:02 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * bin/dcps_tests.lst:

          Added deadline and partition qos change tests.

Fri Jul 11 07:14:41 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        These changes made DCPSInfoRepo re-evaluate the compatibility and
        associations when QoS change is made. The QoS RxO and changeable
        property determine whether re-evaluation is needed for a specific
        QoS.

        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/PublisherImpl.cpp:
        * dds/DCPS/SubscriberImpl.cpp:
        * dds/DCPS/TopicImpl.cpp:

          Verify QoS update return from DCPSInfoRepo. If it's incompatiable
          (return 0) then set_qos() return RETCODE_ERROR.


        * dds/DdsDcpsInfo.idl:

          Made update_<entity>_qos function have return value to indicate if the
          provided QoS passes compatibility checking.

        * dds/InfoRepo/DCPSInfo_i.h:
        * dds/InfoRepo/DCPSInfo_i.cpp:
        * dds/InfoRepo/DCPS_IR_Participant.h:
        * dds/InfoRepo/DCPS_IR_Participant.cpp:
        * dds/InfoRepo/DCPS_IR_Publication.h:
        * dds/InfoRepo/DCPS_IR_Publication.cpp:
        * dds/InfoRepo/DCPS_IR_Subscription.h:
        * dds/InfoRepo/DCPS_IR_Subscription.cpp:
        * dds/InfoRepo/DCPS_IR_Topic.h:
        * dds/InfoRepo/DCPS_IR_Topic.cpp:
        * dds/InfoRepo/DCPS_IR_Topic_Description.h:
        * dds/InfoRepo/DCPS_IR_Topic_Description.cpp:
        * dds/InfoRepo/DCPS_Utils.h:
        * dds/InfoRepo/DCPS_Utils.cpp:

          Supported re-evaluation of the compatibility and association of
          changed QoS. If changed QoS is not compatible then it will return
          error code to set_qos and the QoS will not be changed(e.g. deadline).
          If the changed QoS is compatible or do not need be compatible
          (e.g. partition) and affect association, then it may result in
          removing existing associations or adding new associations.

        * tests/DCPS/SetQosDeadline/DataReaderListener.h:
        * tests/DCPS/SetQosDeadline/DataReaderListener.cpp:
        * tests/DCPS/SetQosDeadline/Messenger.idl:
        * tests/DCPS/SetQosDeadline/README:
        * tests/DCPS/SetQosDeadline/SetQosDeadline.mpc:
        * tests/DCPS/SetQosDeadline/Writer.h:
        * tests/DCPS/SetQosDeadline/Writer.cpp:
        * tests/DCPS/SetQosDeadline/domain_ids:
        * tests/DCPS/SetQosDeadline/publisher.cpp:
        * tests/DCPS/SetQosDeadline/run_test.pl:
        * tests/DCPS/SetQosDeadline/subscriber.cpp:
        * tests/DCPS/SetQosDeadline/tcp.conf:

          Added deadline QoS change test to test if compatibility and association
          are affected by the change.

        * tests/DCPS/SetQosPartition/DataReaderListener.h:
        * tests/DCPS/SetQosPartition/DataReaderListener.cpp:
        * tests/DCPS/SetQosPartition/Messenger.idl:
        * tests/DCPS/SetQosPartition/README:
        * tests/DCPS/SetQosPartition/SetQosPartition.mpc:
        * tests/DCPS/SetQosPartition/Writer.h:
        * tests/DCPS/SetQosPartition/Writer.cpp:
        * tests/DCPS/SetQosPartition/domain_ids:
        * tests/DCPS/SetQosPartition/publisher.cpp:
        * tests/DCPS/SetQosPartition/run_test.pl:
        * tests/DCPS/SetQosPartition/subscriber.cpp:
        * tests/DCPS/SetQosPartition/tcp.conf:

          Added patition QoS change test to test if compatibility and association
          are affected by the change.
