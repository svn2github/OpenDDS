/*
 * $Id$
 *
 * Copyright 2009 Object Computing, Inc.
 *
 * Distributed under the OpenDDS License.
 * See: http://www.opendds.org/license.html
 */

#ifndef TAO_DDS_DCPS_TOPIC_IDL
#define TAO_DDS_DCPS_TOPIC_IDL

#include "dds/DdsDcpsInfrastructure.idl"

module DDS {
    local interface DomainParticipant;
    local interface Topic;

    // ----------------------------------------------------------------------
    local interface TopicDescription {
                string get_type_name();
                string get_name();
                DomainParticipant get_participant();
                };

    local interface TopicListener : Listener {
                void on_inconsistent_topic(
                        in Topic the_topic,
                        in InconsistentTopicStatus status);
                };

    local interface Topic : Entity, TopicDescription {
        ReturnCode_t set_qos(
            in TopicQos qos);
        ReturnCode_t get_qos( 
            inout TopicQos qos);
        ReturnCode_t set_listener(
            in TopicListener a_listener, 
            in StatusMask mask);
        TopicListener get_listener();
        // Access the status
        ReturnCode_t get_inconsistent_topic_status(
            inout InconsistentTopicStatus a_status);
    };

    local interface TypeSupport {
                 //        ReturnCode_t register_type(
                 //                in DomainParticipant domain, 
                 //                in string type_name);
                 //        
                  
                 //        string get_type_name ();
                };
};

#endif /* TAO_DDS_DCPS_TOPIC_IDL */
