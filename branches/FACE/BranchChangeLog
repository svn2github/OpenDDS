Mon Dec 15 23:02:05 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_ts_defaults.mpb:
        * rules.dds.GNU:

          Allow the location of opendds_idl to be specified in
          user_macros.GNU instead of always using $DDS_ROOT/bin.
          Useful for cross-compiles and safety profile.

        * dds/CORBA/tao/LocalObject.cpp:
        * dds/CORBA/tao/Object.cpp:
        * dds/DCPS/BuiltInTopicUtils.h:
        * dds/DCPS/ConfigUtils.h:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Definitions.h:
        * dds/DCPS/FileSystemStorage.h:
        * dds/DCPS/FileSystemStorage.cpp:
        * dds/DCPS/GuidConverter.h:
        * dds/DCPS/RcObject_T.h:
        * dds/DCPS/StaticIncludes.h:
        * dds/DCPS/transport/framework/TransportSendListener.h:
        * dds/DCPS/transport/framework/TransportSendListener.cpp:

          Safety profile build and trying to compile
          with the ancient LynxOS compiler.

Fri Dec 12 22:15:43 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dds_corba.mpb:

          Build after OpenDDS_Corba

        * dds/CORBA/tao/LocalObject.cpp:
        * dds/CORBA/tao/Object.cpp:

          Overwrite with 1.6a versions.

Fri Dec 12 19:56:34 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dds_corba.mpb:
        * MPC/config/dds_taolib.mpb:

          Update to link in OpenDDS_Corba lib when NOT linking TAO

        * dds/CORBA/tao:
        * dds/CORBA/tao/LocalObject.cpp:
        * dds/CORBA/tao/Object.cpp:
        * dds/CORBA/tao/OpenDDS_Corba.mpc:

          New files for start of OpenDDS_Corba lib.

Fri Dec 12 14:51:33 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Registered_Data_Types.h:

          Needed an extra #include for the non-safety-profile build.

Thu Dec 11 22:33:07 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Definitions.h:
        * dds/DCPS/PoolAllocator.h:
        * dds/DCPS/SafetyProfilePool.h:
        * dds/DCPS/Service_Participant.h:
        * dds/DCPS/Service_Participant.cpp:

          Added a memory pool for the Safety Profile.
          This version doesn't attempt to reuse the free()'d memory.

        * dds/DCPS/Registered_Data_Types.h:
        * dds/DCPS/Registered_Data_Types.cpp:
        * dds/DCPS/WriteDataContainer.h:

          Adapted a few C++ STL containers for use with the memory pool.
          Completely overhauled the Registered_Data_Types, but its interface
          stayed the same except for one detail:
          - the object returned from lookup() obeys normal refcounting rules

        * dds/DCPS/DomainParticipantImpl.cpp:
        * dds/DCPS/MultiTopicImpl.cpp:
        * dds/DCPS/Discovery.cpp:
        * dds/DCPS/RTPS/RtpsDiscovery.cpp:

          Adjust to the fact that Registered_Data_Types->lookup()
          now deals with the reference count correctly.

Thu Dec 11 18:48:35 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dcps_default_discovery.mpb:

          New base to include dcps_inforepodiscovery or dcps_rtps optionally,
          according to no_opendds_safety_profile feature.

        * MPC/config/dcpsexe.mpb:

          Use dcps_default_discovery as a base.

Thu Dec 11 18:17:50 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dcps_rtpsexe.mpb:
        * MPC/config/dcpsexe.mpb:

          Remove reliance on taoexe.

        * MPC/config/dds_taolib.mpb:

          Add acelib as a base when building safety profile.

Wed Dec 10 21:56:51 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dds_taolib.mpb:

          Crud, two revisions ago was correct.

Wed Dec 10 20:22:42 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dds_taolib.mpb:

          Reversed logic of pervious feature.  Also, when not using taolib
          as a base, we still need to make $TAO_ROOT part of includes.

Wed Dec 10 18:43:40 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * rules.dds.GNU:

          This file needs to set the safety profile feature for gnuace builds.

        * FACE/README.txt:
        * FACE/TS.hpp:
        * FACE/TS_common.hpp:
        * FACE/common.hpp:
        * FACE/tss.hpp:
        * MPC/modules/TYPESUPPORTHelper.pm:
        * dds/FACE/FaceTSS.h:
        * dds/FACE/FaceTSS.cpp:
        * dds/idl/be_global.cpp:
        * dds/idl/opendds_idl.mpc:
        * dds/idl/ts_generator.cpp:
        * tests/FACE/Messenger/Publisher/Publisher.cpp:
        * tests/FACE/Messenger/Subscriber/Subscriber.cpp:

          Updated FACE support to match spec 2.1 (conformance test 2.1.2).

        * face:

          Removed these files (renamed to FACE).

Wed Dec 10 18:40:52 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dcps.mpb:
        * MPC/config/dds_taolib.mpb:

          portableserver should also be excluded when building
          opendds_safety_profile.

Wed Dec 10 17:46:40 UTC 2014  Jeff Schmitz  <schmitzj@ociweb.com>

        * MPC/config/dds_taolib.mpb:

          New feature, to optionally inherit taolib

        * MPC/config/dcps.mpb:
        * dds/DdsDcps.mpc:

          Inherit from dds_taolib, so that taolib is skipped for
          safety profile builds.

Tue Dec  9 16:51:52 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:
        * dds/DCPS/Service_Participant.cpp:
        * dds/InfoRepo/DCPSInfoRepo.mpc:

          Safety Profile excludes DCPSInfoRepo.

Tue Dec  9 16:26:03 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_optional_features.mpb:
        * dds/idl/opendds_idl.mpc:

          MPC feature for Safety Profile.  Set no_opendds_safety_profile=0.

        * bin/dcps_tests.lst:
        * tests/DCPS/Reliability/Boilerplate.cpp:
        * tests/DCPS/Reliability/run_test.pl:

          Revert prior change to Reliabilty and disable the test on this
          branch.  Other problems with default History and non-default
          Resource Limits need to be resolved in trunk first before we can
          adapt this test to DDS minimum profile (only default History).

Fri Dec  5 21:02:11 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * bin/dcps_tests.lst:
        * tests/DCPS/CompatibilityTest/run_test.pl:
        * tests/DCPS/ManyTopicMultiProcess/publisher.cpp:
        * tests/DCPS/ManyTopicMultiProcess/subscriber.cpp:
        * tests/DCPS/ManyTopicTest/publisher.cpp:
        * tests/DCPS/ManyTopicTest/subscriber.cpp:
        * tests/DCPS/RegisterInstance/register_instance.cpp:
        * tests/DCPS/Rejects/publisher.cpp:
        * tests/DCPS/Rejects/subscriber.cpp:
        * tests/DCPS/Reliability/Boilerplate.cpp:
        * tests/DCPS/Reliability/run_test.pl:
        * tests/DCPS/Thrasher/ParticipantTask.cpp:
        * tests/DCPS/Thrasher/Subscriber.cpp:

          Adapted tests to the Minimum Profile build (in particular, removing
          history depth either all the time or when the profile is disabled).
          The following tests need more work: Reliability, Rejects,
          ManualAssertLiveliness.

Thu Dec  4 20:33:58 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * Merged from trunk r6617 through r6636.

Thu Dec  4 15:39:28 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_ts_defaults.mpb:
        * MPC/config/opendds_face.mpb:
        * MPC/modules/TYPESUPPORTHelper.pm:
        * bin/dcps_tests.lst:
        * dds/DCPS/Service_Participant.cpp:
        * dds/DCPS/TypeSupportImpl.h:
        * dds/FACE/FaceTSS.h:
        * dds/FACE/FaceTSS.cpp:
        * dds/FACE/OpenDDS_FACE.mpc:
        * dds/idl/be_global.h:
        * dds/idl/be_global.cpp:
        * dds/idl/be_produce.cpp:
        * dds/idl/be_util.cpp:
        * dds/idl/ts_generator.h:
        * dds/idl/ts_generator.cpp:
        * face/OpenDDS_FACE_Export.h:
        * face/README.txt:
        * face/common.hpp:
        * face/tss.hpp:
        * tests/FACE/Messenger/Idl/FaceMessage.idl:
        * tests/FACE/Messenger/Idl/FaceMessengerIdl.mpc:
        * tests/FACE/Messenger/Idl/FaceMessenger_Export.h:
        * tests/FACE/Messenger/Publisher/FaceMessengerPublisher.mpc:
        * tests/FACE/Messenger/Publisher/Publisher.cpp:
        * tests/FACE/Messenger/Subscriber/FaceMessengerSubscriber.mpc:
        * tests/FACE/Messenger/Subscriber/Subscriber.cpp:
        * tests/FACE/Messenger/run_test.pl:

          Initial support for the Future Airborne Capability Environment,
          specifically the Transport Services Segment API.  See face/README.txt
          for details.  Since there is no support for a config file in this
          version, the library is hard-coded to use the types in the Messenger
          test and the configurations for that test.

Mon Nov 24 22:28:30 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * performance-tests/Bench/src/Options.cpp:
        * tools/modeling/codegen/model/Config.cpp:

          Resolved compiler warnings when building with --no-ownership-profile.

Mon Nov 24 22:01:52 UTC 2014  Adam Mitz  <mitza@ociweb.com>

        * BranchChangeLog:

          New branch, new BranchChangeLog.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
