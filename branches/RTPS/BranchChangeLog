Wed Sep  7 22:34:36 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/transport/rtps_udp/OpenDDS_Rtps_Udp.mpc:
        * dds/DCPS/transport/rtps_udp/RtpsUdp.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdp.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.inl:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpDataLink_rch.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpInst.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpLoader.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpLoader.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpReceiveStrategy_rch.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy.cpp:
        * dds/DCPS/transport/rtps_udp/RtpsUdpSendStrategy_rch.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.h:
        * dds/DCPS/transport/rtps_udp/RtpsUdpTransport.cpp:
        * dds/DCPS/transport/rtps_udp/Rtps_Udp_Export.h:
        * dds/DCPS/transport/rtps_udp/rtps_udp.rc:

          Added an initial (skeletal) OpenDDS transport type for RTPS over UDP.
          UDP/IP (capable of IPv4 and IPv6; both unicast and multicast) is the
          only PSM in the RTPS specification (v2.1) but other PSMs, or
          implementation-specific transport types, may be used in the future.

Wed Sep  7 18:19:48 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/dcps_rtps.mpb:

          Added an mpb for use by projects that depend on the OpenDDS_Rtps lib.

        * dds/DCPS/RTPS/RtpsMessageTypes.idl:

          Whitespace fix only.

        * dds/idl/marshal_generator.cpp:

          Fixed some corner cases with Parameter and ParameterList.

        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          The wchar member must be initialized to avoid seeing values outside
          the unicode BMP on systems with 4-byte wchar_t.

        * bin/dcps_tests.lst:
        * tests/DCPS/RtpsMessages/RtpsMessagesTest.cpp:
        * tests/DCPS/RtpsMessages/RtpsMessages.mpc:
        * tests/DCPS/RtpsMessages/run_test.pl:

          New test for RTPS Message serialization.

        * dds/DCPS/RTPS/Test.cpp:

          Removed this file.  Its contents were moved to RtpsMessagesTest.cpp.

Thu Sep  1 17:37:46 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/RTPS/BaseMessageTypes.h:
        * dds/DCPS/RTPS/RtpsBaseMessageTypes.idl:
        * dds/DCPS/RTPS/RtpsMessageTypes.idl:
        * dds/DCPS/RTPS/Test.cpp:
        * dds/DCPS/RTPS/rtps.mpc:

          Completed IDL for RTPS Message types.

        * dds/DCPS/Serializer.h:
        * dds/DCPS/Serializer.inl:

          Implemented a skip() function used to read ahead and ignore bytes.
          read_array() and write_array() don't need to swap if size is 1.

        * dds/idl/marshal_generator.cpp:

          Added special handling for RTPS types that don't follow CDR
          serialization rules: ParameterList, Parameter, SequenceNumberSet,
          FragmentNumberSet, DataSubmessage, DataFragSubmessage,
          InfoReplySubmessage, InfoTimestampSubmessage, InfoReplyIp4Submessage.

Tue Aug 30 22:27:54 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/GuidUtils.h:

          Updated to version 2.1 of RTPS spec.
          Not much has changed in this area.

        * dds/DCPS/RTPS/BaseMessageTypes.h:
        * dds/DCPS/RTPS/MessageTypes.h:
        * dds/DCPS/RTPS/RtpsBaseMessageTypes.idl:
        * dds/DCPS/RTPS/RtpsMessageTypes.idl:

          Updated RTPS structure and constant definitions.

        * dds/DdsDcpsGuid.idl:

          Added more ENTITYKIND_BUILTIN_* constants from RTPS spec.

        * dds/DdsDcpsInfrastructure.idl:

          Even with DDS_HAS_MINIMUM_BIT, RTPS needs to see the Built-In Topic
          struct definitions for use with RTPS discovery.

        * dds/DCPS/Definitions.h:
        * dds/idl/marshal_generator.cpp:

          Fixed warnings.

        * java/dds/OpenDDS/DCPS:

          Ignored Java files generated from DdsDcpsGuid.idl (svn:ignore only).

Tue Aug 30 14:05:01 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/DataReaderImpl.cpp:
        * dds/DCPS/DataSampleHeader.h:
        * dds/DCPS/DataSampleHeader.inl:
        * dds/DCPS/DataSampleHeader.cpp:
        * dds/DCPS/DataWriterImpl.cpp:
        * dds/DCPS/Definitions.h:
        * dds/idl/CPPTemplate.txt:
        * dds/idl/marshal_generator.cpp:
        * dds/idl/metaclass_generator.cpp:
        * dds/DCPS/Serializer.h:
        * dds/DCPS/Serializer.inl:
        * dds/DCPS/transport/framework/DataLink.cpp:
        * dds/DCPS/transport/framework/TransportHeader.inl:

          gen_find_size() and gen_max_marshaled_size() now account for
          optional alignment.
          Use ACE_CDR_BYTE_ORDER instead of TAO_ENCAP_BYTE_ORDER.

        * dds/DCPS/RTPS/BaseMessageUtils.h:
        * dds/DCPS/RTPS/Test.cpp:

          Use CDR alignment for RTPS key hashing.

        * tools/dissector/packet-opendds.cpp:

          Updated for new gen_find_size() function signature.

        * tests/DCPS/Compiler/idl_test1_main/main.cpp:
        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          Test gen_find_size() and gen_max_marshaled_size() with and without
          alignment.

        * tests/DCPS/KeyTest/IsBounded.cpp:
        * tests/DCPS/KeyTest/KeyMarshaling.cpp:

          Updated for new gen_find_size() function signature and CDR-compliant
          wchar serialization.

Thu Aug 25 22:11:16 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * tools/dissector/sample_dissector.cpp:

          Updated to account for CDR-compliant wchar and wstring serialization.

Thu Aug 25 21:51:34 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/Serializer/Serializer.mpc:
        * tests/DCPS/Serializer/AlignmentTest.cpp:
        * tests/DCPS/Serializer/SerializerTest.cpp:

          Added tests for proper data alignment according to CDR rules.

Thu Aug 25 19:21:03 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Serializer.h:
        * dds/DCPS/Serializer.inl:
        * dds/DCPS/Serializer.cpp:
        * dds/idl/marshal_generator.cpp:

          wchar and wstring serialization are now CDR-compliant.
          Since RTPS leaves the encoding unspecified, we are using UTF-16BE.
          Systems with ACE_SIZEOF_WCHAR == 4 could pass characters larger than
          16-bits.  As of now these are errors (surrogate pairs are not used),
          but in the future this could be implemented.
          Made (almost) every un-typed method private.
          Now using regular C++ bool to represent success/failure return values.

        * tests/DCPS/Serializer/SerializerTest.cpp:
        * tests/DCPS/Serializer_wstring/publisher.cpp:

          Cleaned up test output and removed temp code.

Wed Aug 24 21:59:19 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Serializer.inl:
        * dds/DCPS/Serializer.cpp:

          Fixed wstring serialization to always use a byte count and not
          a character count.  wstring (and wchar) are still not CDR-compliant.

        * tests/DCPS/Serializer_wstring/DataReaderListener.cpp:
        * tests/DCPS/Serializer_wstring/publisher.cpp:

          Fixed ACE logging format characters and output a message for wchar.

Wed Aug 24 18:59:52 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/RTPS:

          Copied the trunk version -- it didn't come over in the merge.

Wed Aug 24 18:36:46 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * dds/DCPS/Serializer.h:
        * dds/DCPS/Serializer.inl:
        * dds/DCPS/Serializer.cpp:

          - Strings (narrow only) are now CDR-compliant: they include the null
            terminator byte even though there is no reason to have it.
          - Alignment (CDR rules) can be enabled with an optional 3rd
            constructor argument.
          - Removed unused methods and data members.

        * dds/idl/marshal_generator.cpp:

          gen_max_marshaled_size() and gen_find_size() need to know about the
          modified string serialization.
          Note that these are not yet updated for alignment.

        * tests/DCPS/Compiler/idl_test1_main/main.cpp:
        * tests/DCPS/Compiler/idl_test3_main/main.cpp:

          Updated expected sizes now that strings are CDR-compliant.

        * tests/DCPS/Serializer/SerializerTest.cpp:

          Test that the Serializer with alignment options enabled still
          generates a byte stream that can be de-serialized correctly.
          Still need to test that all CDR alignment rules were followed.

        * tools/dissector/sample_dissector.cpp:

          Updated to account for changed string serialization.  Needs testing.

        * dds/DCPS/transport/multicast/BestEffortSession.h:

          Fixed an artifact of svn merge (duplicated lines).

        * tests/DCPS/Serializer/.cvsignore:

          Removed this file.

Wed Aug 24 16:20:08 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * tests/DCPS/KeyTest:

          Re-added from trunk.  Merging this directory didn't work so it was
          removed in the last commit.

Wed Aug 24 16:01:03 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * Merged from trunk r4455 through r4906.
          Previous work on this branch was incorporated in the trunk as of
          Wed May 18 21:32:29 UTC 2011  Adam Mitz  <mitza@ociweb.com>
          and therefore the previous BranchChangeLog entries have been cleared.
          They can now be found in docs/history/ChangeLog-RTPS-1.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
